D:\Anaconda\envs\tf_gpu\python.exe D:/An2Sem1M/sweai/lab2/FunctionalProgramGenerator/main_tree.py
[Algorithm start]
[Initial pool]
(CANDIDATE)[id: 0
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 2 y))
 nr_nodes: 4]
(CANDIDATE)[id: 1
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`x`#`#`2`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (* (* x 2) 2))
 nr_nodes: 6]
(CANDIDATE)[id: 2
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 3
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 4
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 5
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 6
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 7
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`2`#`#`y`#`#`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 2 y) 2) y))
 nr_nodes: 8]
(CANDIDATE)[id: 8
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 9
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 10
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 2 x))
 nr_nodes: 4]
(CANDIDATE)[id: 11
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 12
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 13
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`x`#`#`y`#`#`(+ ? ?)`2`#`#`(* ? ?)`(+ ? ?)`y`#`#`2`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ (+ x y) (+ 2 (* (+ y 2) 3))))
 nr_nodes: 12]
(CANDIDATE)[id: 14
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 15
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 16
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 17
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 18
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 19
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 20
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 21
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ x y))
 nr_nodes: 4]
(CANDIDATE)[id: 22
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 23
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 24
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* x y))
 nr_nodes: 4]
(CANDIDATE)[id: 25
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 26
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 27
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 28
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 29
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* y y))
 nr_nodes: 4]
(CANDIDATE)[id: 30
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 31
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 32
 encoding: (defun my_func (x y) ?)`(+ ? ?)`2`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 2 x))
 nr_nodes: 4]
(CANDIDATE)[id: 33
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 34
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 35
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`(+ ? ?)`y`#`#`2`#`#`(+ ? ?)`x`#`#`2`#`#`(* ? ?)`(* ? ?)`(+ ? ?)`3`#`#`2`#`#`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* (+ (+ y 2) (+ x 2)) (* (* (+ 3 2) x) y)))
 nr_nodes: 16]
(CANDIDATE)[id: 36
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 37
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 38
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 39
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 40
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 41
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 42
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 43
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 44
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ x 3))
 nr_nodes: 4]
(CANDIDATE)[id: 45
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 2 y))
 nr_nodes: 4]
(CANDIDATE)[id: 46
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 47
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 48
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`y`#`#`y`#`#`3`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ y y) 3) y))
 nr_nodes: 8]
(CANDIDATE)[id: 49
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 50
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 51
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 52
 encoding: (defun my_func (x y) ?)`(+ ? ?)`2`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ 2 2))
 nr_nodes: 4]
(CANDIDATE)[id: 53
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 54
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 55
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 56
 encoding: (defun my_func (x y) ?)`(+ ? ?)`3`#`#`(* ? ?)`2`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ 3 (* 2 2)))
 nr_nodes: 6]
(CANDIDATE)[id: 57
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 58
 encoding: (defun my_func (x y) ?)`(+ ? ?)`3`#`#`(+ ? ?)`(+ ? ?)`3`#`#`3`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 3 (+ (+ 3 3) y)))
 nr_nodes: 8]
(CANDIDATE)[id: 59
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 60
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 61
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ y 3))
 nr_nodes: 4]
(CANDIDATE)[id: 62
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`(* ? ?)`2`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ x (* 2 x)))
 nr_nodes: 6]
(CANDIDATE)[id: 63
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`(+ ? ?)`x`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (* 2 (+ x 3)))
 nr_nodes: 6]
(CANDIDATE)[id: 64
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`(+ ? ?)`(+ ? ?)`2`#`#`y`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (* y (+ (+ 2 y) 2)))
 nr_nodes: 8]
(CANDIDATE)[id: 65
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 66
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 67
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ x 2))
 nr_nodes: 4]
(CANDIDATE)[id: 68
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(* ? ?)`y`#`#`y`#`#`(+ ? ?)`2`#`#`3`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ (* (* y y) (+ 2 3)) 2))
 nr_nodes: 10]
(CANDIDATE)[id: 69
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 70
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`y`#`#`x`#`#`(+ ? ?)`x`#`#`x`#`#`(* ? ?)`(+ ? ?)`3`#`#`y`#`#`(+ ? ?)`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ y x) (+ x x)) (* (+ 3 y) (+ y x))))
 nr_nodes: 16]
(CANDIDATE)[id: 71
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(* ? ?)`x`#`#`x`#`#`x`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ (* (* x x) x) 3))
 nr_nodes: 8]
(CANDIDATE)[id: 72
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 73
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 74
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`x`#`#`3`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* (* x 3) y))
 nr_nodes: 6]
(CANDIDATE)[id: 75
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ y 3))
 nr_nodes: 4]
(CANDIDATE)[id: 76
 encoding: (defun my_func (x y) ?)`(+ ? ?)`2`#`#`(* ? ?)`3`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 2 (* 3 y)))
 nr_nodes: 6]
(CANDIDATE)[id: 77
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`x`#`#`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ x x) y))
 nr_nodes: 6]
(CANDIDATE)[id: 78
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 79
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 80
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 81
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ y 3))
 nr_nodes: 4]
(CANDIDATE)[id: 82
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`(+ ? ?)`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* y (+ 2 y)))
 nr_nodes: 6]
(CANDIDATE)[id: 83
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 84
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 85
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 86
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 87
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 88
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 89
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 90
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 91
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`(+ ? ?)`(* ? ?)`x`#`#`x`#`#`(+ ? ?)`3`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ x (+ (* x x) (+ 3 2))))
 nr_nodes: 10]
(CANDIDATE)[id: 92
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 2 x))
 nr_nodes: 4]
(CANDIDATE)[id: 93
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 94
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 95
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 96
 encoding: (defun my_func (x y) ?)`(+ ? ?)`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 2 y))
 nr_nodes: 4]
(CANDIDATE)[id: 97
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 98
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 99
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 100
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 101
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 102
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 103
 encoding: (defun my_func (x y) ?)`(* ? ?)`3`#`#`(+ ? ?)`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 3 (+ 2 y)))
 nr_nodes: 6]
(CANDIDATE)[id: 104
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 105
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 106
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 107
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* y y))
 nr_nodes: 4]
(CANDIDATE)[id: 108
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (* 2 2))
 nr_nodes: 4]
(CANDIDATE)[id: 109
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`(* ? ?)`2`#`#`y`#`#`(* ? ?)`3`#`#`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* (+ (* 2 y) (* 3 2)) y))
 nr_nodes: 10]
(CANDIDATE)[id: 110
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`y`#`#`(+ ? ?)`y`#`#`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (* y (+ y y)) x))
 nr_nodes: 8]
(CANDIDATE)[id: 111
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ y 3))
 nr_nodes: 4]
(CANDIDATE)[id: 112
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 113
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* x x))
 nr_nodes: 4]
(CANDIDATE)[id: 114
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`(* ? ?)`(+ ? ?)`(* ? ?)`2`#`#`y`#`#`3`#`#`(+ ? ?)`2`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (* x (* (+ (* 2 y) 3) (+ 2 3))))
 nr_nodes: 12]
(CANDIDATE)[id: 115
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (* 2 3))
 nr_nodes: 4]
(CANDIDATE)[id: 116
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 117
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 118
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ y 3))
 nr_nodes: 4]
(CANDIDATE)[id: 119
 encoding: (defun my_func (x y) ?)`(* ? ?)`3`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (* 3 2))
 nr_nodes: 4]
(CANDIDATE)[id: 120
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 121
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 122
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`(* ? ?)`3`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 2 (* 3 x)))
 nr_nodes: 6]
(CANDIDATE)[id: 123
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 124
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 125
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(* ? ?)`2`#`#`(+ ? ?)`x`#`#`x`#`#`x`#`#`(+ ? ?)`(+ ? ?)`x`#`#`3`#`#`(+ ? ?)`3`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (* (* 2 (+ x x)) x) (+ (+ x 3) (+ 3 x))))
 nr_nodes: 16]
(CANDIDATE)[id: 126
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 127
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 128
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 129
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 130
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 2 x))
 nr_nodes: 4]
(CANDIDATE)[id: 131
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 132
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 133
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 134
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 135
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 136
 encoding: (defun my_func (x y) ?)`(* ? ?)`3`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (* 3 2))
 nr_nodes: 4]
(CANDIDATE)[id: 137
 encoding: (defun my_func (x y) ?)`(+ ? ?)`2`#`#`(* ? ?)`(* ? ?)`y`#`#`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 2 (* (* y y) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 138
 encoding: (defun my_func (x y) ?)`(+ ? ?)`3`#`#`(* ? ?)`x`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ 3 (* x 2)))
 nr_nodes: 6]
(CANDIDATE)[id: 139
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`(* ? ?)`3`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* x (* 3 x)))
 nr_nodes: 6]
(CANDIDATE)[id: 140
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`2`#`#`3`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 2 3) y))
 nr_nodes: 6]
(CANDIDATE)[id: 141
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 142
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (* 2 2))
 nr_nodes: 4]
(CANDIDATE)[id: 143
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`(* ? ?)`(+ ? ?)`3`#`#`3`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (* y (* (+ 3 3) 3)))
 nr_nodes: 8]
(CANDIDATE)[id: 144
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ y 2))
 nr_nodes: 4]
(CANDIDATE)[id: 145
 encoding: (defun my_func (x y) ?)`(* ? ?)`3`#`#`(* ? ?)`x`#`#`(* ? ?)`3`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 3 (* x (* 3 y))))
 nr_nodes: 8]
(CANDIDATE)[id: 146
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* x y))
 nr_nodes: 4]
(CANDIDATE)[id: 147
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`(* ? ?)`(* ? ?)`y`#`#`3`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* y (* (* y 3) y)))
 nr_nodes: 8]
(CANDIDATE)[id: 148
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 149
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ y 2))
 nr_nodes: 4]
(CANDIDATE)[id: 150
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 151
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* y y))
 nr_nodes: 4]
(CANDIDATE)[id: 152
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 153
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`x`#`#`(+ ? ?)`3`#`#`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ x (+ 3 2)) y))
 nr_nodes: 8]
(CANDIDATE)[id: 154
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 155
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 156
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 157
 encoding: (defun my_func (x y) ?)`(* ? ?)`3`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (* 3 2))
 nr_nodes: 4]
(CANDIDATE)[id: 158
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 159
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 160
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (* y 2))
 nr_nodes: 4]
(CANDIDATE)[id: 161
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 162
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`y`#`#`2`#`#`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* y 2) x) x))
 nr_nodes: 8]
(CANDIDATE)[id: 163
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`y`#`#`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (* y y) x))
 nr_nodes: 6]
(CANDIDATE)[id: 164
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 165
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`(* ? ?)`x`#`#`x`#`#`y`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (* (+ (* x x) y) 3))
 nr_nodes: 8]
(CANDIDATE)[id: 166
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`y`#`#`2`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (* (+ y 2) 2))
 nr_nodes: 6]
(CANDIDATE)[id: 167
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 168
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 169
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 170
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 171
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 172
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 173
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 174
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 175
 encoding: (defun my_func (x y) ?)`(+ ? ?)`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 2 y))
 nr_nodes: 4]
(CANDIDATE)[id: 176
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ x y))
 nr_nodes: 4]
(CANDIDATE)[id: 177
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 178
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`(+ ? ?)`3`#`#`2`#`#`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* (* (+ 3 2) 2) y))
 nr_nodes: 8]
(CANDIDATE)[id: 179
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 180
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 181
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 182
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 183
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 184
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 185
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 186
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 187
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 188
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 189
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 190
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 191
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`(+ ? ?)`x`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (* y (+ x 3)))
 nr_nodes: 6]
(CANDIDATE)[id: 192
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`3`#`#`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* (+ 3 y) y))
 nr_nodes: 6]
(CANDIDATE)[id: 193
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 194
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ x 3))
 nr_nodes: 4]
(CANDIDATE)[id: 195
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 196
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 197
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`(+ ? ?)`x`#`#`(+ ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 2 (+ x (+ x y))))
 nr_nodes: 8]
(CANDIDATE)[id: 198
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 199
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`2`#`#`3`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ (* 2 3) 2))
 nr_nodes: 6]
(CANDIDATE)[id: 200
 encoding: (defun my_func (x y) ?)`(* ? ?)`3`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 3 y))
 nr_nodes: 4]
(CANDIDATE)[id: 201
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 202
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 203
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(* ? ?)`3`#`#`x`#`#`3`#`#`(* ? ?)`(* ? ?)`3`#`#`2`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ (* (* 3 x) 3) (* (* 3 2) 3)))
 nr_nodes: 12]
(CANDIDATE)[id: 204
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`(* ? ?)`2`#`#`3`#`#`y`#`#`(+ ? ?)`(+ ? ?)`x`#`#`(* ? ?)`y`#`#`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* (+ (* 2 3) y) (+ (+ x (* y x)) y)))
 nr_nodes: 14]
(CANDIDATE)[id: 205
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 206
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ x 2))
 nr_nodes: 4]
(CANDIDATE)[id: 207
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`(+ ? ?)`3`#`#`x`#`#`y`#`#`(+ ? ?)`(* ? ?)`y`#`#`2`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (* (+ 3 x) y) (+ (* y 2) x)))
 nr_nodes: 12]
(CANDIDATE)[id: 208
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 209
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 210
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* x x))
 nr_nodes: 4]
(CANDIDATE)[id: 211
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`2`#`#`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* (+ 2 2) y))
 nr_nodes: 6]
(CANDIDATE)[id: 212
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ x 3))
 nr_nodes: 4]
(CANDIDATE)[id: 213
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 214
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 215
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 216
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 217
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 218
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (* 2 2))
 nr_nodes: 4]
(CANDIDATE)[id: 219
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 220
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 221
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`(+ ? ?)`(+ ? ?)`2`#`#`2`#`#`(* ? ?)`2`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* x (+ (+ 2 2) (* 2 x))))
 nr_nodes: 10]
(CANDIDATE)[id: 222
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 223
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`x`#`#`(* ? ?)`3`#`#`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (* x (* 3 x)) y))
 nr_nodes: 8]
(CANDIDATE)[id: 224
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 225
 encoding: (defun my_func (x y) ?)`(+ ? ?)`3`#`#`(* ? ?)`(* ? ?)`x`#`#`(+ ? ?)`x`#`#`2`#`#`(* ? ?)`y`#`#`(+ ? ?)`2`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 3 (* (* x (+ x 2)) (* y (+ 2 x)))))
 nr_nodes: 14]
(CANDIDATE)[id: 226
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`(* ? ?)`3`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ y (* 3 x)))
 nr_nodes: 6]
(CANDIDATE)[id: 227
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 228
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* x y))
 nr_nodes: 4]
(CANDIDATE)[id: 229
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(+ ? ?)`y`#`#`x`#`#`(+ ? ?)`y`#`#`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (+ y x) (+ y 2)) y))
 nr_nodes: 10]
(CANDIDATE)[id: 230
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 231
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 232
 encoding: (defun my_func (x y) ?)`(+ ? ?)`3`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ 3 3))
 nr_nodes: 4]
(CANDIDATE)[id: 233
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 234
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`(* ? ?)`2`#`#`3`#`#`2`#`#`(* ? ?)`(+ ? ?)`3`#`#`x`#`#`(* ? ?)`3`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (+ (* 2 3) 2) (* (+ 3 x) (* 3 x))))
 nr_nodes: 14]
(CANDIDATE)[id: 235
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 236
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 237
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 238
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`3`#`#`(+ ? ?)`(* ? ?)`y`#`#`3`#`#`3`#`#`(* ? ?)`y`#`#`(* ? ?)`(+ ? ?)`3`#`#`y`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (* (* 3 (+ (* y 3) 3)) (* y (* (+ 3 y) 3))))
 nr_nodes: 16]
(CANDIDATE)[id: 239
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 240
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 241
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 242
 encoding: (defun my_func (x y) ?)`(+ ? ?)`2`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 2 x))
 nr_nodes: 4]
(CANDIDATE)[id: 243
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`(* ? ?)`(+ ? ?)`(+ ? ?)`x`#`#`x`#`#`x`#`#`(+ ? ?)`2`#`#`(* ? ?)`3`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* y (* (+ (+ x x) x) (+ 2 (* 3 x)))))
 nr_nodes: 14]
(CANDIDATE)[id: 244
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 245
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 246
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 247
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 248
 encoding: (defun my_func (x y) ?)`(+ ? ?)`3`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 3 y))
 nr_nodes: 4]
(CANDIDATE)[id: 249
 encoding: (defun my_func (x y) ?)`(* ? ?)`3`#`#`(+ ? ?)`(* ? ?)`x`#`#`3`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 3 (+ (* x 3) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 250
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 251
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 252
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 253
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 254
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 255
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 256
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 257
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 258
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 259
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 260
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 261
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 262
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 263
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 264
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 265
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 266
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 267
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`(* ? ?)`(* ? ?)`y`#`#`x`#`#`(* ? ?)`y`#`#`y`#`#`y`#`#`(+ ? ?)`y`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (* (* (* (* y x) (* y y)) y) (+ y 3)))
 nr_nodes: 14]
(CANDIDATE)[id: 268
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`y`#`#`x`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (* (* y x) 3))
 nr_nodes: 6]
(CANDIDATE)[id: 269
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 270
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 271
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 272
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 273
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 274
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 275
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 276
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 277
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`x`#`#`x`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ (* x x) 2))
 nr_nodes: 6]
(CANDIDATE)[id: 278
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 279
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 280
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 281
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 282
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 283
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 284
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 285
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ x x))
 nr_nodes: 4]
(CANDIDATE)[id: 286
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 287
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`(+ ? ?)`(+ ? ?)`3`#`#`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 2 (+ (+ 3 2) y)))
 nr_nodes: 8]
(CANDIDATE)[id: 288
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 289
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 290
 encoding: (defun my_func (x y) ?)`(+ ? ?)`3`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ 3 2))
 nr_nodes: 4]
(CANDIDATE)[id: 291
 encoding: (defun my_func (x y) ?)`(+ ? ?)`2`#`#`(* ? ?)`3`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 2 (* 3 x)))
 nr_nodes: 6]
(CANDIDATE)[id: 292
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 293
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 294
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 295
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 296
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 297
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 298
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`3`#`#`3`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (+ 3 3) x))
 nr_nodes: 6]
(CANDIDATE)[id: 299
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 300
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 301
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`(* ? ?)`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ y (* y x)))
 nr_nodes: 6]
(CANDIDATE)[id: 302
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`(* ? ?)`3`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 2 (* 3 y)))
 nr_nodes: 6]
(CANDIDATE)[id: 303
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`x`#`#`(* ? ?)`y`#`#`2`#`#`(* ? ?)`3`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ (+ x (* y 2)) (* 3 2)))
 nr_nodes: 10]
(CANDIDATE)[id: 304
 encoding: (defun my_func (x y) ?)`(+ ? ?)`2`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ 2 3))
 nr_nodes: 4]
(CANDIDATE)[id: 305
 encoding: (defun my_func (x y) ?)`(* ? ?)`3`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 3 y))
 nr_nodes: 4]
(CANDIDATE)[id: 306
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 307
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 308
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`3`#`#`(+ ? ?)`2`#`#`2`#`#`(+ ? ?)`3`#`#`(+ ? ?)`y`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 3 (+ 2 2)) (+ 3 (+ y 2))))
 nr_nodes: 12]
(CANDIDATE)[id: 309
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 310
 encoding: (defun my_func (x y) ?)`(+ ? ?)`3`#`#`(+ ? ?)`y`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ 3 (+ y 2)))
 nr_nodes: 6]
(CANDIDATE)[id: 311
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ y y))
 nr_nodes: 4]
(CANDIDATE)[id: 312
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 313
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 314
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 315
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 316
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 317
 encoding: (defun my_func (x y) ?)`(* ? ?)`3`#`#`(* ? ?)`2`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (* 3 (* 2 2)))
 nr_nodes: 6]
(CANDIDATE)[id: 318
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`y`#`#`x`#`#`(+ ? ?)`2`#`#`x`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* y x) (+ 2 x)) 2))
 nr_nodes: 10]
(CANDIDATE)[id: 319
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 320
 encoding: (defun my_func (x y) ?)`(* ? ?)`3`#`#`(* ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 3 (* x y)))
 nr_nodes: 6]
(CANDIDATE)[id: 321
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 322
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 323
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 324
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 325
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 326
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`y`#`#`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (* y x) y))
 nr_nodes: 6]
(CANDIDATE)[id: 327
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ x 3))
 nr_nodes: 4]
(CANDIDATE)[id: 328
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 329
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`(* ? ?)`2`#`#`y`#`#`y`#`#`y`#`#`(+ ? ?)`(+ ? ?)`(* ? ?)`2`#`#`3`#`#`3`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ (* 2 y) y) y) (+ (+ (* 2 3) 3) 2)))
 nr_nodes: 16]
(CANDIDATE)[id: 330
 encoding: (defun my_func (x y) ?)`(+ ? ?)`2`#`#`(* ? ?)`(* ? ?)`y`#`#`x`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ 2 (* (* y x) 2)))
 nr_nodes: 8]
(CANDIDATE)[id: 331
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 332
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 333
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 334
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`(* ? ?)`x`#`#`2`#`#`y`#`#`(* ? ?)`y`#`#`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ (* x 2) y) (* y y)) y))
 nr_nodes: 12]
(CANDIDATE)[id: 335
 encoding: (defun my_func (x y) ?)`(+ ? ?)`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 2 y))
 nr_nodes: 4]
(CANDIDATE)[id: 336
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ x 3))
 nr_nodes: 4]
(CANDIDATE)[id: 337
 encoding: (defun my_func (x y) ?)`(* ? ?)`3`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (* 3 2))
 nr_nodes: 4]
(CANDIDATE)[id: 338
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 339
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 340
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 341
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 342
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 343
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 344
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 345
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 346
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 347
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`y`#`#`3`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (* y 3) x))
 nr_nodes: 6]
(CANDIDATE)[id: 348
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 349
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (* 2 3))
 nr_nodes: 4]
(CANDIDATE)[id: 350
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`2`#`#`(+ ? ?)`y`#`#`3`#`#`(* ? ?)`(* ? ?)`3`#`#`2`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 2 (+ y 3)) (* (* 3 2) x)))
 nr_nodes: 12]
(CANDIDATE)[id: 351
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 352
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 353
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 354
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (* 2 2))
 nr_nodes: 4]
(CANDIDATE)[id: 355
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 356
 encoding: (defun my_func (x y) ?)`(+ ? ?)`2`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ 2 2))
 nr_nodes: 4]
(CANDIDATE)[id: 357
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 358
 encoding: (defun my_func (x y) ?)`(+ ? ?)`3`#`#`(* ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 3 (* x y)))
 nr_nodes: 6]
(CANDIDATE)[id: 359
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`(+ ? ?)`2`#`#`(* ? ?)`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ x (+ 2 (* y x))))
 nr_nodes: 8]
(CANDIDATE)[id: 360
 encoding: (defun my_func (x y) ?)`(+ ? ?)`3`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 3 x))
 nr_nodes: 4]
(CANDIDATE)[id: 361
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 362
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(+ ? ?)`y`#`#`x`#`#`2`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (+ y x) 2) 3))
 nr_nodes: 8]
(CANDIDATE)[id: 363
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 364
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 365
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* x y))
 nr_nodes: 4]
(CANDIDATE)[id: 366
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 367
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 368
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 369
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`(* ? ?)`2`#`#`2`#`#`(+ ? ?)`2`#`#`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* (* (* 2 2) (+ 2 x)) y))
 nr_nodes: 10]
(CANDIDATE)[id: 370
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 371
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 372
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 373
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 374
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`(+ ? ?)`(+ ? ?)`x`#`#`y`#`#`(* ? ?)`3`#`#`2`#`#`(+ ? ?)`(+ ? ?)`2`#`#`2`#`#`x`#`#`(* ? ?)`(* ? ?)`x`#`#`(* ? ?)`y`#`#`3`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* (+ (+ (+ x y) (* 3 2)) (+ (+ 2 2) x)) (* (* x (* y 3)) y)))
 nr_nodes: 22]
(CANDIDATE)[id: 375
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 376
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 377
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 378
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`2`#`#`y`#`#`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 2 y) x) y))
 nr_nodes: 8]
(CANDIDATE)[id: 379
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 380
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 381
 encoding: (defun my_func (x y) ?)`(* ? ?)`3`#`#`(+ ? ?)`3`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 3 (+ 3 x)))
 nr_nodes: 6]
(CANDIDATE)[id: 382
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 383
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 384
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 385
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`y`#`#`(+ ? ?)`x`#`#`(+ ? ?)`x`#`#`y`#`#`(+ ? ?)`2`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ (+ y (+ x (+ x y))) (+ 2 3)))
 nr_nodes: 12]
(CANDIDATE)[id: 386
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 387
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 388
 encoding: (defun my_func (x y) ?)`2`#`#`#
 s_expr: (defun my_func (x y) 2)
 nr_nodes: 2]
(CANDIDATE)[id: 389
 encoding: (defun my_func (x y) ?)`(+ ? ?)`2`#`#`(+ ? ?)`x`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ 2 (+ x 2)))
 nr_nodes: 6]
(CANDIDATE)[id: 390
 encoding: (defun my_func (x y) ?)`3`#`#`#
 s_expr: (defun my_func (x y) 3)
 nr_nodes: 2]
(CANDIDATE)[id: 391
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 392
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 393
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ y x))
 nr_nodes: 4]
(CANDIDATE)[id: 394
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 395
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`(* ? ?)`(* ? ?)`2`#`#`3`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ x (* (* 2 3) 3)))
 nr_nodes: 8]
(CANDIDATE)[id: 396
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* y x))
 nr_nodes: 4]
(CANDIDATE)[id: 397
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 398
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 399
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
[Generation 0]
[Computing fitness]
[(1.375, 197), (1.25, 7), (1.25, 71), (1.25, 153), (1.25, 362), (1.125, 48), (1.125, 58), (1.125, 64), (1.125, 162), (1.125, 165), (1.125, 378), (1.0, 110), (1.0, 137), (1.0, 143), (1.0, 145), (1.0, 147), (1.0, 178), (1.0, 223), (1.0, 249), (1.0, 287), (1.0, 330), (1.0, 359), (1.0, 395), (0.875, 166), (0.875, 229), (0.75, 1), (0.75, 63), (0.75, 76), (0.75, 138), (0.75, 211), (0.75, 226), (0.75, 358), (0.625, 56), (0.625, 68), (0.625, 82), (0.625, 91), (0.625, 122), (0.625, 140), (0.625, 191), (0.625, 199), (0.625, 221), (0.625, 298), (0.625, 301), (0.625, 302), (0.625, 310), (0.625, 317), (0.625, 318), (0.625, 326), (0.5, 44), (0.5, 62), (0.5, 74), (0.5, 77), (0.5, 103), (0.5, 109), (0.5, 139), (0.5, 163), (0.5, 192), (0.5, 194), (0.5, 212), (0.5, 268), (0.5, 277), (0.5, 291), (0.5, 303), (0.5, 320), (0.5, 327), (0.5, 336), (0.5, 347), (0.5, 360), (0.5, 369), (0.5, 381), (0.5, 389), (0.375, 52), (0.375, 61), (0.375, 75), (0.375, 81), (0.375, 108), (0.375, 111), (0.375, 115), (0.375, 118), (0.375, 119), (0.375, 136), (0.375, 142), (0.375, 157), (0.375, 218), (0.375, 232), (0.375, 248), (0.375, 290), (0.375, 304), (0.375, 337), (0.375, 349), (0.375, 354), (0.375, 356), (0.29166666666666663, 15), (0.29166666666666663, 27), (0.29166666666666663, 30), (0.29166666666666663, 33), (0.29166666666666663, 41), (0.29166666666666663, 47), (0.29166666666666663, 51), (0.29166666666666663, 53), (0.29166666666666663, 65), (0.29166666666666663, 69), (0.29166666666666663, 78), (0.29166666666666663, 84), (0.29166666666666663, 88), (0.29166666666666663, 93), (0.29166666666666663, 98), (0.29166666666666663, 120), (0.29166666666666663, 124), (0.29166666666666663, 134), (0.29166666666666663, 150), (0.29166666666666663, 161), (0.29166666666666663, 170), (0.29166666666666663, 171), (0.29166666666666663, 173), (0.29166666666666663, 174), (0.29166666666666663, 177), (0.29166666666666663, 179), (0.29166666666666663, 183), (0.29166666666666663, 185), (0.29166666666666663, 186), (0.29166666666666663, 187), (0.29166666666666663, 189), (0.29166666666666663, 217), (0.29166666666666663, 222), (0.29166666666666663, 225), (0.29166666666666663, 233), (0.29166666666666663, 235), (0.29166666666666663, 236), (0.29166666666666663, 240), (0.29166666666666663, 246), (0.29166666666666663, 256), (0.29166666666666663, 259), (0.29166666666666663, 271), (0.29166666666666663, 272), (0.29166666666666663, 282), (0.29166666666666663, 283), (0.29166666666666663, 288), (0.29166666666666663, 294), (0.29166666666666663, 295), (0.29166666666666663, 297), (0.29166666666666663, 299), (0.29166666666666663, 313), (0.29166666666666663, 316), (0.29166666666666663, 323), (0.29166666666666663, 324), (0.29166666666666663, 325), (0.29166666666666663, 339), (0.29166666666666663, 340), (0.29166666666666663, 366), (0.29166666666666663, 368), (0.29166666666666663, 373), (0.29166666666666663, 380), (0.29166666666666663, 383), (0.29166666666666663, 384), (0.29166666666666663, 390), (0.25, 0), (0.25, 10), (0.25, 13), (0.25, 21), (0.25, 24), (0.25, 29), (0.25, 32), (0.25, 45), (0.25, 67), (0.25, 92), (0.25, 96), (0.25, 107), (0.25, 113), (0.25, 114), (0.25, 130), (0.25, 144), (0.25, 146), (0.25, 149), (0.25, 151), (0.25, 160), (0.25, 175), (0.25, 176), (0.25, 200), (0.25, 203), (0.25, 206), (0.25, 207), (0.25, 210), (0.25, 228), (0.25, 242), (0.25, 285), (0.25, 305), (0.25, 308), (0.25, 311), (0.25, 334), (0.25, 335), (0.25, 350), (0.25, 365), (0.25, 385), (0.25, 393), (0.25, 396), (0.16666666666666666, 2), (0.16666666666666666, 3), (0.16666666666666666, 4), (0.16666666666666666, 5), (0.16666666666666666, 6), (0.16666666666666666, 8), (0.16666666666666666, 9), (0.16666666666666666, 11), (0.16666666666666666, 12), (0.16666666666666666, 14), (0.16666666666666666, 16), (0.16666666666666666, 17), (0.16666666666666666, 18), (0.16666666666666666, 19), (0.16666666666666666, 20), (0.16666666666666666, 22), (0.16666666666666666, 23), (0.16666666666666666, 25), (0.16666666666666666, 26), (0.16666666666666666, 28), (0.16666666666666666, 31), (0.16666666666666666, 34), (0.16666666666666666, 36), (0.16666666666666666, 37), (0.16666666666666666, 38), (0.16666666666666666, 39), (0.16666666666666666, 40), (0.16666666666666666, 42), (0.16666666666666666, 43), (0.16666666666666666, 46), (0.16666666666666666, 49), (0.16666666666666666, 50), (0.16666666666666666, 54), (0.16666666666666666, 55), (0.16666666666666666, 57), (0.16666666666666666, 59), (0.16666666666666666, 60), (0.16666666666666666, 66), (0.16666666666666666, 72), (0.16666666666666666, 73), (0.16666666666666666, 79), (0.16666666666666666, 80), (0.16666666666666666, 83), (0.16666666666666666, 85), (0.16666666666666666, 86), (0.16666666666666666, 87), (0.16666666666666666, 89), (0.16666666666666666, 90), (0.16666666666666666, 94), (0.16666666666666666, 95), (0.16666666666666666, 97), (0.16666666666666666, 99), (0.16666666666666666, 100), (0.16666666666666666, 101), (0.16666666666666666, 102), (0.16666666666666666, 104), (0.16666666666666666, 105), (0.16666666666666666, 106), (0.16666666666666666, 112), (0.16666666666666666, 116), (0.16666666666666666, 117), (0.16666666666666666, 121), (0.16666666666666666, 123), (0.16666666666666666, 126), (0.16666666666666666, 127), (0.16666666666666666, 128), (0.16666666666666666, 129), (0.16666666666666666, 131), (0.16666666666666666, 132), (0.16666666666666666, 133), (0.16666666666666666, 135), (0.16666666666666666, 141), (0.16666666666666666, 148), (0.16666666666666666, 152), (0.16666666666666666, 154), (0.16666666666666666, 155), (0.16666666666666666, 156), (0.16666666666666666, 158), (0.16666666666666666, 159), (0.16666666666666666, 164), (0.16666666666666666, 167), (0.16666666666666666, 168), (0.16666666666666666, 169), (0.16666666666666666, 172), (0.16666666666666666, 180), (0.16666666666666666, 181), (0.16666666666666666, 182), (0.16666666666666666, 184), (0.16666666666666666, 188), (0.16666666666666666, 190), (0.16666666666666666, 193), (0.16666666666666666, 195), (0.16666666666666666, 196), (0.16666666666666666, 198), (0.16666666666666666, 201), (0.16666666666666666, 202), (0.16666666666666666, 204), (0.16666666666666666, 205), (0.16666666666666666, 208), (0.16666666666666666, 209), (0.16666666666666666, 213), (0.16666666666666666, 214), (0.16666666666666666, 215), (0.16666666666666666, 216), (0.16666666666666666, 219), (0.16666666666666666, 220), (0.16666666666666666, 224), (0.16666666666666666, 227), (0.16666666666666666, 230), (0.16666666666666666, 231), (0.16666666666666666, 234), (0.16666666666666666, 237), (0.16666666666666666, 239), (0.16666666666666666, 241), (0.16666666666666666, 243), (0.16666666666666666, 244), (0.16666666666666666, 245), (0.16666666666666666, 247), (0.16666666666666666, 250), (0.16666666666666666, 251), (0.16666666666666666, 252), (0.16666666666666666, 253), (0.16666666666666666, 254), (0.16666666666666666, 255), (0.16666666666666666, 257), (0.16666666666666666, 258), (0.16666666666666666, 260), (0.16666666666666666, 261), (0.16666666666666666, 262), (0.16666666666666666, 263), (0.16666666666666666, 264), (0.16666666666666666, 265), (0.16666666666666666, 266), (0.16666666666666666, 267), (0.16666666666666666, 269), (0.16666666666666666, 270), (0.16666666666666666, 273), (0.16666666666666666, 274), (0.16666666666666666, 275), (0.16666666666666666, 276), (0.16666666666666666, 278), (0.16666666666666666, 279), (0.16666666666666666, 280), (0.16666666666666666, 281), (0.16666666666666666, 284), (0.16666666666666666, 286), (0.16666666666666666, 289), (0.16666666666666666, 292), (0.16666666666666666, 293), (0.16666666666666666, 296), (0.16666666666666666, 300), (0.16666666666666666, 306), (0.16666666666666666, 307), (0.16666666666666666, 309), (0.16666666666666666, 312), (0.16666666666666666, 314), (0.16666666666666666, 315), (0.16666666666666666, 319), (0.16666666666666666, 321), (0.16666666666666666, 322), (0.16666666666666666, 328), (0.16666666666666666, 331), (0.16666666666666666, 332), (0.16666666666666666, 333), (0.16666666666666666, 338), (0.16666666666666666, 341), (0.16666666666666666, 342), (0.16666666666666666, 343), (0.16666666666666666, 344), (0.16666666666666666, 345), (0.16666666666666666, 346), (0.16666666666666666, 348), (0.16666666666666666, 351), (0.16666666666666666, 352), (0.16666666666666666, 353), (0.16666666666666666, 355), (0.16666666666666666, 357), (0.16666666666666666, 361), (0.16666666666666666, 363), (0.16666666666666666, 364), (0.16666666666666666, 367), (0.16666666666666666, 370), (0.16666666666666666, 371), (0.16666666666666666, 372), (0.16666666666666666, 375), (0.16666666666666666, 376), (0.16666666666666666, 377), (0.16666666666666666, 379), (0.16666666666666666, 382), (0.16666666666666666, 386), (0.16666666666666666, 387), (0.16666666666666666, 388), (0.16666666666666666, 391), (0.16666666666666666, 392), (0.16666666666666666, 394), (0.16666666666666666, 397), (0.16666666666666666, 398), (0.16666666666666666, 399), (0.125, 35), (0.125, 70), (0.125, 125), (0.125, 238), (0.125, 329), (0.07142857142857142, 374)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 197
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`(+ ? ?)`x`#`#`(+ ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 2 (+ x (+ x y))))
 nr_nodes: 8]
(CANDIDATE)[id: 7
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`2`#`#`y`#`#`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 2 y) 2) y))
 nr_nodes: 8]
(CANDIDATE)[id: 71
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(* ? ?)`x`#`#`x`#`#`x`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ (* (* x x) x) 3))
 nr_nodes: 8]
(CANDIDATE)[id: 153
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`x`#`#`(+ ? ?)`3`#`#`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ x (+ 3 2)) y))
 nr_nodes: 8]
(CANDIDATE)[id: 362
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(+ ? ?)`y`#`#`x`#`#`2`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (+ y x) 2) 3))
 nr_nodes: 8]
[Generation 1]
[Computing fitness]
[(1.375, 197), (1.25, 7), (1.25, 71), (1.25, 401), (1.25, 362), (1.25, 153), (1.125, 162), (1.125, 432), (1.125, 58), (1.125, 165), (1.125, 403), (1.125, 407), (1.125, 378), (1.125, 48), (1.125, 64), (1.0, 413), (1.0, 110), (1.0, 414), (1.0, 137), (1.0, 359), (1.0, 287), (1.0, 249), (1.0, 402), (1.0, 143), (1.0, 408), (1.0, 178), (1.0, 223), (1.0, 404), (1.0, 330), (1.0, 145), (1.0, 147), (1.0, 395), (1.0, 420), (0.875, 166), (0.875, 229), (0.75, 437), (0.75, 1), (0.75, 211), (0.75, 63), (0.75, 358), (0.75, 226), (0.75, 434), (0.75, 76), (0.75, 138), (0.75, 419), (0.625, 310), (0.625, 82), (0.625, 302), (0.625, 428), (0.625, 191), (0.625, 318), (0.625, 425), (0.625, 221), (0.625, 317), (0.625, 326), (0.625, 418), (0.625, 68), (0.625, 56), (0.625, 406), (0.625, 91), (0.625, 301), (0.625, 122), (0.625, 199), (0.625, 422), (0.625, 421), (0.625, 298), (0.625, 140), (0.5, 62), (0.5, 411), (0.5, 163), (0.5, 192), (0.5, 320), (0.5, 439), (0.5, 446), (0.5, 436), (0.5, 433), (0.5, 423), (0.5, 389), (0.5, 381), (0.5, 139), (0.5, 369), (0.5, 103), (0.5, 268), (0.5, 212), (0.5, 74), (0.5, 291), (0.5, 44), (0.5, 336), (0.5, 347), (0.5, 303), (0.5, 109), (0.5, 447), (0.5, 410), (0.5, 441), (0.5, 327), (0.5, 77), (0.5, 417), (0.5, 444), (0.5, 430), (0.5, 277), (0.5, 360), (0.5, 194), (0.375, 449), (0.375, 232), (0.375, 118), (0.375, 108), (0.375, 136), (0.375, 356), (0.375, 61), (0.375, 458), (0.375, 142), (0.375, 119), (0.375, 218), (0.375, 349), (0.375, 75), (0.375, 453), (0.375, 450), (0.375, 443), (0.375, 115), (0.375, 448), (0.375, 304), (0.375, 52), (0.375, 111), (0.375, 454), (0.375, 456), (0.375, 354), (0.375, 157), (0.375, 455), (0.375, 248), (0.375, 81), (0.375, 337), (0.375, 290), (0.375, 460), (0.29166666666666663, 174), (0.29166666666666663, 47), (0.29166666666666663, 485), (0.29166666666666663, 88), (0.29166666666666663, 282), (0.29166666666666663, 65), (0.29166666666666663, 183), (0.29166666666666663, 468), (0.29166666666666663, 246), (0.29166666666666663, 236), (0.29166666666666663, 489), (0.29166666666666663, 471), (0.29166666666666663, 297), (0.29166666666666663, 185), (0.29166666666666663, 494), (0.29166666666666663, 463), (0.29166666666666663, 161), (0.29166666666666663, 120), (0.29166666666666663, 124), (0.29166666666666663, 53), (0.29166666666666663, 299), (0.29166666666666663, 390), (0.29166666666666663, 373), (0.29166666666666663, 323), (0.29166666666666663, 41), (0.29166666666666663, 33), (0.29166666666666663, 283), (0.29166666666666663, 27), (0.29166666666666663, 295), (0.29166666666666663, 470), (0.29166666666666663, 173), (0.29166666666666663, 150), (0.29166666666666663, 170), (0.29166666666666663, 134), (0.29166666666666663, 325), (0.29166666666666663, 259), (0.29166666666666663, 316), (0.29166666666666663, 271), (0.29166666666666663, 462), (0.29166666666666663, 217), (0.29166666666666663, 466), (0.29166666666666663, 222), (0.29166666666666663, 368), (0.29166666666666663, 235), (0.29166666666666663, 179), (0.29166666666666663, 461), (0.29166666666666663, 478), (0.29166666666666663, 93), (0.29166666666666663, 256), (0.29166666666666663, 481), (0.29166666666666663, 473), (0.29166666666666663, 491), (0.29166666666666663, 233), (0.29166666666666663, 484), (0.29166666666666663, 380), (0.29166666666666663, 313), (0.29166666666666663, 480), (0.29166666666666663, 98), (0.29166666666666663, 225), (0.29166666666666663, 493), (0.29166666666666663, 340), (0.29166666666666663, 479), (0.29166666666666663, 272), (0.29166666666666663, 288), (0.29166666666666663, 384), (0.29166666666666663, 474), (0.29166666666666663, 15), (0.29166666666666663, 84), (0.29166666666666663, 366), (0.29166666666666663, 240), (0.29166666666666663, 464), (0.29166666666666663, 78), (0.29166666666666663, 482), (0.29166666666666663, 469), (0.29166666666666663, 294), (0.29166666666666663, 465), (0.29166666666666663, 490), (0.29166666666666663, 30), (0.29166666666666663, 177), (0.29166666666666663, 69), (0.29166666666666663, 324), (0.29166666666666663, 477), (0.29166666666666663, 492), (0.29166666666666663, 487), (0.29166666666666663, 476), (0.29166666666666663, 189), (0.29166666666666663, 339), (0.29166666666666663, 51), (0.29166666666666663, 187), (0.29166666666666663, 186), (0.29166666666666663, 383), (0.29166666666666663, 472), (0.29166666666666663, 171), (0.25, 365), (0.25, 206), (0.25, 96), (0.25, 334), (0.25, 67), (0.25, 175), (0.25, 176), (0.25, 24), (0.25, 107), (0.25, 151), (0.25, 228), (0.25, 21), (0.25, 305), (0.25, 207), (0.25, 13), (0.25, 113), (0.25, 114), (0.25, 10), (0.25, 285), (0.25, 92), (0.25, 335), (0.25, 435), (0.25, 29), (0.25, 385), (0.25, 396), (0.25, 0), (0.25, 144), (0.25, 427), (0.25, 146), (0.25, 203), (0.25, 160), (0.25, 452), (0.25, 32), (0.25, 210), (0.25, 451), (0.25, 350), (0.25, 415), (0.25, 200), (0.25, 311), (0.25, 130), (0.25, 393), (0.25, 149), (0.25, 242), (0.25, 45), (0.25, 308), (0.16666666666666666, 196), (0.16666666666666666, 245), (0.16666666666666666, 83), (0.16666666666666666, 135), (0.16666666666666666, 195), (0.16666666666666666, 116), (0.16666666666666666, 101), (0.16666666666666666, 224), (0.16666666666666666, 100), (0.16666666666666666, 3), (0.16666666666666666, 169), (0.16666666666666666, 28), (0.16666666666666666, 66), (0.16666666666666666, 241), (0.16666666666666666, 132), (0.16666666666666666, 106), (0.16666666666666666, 209), (0.16666666666666666, 16), (0.16666666666666666, 181), (0.16666666666666666, 40), (0.16666666666666666, 167), (0.16666666666666666, 193), (0.16666666666666666, 164), (0.16666666666666666, 131), (0.16666666666666666, 31), (0.16666666666666666, 57), (0.16666666666666666, 182), (0.16666666666666666, 105), (0.16666666666666666, 258), (0.16666666666666666, 2), (0.16666666666666666, 4), (0.16666666666666666, 250), (0.16666666666666666, 220), (0.16666666666666666, 127), (0.16666666666666666, 5), (0.16666666666666666, 42), (0.16666666666666666, 237), (0.16666666666666666, 208), (0.16666666666666666, 36), (0.16666666666666666, 204), (0.16666666666666666, 202), (0.16666666666666666, 60), (0.16666666666666666, 154), (0.16666666666666666, 72), (0.16666666666666666, 219), (0.16666666666666666, 155), (0.16666666666666666, 126), (0.16666666666666666, 112), (0.16666666666666666, 227), (0.16666666666666666, 180), (0.16666666666666666, 251), (0.16666666666666666, 148), (0.16666666666666666, 184), (0.16666666666666666, 59), (0.16666666666666666, 168), (0.16666666666666666, 97), (0.16666666666666666, 253), (0.16666666666666666, 90), (0.16666666666666666, 26), (0.16666666666666666, 38), (0.16666666666666666, 216), (0.16666666666666666, 39), (0.16666666666666666, 11), (0.16666666666666666, 190), (0.16666666666666666, 188), (0.16666666666666666, 252), (0.16666666666666666, 247), (0.16666666666666666, 213), (0.16666666666666666, 257), (0.16666666666666666, 18), (0.16666666666666666, 6), (0.16666666666666666, 159), (0.16666666666666666, 19), (0.16666666666666666, 80), (0.16666666666666666, 261), (0.16666666666666666, 129), (0.16666666666666666, 262), (0.16666666666666666, 117), (0.16666666666666666, 8), (0.16666666666666666, 201), (0.16666666666666666, 215), (0.16666666666666666, 12), (0.16666666666666666, 37), (0.16666666666666666, 89), (0.16666666666666666, 123), (0.16666666666666666, 172), (0.16666666666666666, 22), (0.16666666666666666, 230), (0.16666666666666666, 79), (0.16666666666666666, 260), (0.16666666666666666, 55), (0.16666666666666666, 156), (0.16666666666666666, 128), (0.16666666666666666, 121), (0.16666666666666666, 102), (0.16666666666666666, 87), (0.16666666666666666, 255), (0.16666666666666666, 14), (0.16666666666666666, 243), (0.16666666666666666, 20), (0.16666666666666666, 94), (0.16666666666666666, 214), (0.16666666666666666, 46), (0.16666666666666666, 34), (0.16666666666666666, 23), (0.16666666666666666, 85), (0.16666666666666666, 158), (0.16666666666666666, 254), (0.16666666666666666, 152), (0.16666666666666666, 17), (0.16666666666666666, 239), (0.16666666666666666, 141), (0.16666666666666666, 9), (0.16666666666666666, 104), (0.16666666666666666, 86), (0.16666666666666666, 198), (0.16666666666666666, 244), (0.16666666666666666, 231), (0.16666666666666666, 99), (0.16666666666666666, 133), (0.16666666666666666, 73), (0.16666666666666666, 205), (0.16666666666666666, 25), (0.16666666666666666, 43), (0.16666666666666666, 95), (0.16666666666666666, 50), (0.16666666666666666, 234), (0.16666666666666666, 54), (0.16666666666666666, 49)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 197
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`(+ ? ?)`x`#`#`(+ ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 2 (+ x (+ x y))))
 nr_nodes: 8]
(CANDIDATE)[id: 7
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`2`#`#`y`#`#`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 2 y) 2) y))
 nr_nodes: 8]
(CANDIDATE)[id: 71
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(* ? ?)`x`#`#`x`#`#`x`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ (* (* x x) x) 3))
 nr_nodes: 8]
(CANDIDATE)[id: 401
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`2`#`#`y`#`#`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 2 y) 2) y))
 nr_nodes: 8]
(CANDIDATE)[id: 362
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(+ ? ?)`y`#`#`x`#`#`2`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (+ y x) 2) 3))
 nr_nodes: 8]
[Generation 2]
[Computing fitness]
[(1.375, 197), (1.25, 514), (1.25, 71), (1.25, 7), (1.25, 523), (1.25, 153), (1.25, 362), (1.25, 537), (1.25, 401), (1.125, 503), (1.125, 58), (1.125, 515), (1.125, 48), (1.125, 497), (1.125, 403), (1.125, 165), (1.125, 432), (1.125, 64), (1.125, 517), (1.125, 407), (1.125, 500), (1.125, 162), (1.125, 502), (1.125, 378), (1.0, 223), (1.0, 414), (1.0, 249), (1.0, 402), (1.0, 143), (1.0, 505), (1.0, 145), (1.0, 359), (1.0, 395), (1.0, 420), (1.0, 178), (1.0, 408), (1.0, 527), (1.0, 404), (1.0, 287), (1.0, 330), (1.0, 509), (1.0, 555), (1.0, 147), (1.0, 110), (1.0, 413), (1.0, 137), (1.0, 511), (0.875, 166), (0.875, 229), (0.75, 513), (0.75, 437), (0.75, 358), (0.75, 63), (0.75, 419), (0.75, 1), (0.75, 226), (0.75, 518), (0.75, 521), (0.75, 211), (0.75, 533), (0.75, 76), (0.75, 138), (0.75, 434), (0.75, 519), (0.625, 508), (0.625, 68), (0.625, 418), (0.625, 422), (0.625, 406), (0.625, 56), (0.625, 531), (0.625, 310), (0.625, 191), (0.625, 526), (0.625, 82), (0.625, 524), (0.625, 544), (0.625, 529), (0.625, 140), (0.625, 302), (0.625, 301), (0.625, 421), (0.625, 298), (0.625, 91), (0.625, 199), (0.625, 425), (0.625, 317), (0.625, 318), (0.625, 326), (0.625, 428), (0.625, 221), (0.625, 545), (0.625, 532), (0.625, 539), (0.625, 122), (0.5, 436), (0.5, 360), (0.5, 291), (0.5, 320), (0.5, 444), (0.5, 381), (0.5, 411), (0.5, 389), (0.5, 303), (0.5, 423), (0.5, 192), (0.5, 551), (0.5, 553), (0.5, 447), (0.5, 547), (0.5, 347), (0.5, 62), (0.5, 194), (0.5, 417), (0.5, 336), (0.5, 525), (0.5, 44), (0.5, 441), (0.5, 552), (0.5, 77), (0.5, 410), (0.5, 277), (0.5, 542), (0.5, 498), (0.5, 268), (0.5, 109), (0.5, 433), (0.5, 103), (0.5, 163), (0.5, 74), (0.5, 446), (0.5, 541), (0.5, 430), (0.5, 327), (0.5, 212), (0.5, 369), (0.5, 139), (0.5, 439), (0.375, 157), (0.375, 569), (0.375, 218), (0.375, 448), (0.375, 559), (0.375, 454), (0.375, 108), (0.375, 456), (0.375, 136), (0.375, 61), (0.375, 574), (0.375, 111), (0.375, 304), (0.375, 570), (0.375, 232), (0.375, 577), (0.375, 458), (0.375, 142), (0.375, 290), (0.375, 356), (0.375, 118), (0.375, 52), (0.375, 576), (0.375, 578), (0.375, 450), (0.375, 536), (0.375, 565), (0.375, 580), (0.375, 119), (0.375, 460), (0.375, 581), (0.375, 453), (0.375, 572), (0.375, 562), (0.375, 349), (0.375, 115), (0.375, 354), (0.375, 573), (0.375, 567), (0.375, 248), (0.375, 516), (0.375, 443), (0.375, 449), (0.375, 75), (0.375, 455), (0.375, 81), (0.375, 496), (0.375, 337), (0.29166666666666663, 33), (0.29166666666666663, 88), (0.29166666666666663, 233), (0.29166666666666663, 594), (0.29166666666666663, 186), (0.29166666666666663, 380), (0.29166666666666663, 283), (0.29166666666666663, 173), (0.29166666666666663, 324), (0.29166666666666663, 485), (0.29166666666666663, 487), (0.29166666666666663, 65), (0.29166666666666663, 313), (0.29166666666666663, 493), (0.29166666666666663, 124), (0.29166666666666663, 473), (0.29166666666666663, 368), (0.29166666666666663, 294), (0.29166666666666663, 189), (0.29166666666666663, 217), (0.29166666666666663, 316), (0.29166666666666663, 288), (0.29166666666666663, 479), (0.29166666666666663, 51), (0.29166666666666663, 383), (0.29166666666666663, 462), (0.29166666666666663, 461), (0.29166666666666663, 390), (0.29166666666666663, 240), (0.29166666666666663, 373), (0.29166666666666663, 366), (0.29166666666666663, 84), (0.29166666666666663, 481), (0.29166666666666663, 179), (0.29166666666666663, 480), (0.29166666666666663, 93), (0.29166666666666663, 30), (0.29166666666666663, 259), (0.29166666666666663, 78), (0.29166666666666663, 53), (0.29166666666666663, 593), (0.29166666666666663, 471), (0.29166666666666663, 150), (0.29166666666666663, 584), (0.29166666666666663, 583), (0.29166666666666663, 492), (0.29166666666666663, 489), (0.29166666666666663, 177), (0.29166666666666663, 464), (0.29166666666666663, 235), (0.29166666666666663, 27), (0.29166666666666663, 98), (0.29166666666666663, 468), (0.29166666666666663, 490), (0.29166666666666663, 174), (0.29166666666666663, 476), (0.29166666666666663, 470), (0.29166666666666663, 47), (0.29166666666666663, 272), (0.29166666666666663, 15), (0.29166666666666663, 340), (0.29166666666666663, 282), (0.29166666666666663, 323), (0.29166666666666663, 134), (0.29166666666666663, 592), (0.29166666666666663, 474), (0.29166666666666663, 491), (0.29166666666666663, 469), (0.29166666666666663, 484), (0.29166666666666663, 246), (0.29166666666666663, 588), (0.29166666666666663, 477), (0.29166666666666663, 187), (0.29166666666666663, 256), (0.29166666666666663, 299), (0.29166666666666663, 339), (0.29166666666666663, 185), (0.29166666666666663, 222), (0.29166666666666663, 586), (0.29166666666666663, 69), (0.29166666666666663, 590), (0.29166666666666663, 41), (0.29166666666666663, 295), (0.29166666666666663, 325), (0.29166666666666663, 271), (0.29166666666666663, 384), (0.29166666666666663, 463), (0.29166666666666663, 225), (0.29166666666666663, 478), (0.29166666666666663, 120), (0.29166666666666663, 161), (0.29166666666666663, 236), (0.29166666666666663, 472), (0.29166666666666663, 183), (0.29166666666666663, 482), (0.29166666666666663, 170), (0.29166666666666663, 171), (0.29166666666666663, 297), (0.29166666666666663, 466), (0.29166666666666663, 494), (0.29166666666666663, 465), (0.25, 575), (0.25, 549), (0.25, 0), (0.25, 571), (0.25, 334), (0.25, 130), (0.25, 10), (0.25, 534), (0.25, 200), (0.25, 151), (0.25, 32), (0.25, 96), (0.25, 435), (0.25, 415), (0.25, 113), (0.25, 149), (0.25, 21), (0.25, 160), (0.25, 451), (0.25, 427), (0.25, 92), (0.25, 501), (0.25, 13), (0.25, 144), (0.25, 350), (0.25, 305), (0.25, 24), (0.25, 510), (0.25, 507), (0.25, 393), (0.25, 206), (0.25, 543), (0.25, 311), (0.25, 242), (0.25, 365), (0.25, 556), (0.25, 29), (0.25, 67), (0.25, 175), (0.25, 228), (0.25, 558), (0.25, 146), (0.25, 564), (0.25, 548), (0.25, 385), (0.25, 207), (0.25, 114), (0.25, 520), (0.25, 210), (0.25, 452), (0.25, 107), (0.25, 561), (0.25, 285), (0.25, 203), (0.25, 176), (0.25, 308), (0.25, 45), (0.25, 396), (0.25, 335), (0.16666666666666666, 250), (0.16666666666666666, 2), (0.16666666666666666, 83), (0.16666666666666666, 112), (0.16666666666666666, 237), (0.16666666666666666, 105), (0.16666666666666666, 154), (0.16666666666666666, 251), (0.16666666666666666, 155), (0.16666666666666666, 204), (0.16666666666666666, 106), (0.16666666666666666, 132), (0.16666666666666666, 209), (0.16666666666666666, 184), (0.16666666666666666, 4), (0.16666666666666666, 202), (0.16666666666666666, 169), (0.16666666666666666, 181), (0.16666666666666666, 224), (0.16666666666666666, 180), (0.16666666666666666, 208), (0.16666666666666666, 126), (0.16666666666666666, 72), (0.16666666666666666, 59), (0.16666666666666666, 66), (0.16666666666666666, 116), (0.16666666666666666, 3), (0.16666666666666666, 100), (0.16666666666666666, 182), (0.16666666666666666, 220), (0.16666666666666666, 196), (0.16666666666666666, 101), (0.16666666666666666, 219), (0.16666666666666666, 227), (0.16666666666666666, 258), (0.16666666666666666, 167), (0.16666666666666666, 5), (0.16666666666666666, 28), (0.16666666666666666, 148), (0.16666666666666666, 31), (0.16666666666666666, 241), (0.16666666666666666, 127), (0.16666666666666666, 193), (0.16666666666666666, 16), (0.16666666666666666, 36), (0.16666666666666666, 195), (0.16666666666666666, 42), (0.16666666666666666, 57), (0.16666666666666666, 164), (0.16666666666666666, 245), (0.16666666666666666, 60), (0.16666666666666666, 135), (0.16666666666666666, 131), (0.16666666666666666, 40)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 197
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`(+ ? ?)`x`#`#`(+ ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 2 (+ x (+ x y))))
 nr_nodes: 8]
(CANDIDATE)[id: 514
 encoding: (defun my_func (x y) ?)`(+ ? ?)`3`#`#`(* ? ?)`x`#`#`(* ? ?)`3`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 3 (* x (* 3 y))))
 nr_nodes: 8]
(CANDIDATE)[id: 71
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(* ? ?)`x`#`#`x`#`#`x`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ (* (* x x) x) 3))
 nr_nodes: 8]
(CANDIDATE)[id: 7
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`2`#`#`y`#`#`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 2 y) 2) y))
 nr_nodes: 8]
(CANDIDATE)[id: 523
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`2`#`#`2`#`#`(+ ? ?)`y`#`#`2`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 2 2) (+ y 2)))
 nr_nodes: 8]
[Generation 3]
[Computing fitness]
[(1.5, 642), (1.5, 606), (1.375, 197), (1.25, 7), (1.25, 599), (1.25, 537), (1.25, 362), (1.25, 71), (1.25, 523), (1.25, 401), (1.25, 514), (1.25, 668), (1.25, 153), (1.125, 48), (1.125, 611), (1.125, 58), (1.125, 378), (1.125, 502), (1.125, 597), (1.125, 403), (1.125, 601), (1.125, 517), (1.125, 515), (1.125, 432), (1.125, 407), (1.125, 162), (1.125, 500), (1.125, 503), (1.125, 598), (1.125, 64), (1.125, 608), (1.125, 602), (1.125, 165), (1.125, 595), (1.125, 497), (1.125, 610), (1.0, 359), (1.0, 287), (1.0, 612), (1.0, 629), (1.0, 615), (1.0, 555), (1.0, 414), (1.0, 527), (1.0, 402), (1.0, 137), (1.0, 509), (1.0, 408), (1.0, 223), (1.0, 505), (1.0, 404), (1.0, 178), (1.0, 145), (1.0, 660), (1.0, 395), (1.0, 249), (1.0, 330), (1.0, 689), (1.0, 657), (1.0, 147), (1.0, 624), (1.0, 617), (1.0, 143), (1.0, 511), (1.0, 110), (1.0, 420), (1.0, 614), (1.0, 413), (0.875, 166), (0.875, 229), (0.75, 211), (0.75, 434), (0.75, 521), (0.75, 138), (0.75, 618), (0.75, 635), (0.75, 63), (0.75, 634), (0.75, 437), (0.75, 226), (0.75, 358), (0.75, 1), (0.75, 533), (0.75, 518), (0.75, 419), (0.75, 632), (0.75, 513), (0.75, 76), (0.75, 519), (0.625, 532), (0.625, 302), (0.625, 318), (0.625, 418), (0.625, 620), (0.625, 422), (0.625, 310), (0.625, 421), (0.625, 56), (0.625, 317), (0.625, 650), (0.625, 652), (0.625, 508), (0.625, 221), (0.625, 428), (0.625, 644), (0.625, 140), (0.625, 199), (0.625, 539), (0.625, 529), (0.625, 626), (0.625, 662), (0.625, 298), (0.625, 91), (0.625, 406), (0.625, 82), (0.625, 526), (0.625, 645), (0.625, 659), (0.625, 191), (0.625, 122), (0.625, 666), (0.625, 641), (0.625, 68), (0.625, 544), (0.625, 425), (0.625, 646), (0.625, 531), (0.625, 545), (0.625, 622), (0.625, 524), (0.625, 651), (0.625, 326), (0.625, 301), (0.5, 44), (0.5, 553), (0.5, 664), (0.5, 446), (0.5, 680), (0.5, 277), (0.5, 430), (0.5, 291), (0.5, 369), (0.5, 649), (0.5, 541), (0.5, 670), (0.5, 498), (0.5, 631), (0.5, 678), (0.5, 423), (0.5, 139), (0.5, 525), (0.5, 685), (0.5, 433), (0.5, 673), (0.5, 439), (0.5, 347), (0.5, 441), (0.5, 62), (0.5, 551), (0.5, 681), (0.5, 192), (0.5, 690), (0.5, 163), (0.5, 542), (0.5, 103), (0.5, 687), (0.5, 675), (0.5, 212), (0.5, 194), (0.5, 381), (0.5, 417), (0.5, 411), (0.5, 336), (0.5, 268), (0.5, 327), (0.5, 653), (0.5, 109), (0.5, 444), (0.5, 547), (0.5, 410), (0.5, 360), (0.5, 320), (0.5, 436), (0.5, 74), (0.5, 604), (0.5, 552), (0.5, 77), (0.5, 389), (0.5, 447), (0.5, 303), (0.375, 658), (0.375, 695), (0.375, 559), (0.375, 75), (0.375, 118), (0.375, 52), (0.375, 142), (0.375, 679), (0.375, 574), (0.375, 453), (0.375, 454), (0.375, 157), (0.375, 578), (0.375, 119), (0.375, 356), (0.375, 581), (0.375, 443), (0.375, 81), (0.375, 565), (0.375, 337), (0.375, 456), (0.375, 580), (0.375, 573), (0.375, 449), (0.375, 696), (0.375, 111), (0.375, 455), (0.375, 647), (0.375, 572), (0.375, 569), (0.375, 349), (0.375, 290), (0.375, 496), (0.375, 115), (0.375, 218), (0.375, 698), (0.375, 450), (0.375, 304), (0.375, 516), (0.375, 61), (0.375, 460), (0.375, 108), (0.375, 354), (0.375, 607), (0.375, 694), (0.375, 692), (0.375, 136), (0.375, 248), (0.375, 570), (0.375, 562), (0.375, 448), (0.375, 693), (0.375, 536), (0.375, 576), (0.375, 232), (0.375, 676), (0.375, 577), (0.375, 567), (0.375, 458), (0.29166666666666663, 478), (0.29166666666666663, 225), (0.29166666666666663, 256), (0.29166666666666663, 187), (0.29166666666666663, 593), (0.29166666666666663, 236), (0.29166666666666663, 494), (0.29166666666666663, 120), (0.29166666666666663, 366), (0.29166666666666663, 493), (0.29166666666666663, 485), (0.29166666666666663, 41), (0.29166666666666663, 294), (0.29166666666666663, 189), (0.29166666666666663, 464), (0.29166666666666663, 65), (0.29166666666666663, 299), (0.29166666666666663, 240), (0.29166666666666663, 51), (0.29166666666666663, 339), (0.29166666666666663, 471), (0.29166666666666663, 479), (0.29166666666666663, 233), (0.29166666666666663, 295), (0.29166666666666663, 323), (0.29166666666666663, 584), (0.29166666666666663, 384), (0.29166666666666663, 183), (0.29166666666666663, 490), (0.29166666666666663, 235), (0.29166666666666663, 468), (0.29166666666666663, 586), (0.29166666666666663, 93), (0.29166666666666663, 186), (0.29166666666666663, 583), (0.29166666666666663, 297), (0.29166666666666663, 53), (0.29166666666666663, 271), (0.29166666666666663, 259), (0.29166666666666663, 489), (0.29166666666666663, 324), (0.29166666666666663, 27), (0.29166666666666663, 33), (0.29166666666666663, 462), (0.29166666666666663, 88), (0.29166666666666663, 272), (0.29166666666666663, 282), (0.29166666666666663, 340), (0.29166666666666663, 288), (0.29166666666666663, 590), (0.29166666666666663, 69), (0.29166666666666663, 474), (0.29166666666666663, 185), (0.29166666666666663, 383), (0.29166666666666663, 480), (0.29166666666666663, 465), (0.29166666666666663, 594), (0.29166666666666663, 171), (0.29166666666666663, 481), (0.29166666666666663, 484), (0.29166666666666663, 316), (0.29166666666666663, 177), (0.29166666666666663, 477), (0.29166666666666663, 476), (0.29166666666666663, 592), (0.29166666666666663, 179), (0.29166666666666663, 466), (0.29166666666666663, 150), (0.29166666666666663, 368), (0.29166666666666663, 487), (0.29166666666666663, 246), (0.29166666666666663, 373), (0.29166666666666663, 217), (0.29166666666666663, 313), (0.29166666666666663, 134), (0.29166666666666663, 491), (0.29166666666666663, 390), (0.29166666666666663, 98), (0.29166666666666663, 473), (0.29166666666666663, 84), (0.29166666666666663, 124), (0.29166666666666663, 472), (0.29166666666666663, 325), (0.29166666666666663, 283), (0.29166666666666663, 380), (0.29166666666666663, 161), (0.29166666666666663, 78), (0.29166666666666663, 30), (0.29166666666666663, 222), (0.29166666666666663, 173), (0.29166666666666663, 461), (0.29166666666666663, 170), (0.29166666666666663, 463), (0.29166666666666663, 492), (0.29166666666666663, 588), (0.29166666666666663, 469), (0.29166666666666663, 482), (0.29166666666666663, 174), (0.29166666666666663, 47), (0.29166666666666663, 15), (0.29166666666666663, 470), (0.25, 663), (0.25, 655), (0.25, 427), (0.25, 507), (0.25, 575), (0.25, 510), (0.25, 672), (0.25, 556), (0.25, 311), (0.25, 637), (0.25, 661), (0.25, 534), (0.25, 350), (0.25, 571), (0.25, 200), (0.25, 10), (0.25, 113), (0.25, 665), (0.25, 683), (0.25, 130), (0.25, 334), (0.25, 67), (0.25, 96), (0.25, 21), (0.25, 151), (0.25, 365), (0.25, 393), (0.25, 242), (0.25, 0), (0.25, 451), (0.25, 13), (0.25, 501), (0.25, 206), (0.25, 415), (0.25, 686), (0.25, 144), (0.25, 549), (0.25, 305), (0.25, 160), (0.25, 149), (0.25, 435), (0.25, 627), (0.25, 543), (0.25, 32), (0.25, 640), (0.25, 669), (0.25, 92), (0.25, 638), (0.25, 29), (0.25, 24)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 642
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`x`#`#`3`#`#`(+ ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ x 3) (+ x y)))
 nr_nodes: 8]
(CANDIDATE)[id: 606
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(+ ? ?)`x`#`#`x`#`#`y`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (+ x x) y) 3))
 nr_nodes: 8]
(CANDIDATE)[id: 197
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`(+ ? ?)`x`#`#`(+ ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 2 (+ x (+ x y))))
 nr_nodes: 8]
(CANDIDATE)[id: 7
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`2`#`#`y`#`#`2`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 2 y) 2) y))
 nr_nodes: 8]
(CANDIDATE)[id: 599
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(+ ? ?)`y`#`#`x`#`#`2`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (+ y x) 2) 3))
 nr_nodes: 8]
[Generation 4]
[Computing fitness]
[(1.5, 642), (1.5, 606), (1.375, 197), (1.375, 704), (1.25, 71), (1.25, 362), (1.25, 724), (1.25, 401), (1.25, 537), (1.25, 599), (1.25, 514), (1.25, 153), (1.25, 668), (1.25, 708), (1.25, 7), (1.25, 523), (1.125, 162), (1.125, 770), (1.125, 165), (1.125, 502), (1.125, 64), (1.125, 709), (1.125, 432), (1.125, 378), (1.125, 500), (1.125, 788), (1.125, 703), (1.125, 792), (1.125, 403), (1.125, 610), (1.125, 515), (1.125, 601), (1.125, 711), (1.125, 611), (1.125, 497), (1.125, 58), (1.125, 720), (1.125, 48), (1.125, 597), (1.125, 595), (1.125, 598), (1.125, 721), (1.125, 602), (1.125, 608), (1.125, 517), (1.125, 503), (1.125, 407), (1.125, 742), (1.125, 717), (1.125, 723), (1.0, 420), (1.0, 746), (1.0, 223), (1.0, 395), (1.0, 509), (1.0, 404), (1.0, 730), (1.0, 145), (1.0, 752), (1.0, 732), (1.0, 701), (1.0, 413), (1.0, 555), (1.0, 624), (1.0, 715), (1.0, 408), (1.0, 143), (1.0, 402), (1.0, 689), (1.0, 726), (1.0, 249), (1.0, 615), (1.0, 414), (1.0, 735), (1.0, 137), (1.0, 657), (1.0, 527), (1.0, 731), (1.0, 330), (1.0, 617), (1.0, 612), (1.0, 614), (1.0, 760), (1.0, 745), (1.0, 511), (1.0, 505), (1.0, 178), (1.0, 629), (1.0, 110), (1.0, 660), (1.0, 714), (1.0, 736), (1.0, 147), (1.0, 737), (1.0, 359), (1.0, 287), (1.0, 764), (0.875, 229), (0.875, 166), (0.75, 437), (0.75, 751), (0.75, 706), (0.75, 521), (0.75, 634), (0.75, 757), (0.75, 358), (0.75, 632), (0.75, 518), (0.75, 434), (0.75, 756), (0.75, 76), (0.75, 618), (0.75, 513), (0.75, 774), (0.75, 753), (0.75, 419), (0.75, 138), (0.75, 533), (0.75, 226), (0.75, 635), (0.75, 519), (0.75, 1), (0.75, 63), (0.75, 211), (0.625, 421), (0.625, 777), (0.625, 787), (0.625, 740), (0.625, 545), (0.625, 302), (0.625, 91), (0.625, 626), (0.625, 56), (0.625, 191), (0.625, 544), (0.625, 406), (0.625, 529), (0.625, 734), (0.625, 140), (0.625, 326), (0.625, 766), (0.625, 646), (0.625, 645), (0.625, 68), (0.625, 620), (0.625, 651), (0.625, 422), (0.625, 524), (0.625, 738), (0.625, 652), (0.625, 418), (0.625, 797), (0.625, 122), (0.625, 662), (0.625, 532), (0.625, 729), (0.625, 785), (0.625, 310), (0.625, 425), (0.625, 539), (0.625, 82), (0.625, 531), (0.625, 776), (0.625, 526), (0.625, 659), (0.625, 428), (0.625, 765), (0.625, 666), (0.625, 641), (0.625, 318), (0.625, 508), (0.625, 317), (0.625, 783), (0.625, 301), (0.625, 780), (0.625, 199), (0.625, 644), (0.625, 622), (0.625, 221), (0.625, 779), (0.625, 650), (0.625, 748), (0.625, 298), (0.5, 690), (0.5, 336), (0.5, 410), (0.5, 369), (0.5, 781), (0.5, 77), (0.5, 433), (0.5, 713), (0.5, 192), (0.5, 794), (0.5, 744), (0.5, 680), (0.5, 604), (0.5, 327), (0.5, 103), (0.5, 786), (0.5, 360), (0.5, 749), (0.5, 303), (0.5, 800), (0.5, 320), (0.5, 678), (0.5, 773), (0.5, 525), (0.5, 62), (0.5, 417), (0.5, 553), (0.5, 542), (0.5, 631), (0.5, 670), (0.5, 685), (0.5, 381), (0.5, 212), (0.5, 681), (0.5, 541), (0.5, 389), (0.5, 547), (0.5, 291), (0.5, 430), (0.5, 163), (0.5, 675), (0.5, 700), (0.5, 277), (0.5, 801), (0.5, 653), (0.5, 439), (0.5, 498), (0.5, 664), (0.5, 719), (0.5, 436), (0.5, 796), (0.5, 194), (0.5, 803), (0.5, 444), (0.5, 347), (0.5, 268), (0.5, 109), (0.5, 411), (0.5, 44), (0.5, 552), (0.5, 441), (0.5, 447), (0.5, 649), (0.5, 74), (0.5, 687), (0.5, 446), (0.5, 673), (0.5, 551), (0.5, 423), (0.5, 139), (0.375, 759), (0.375, 698), (0.375, 354), (0.375, 75), (0.375, 449), (0.375, 536), (0.375, 456), (0.375, 693), (0.375, 573), (0.375, 572), (0.375, 567), (0.375, 658), (0.375, 799), (0.375, 696), (0.375, 577), (0.375, 218), (0.375, 115), (0.375, 790), (0.375, 455), (0.375, 304), (0.375, 119), (0.375, 349), (0.375, 460), (0.375, 81), (0.375, 695), (0.375, 559), (0.375, 569), (0.375, 61), (0.375, 784), (0.375, 763), (0.375, 52), (0.375, 565), (0.375, 576), (0.375, 448), (0.375, 290), (0.375, 337), (0.375, 157), (0.375, 607), (0.375, 111), (0.375, 496), (0.375, 581), (0.375, 118), (0.375, 136), (0.375, 142), (0.375, 580), (0.375, 755), (0.375, 647), (0.375, 676), (0.375, 679), (0.375, 562), (0.375, 248), (0.375, 692), (0.375, 108), (0.375, 450), (0.375, 443), (0.375, 454), (0.375, 694), (0.375, 453), (0.375, 570), (0.375, 516), (0.375, 578), (0.375, 356), (0.375, 232), (0.375, 574), (0.375, 458), (0.29166666666666663, 487), (0.29166666666666663, 590), (0.29166666666666663, 88), (0.29166666666666663, 294), (0.29166666666666663, 373), (0.29166666666666663, 217), (0.29166666666666663, 171), (0.29166666666666663, 297), (0.29166666666666663, 236), (0.29166666666666663, 491), (0.29166666666666663, 489), (0.29166666666666663, 594), (0.29166666666666663, 485), (0.29166666666666663, 465), (0.29166666666666663, 185), (0.29166666666666663, 177), (0.29166666666666663, 476), (0.29166666666666663, 584), (0.29166666666666663, 479), (0.29166666666666663, 240), (0.29166666666666663, 583), (0.29166666666666663, 471), (0.29166666666666663, 383), (0.29166666666666663, 477), (0.29166666666666663, 340), (0.29166666666666663, 150), (0.29166666666666663, 282), (0.29166666666666663, 481), (0.29166666666666663, 466), (0.29166666666666663, 464), (0.29166666666666663, 480), (0.29166666666666663, 187), (0.29166666666666663, 468), (0.29166666666666663, 592), (0.29166666666666663, 183), (0.29166666666666663, 53), (0.29166666666666663, 189), (0.29166666666666663, 272), (0.29166666666666663, 316), (0.29166666666666663, 339), (0.29166666666666663, 179), (0.29166666666666663, 462), (0.29166666666666663, 69), (0.29166666666666663, 474), (0.29166666666666663, 313), (0.29166666666666663, 65), (0.29166666666666663, 186), (0.29166666666666663, 51), (0.29166666666666663, 225), (0.29166666666666663, 586), (0.29166666666666663, 33), (0.29166666666666663, 490), (0.29166666666666663, 259), (0.29166666666666663, 246), (0.29166666666666663, 324), (0.29166666666666663, 288), (0.29166666666666663, 368), (0.29166666666666663, 323), (0.29166666666666663, 134), (0.29166666666666663, 233), (0.29166666666666663, 235), (0.29166666666666663, 478), (0.29166666666666663, 93), (0.29166666666666663, 299), (0.29166666666666663, 493), (0.29166666666666663, 27), (0.29166666666666663, 271), (0.29166666666666663, 384), (0.29166666666666663, 256), (0.29166666666666663, 494), (0.29166666666666663, 295), (0.29166666666666663, 120), (0.29166666666666663, 41), (0.29166666666666663, 366), (0.29166666666666663, 484), (0.29166666666666663, 593), (0.25, 761), (0.25, 728), (0.25, 768), (0.25, 754), (0.25, 722), (0.25, 771)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 642
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`x`#`#`3`#`#`(+ ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ x 3) (+ x y)))
 nr_nodes: 8]
(CANDIDATE)[id: 606
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(+ ? ?)`x`#`#`x`#`#`y`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (+ x x) y) 3))
 nr_nodes: 8]
(CANDIDATE)[id: 197
 encoding: (defun my_func (x y) ?)`(* ? ?)`2`#`#`(+ ? ?)`x`#`#`(+ ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 2 (+ x (+ x y))))
 nr_nodes: 8]
(CANDIDATE)[id: 704
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`x`#`#`x`#`#`2`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* x x) 2) 3))
 nr_nodes: 8]
(CANDIDATE)[id: 71
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(* ? ?)`x`#`#`x`#`#`x`#`#`3`#`#`#
 s_expr: (defun my_func (x y) (+ (* (* x x) x) 3))
 nr_nodes: 8]
[Generation 5]
[Computing fitness]
Found ideal candidate: (defun my_func (x y) (+ (+ (* y 2) 3) x))

Process finished with exit code 0
