D:\Anaconda\envs\tf_gpu\python.exe D:/An2Sem1M/sweai/lab2/FunctionalProgramGenerator/main_tree.py
[Algorithm start]
[Initial pool]
(CANDIDATE)[id: 0
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 5 x))
 nr_nodes: 4]
(CANDIDATE)[id: 1
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`y`#`#`5`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* (* y 5) 5))
 nr_nodes: 6]
(CANDIDATE)[id: 2
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 3
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 4
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 5
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 6
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 7
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 8
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 9
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* x y))
 nr_nodes: 4]
(CANDIDATE)[id: 10
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* y 5))
 nr_nodes: 4]
(CANDIDATE)[id: 11
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 12
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 5 y))
 nr_nodes: 4]
(CANDIDATE)[id: 13
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 14
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 15
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 16
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 17
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 18
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 19
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 20
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(+ ? ?)`x`#`#`1`#`#`(+ ? ?)`y`#`#`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (+ x 1) (+ y x)) y))
 nr_nodes: 10]
(CANDIDATE)[id: 21
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 22
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 23
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 24
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 25
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 26
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 27
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* y x))
 nr_nodes: 4]
(CANDIDATE)[id: 28
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 29
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 30
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`(+ ? ?)`1`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ x (+ 1 y)))
 nr_nodes: 6]
(CANDIDATE)[id: 31
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* x x))
 nr_nodes: 4]
(CANDIDATE)[id: 32
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ x x))
 nr_nodes: 4]
(CANDIDATE)[id: 33
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 34
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 35
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ y 1))
 nr_nodes: 4]
(CANDIDATE)[id: 36
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 37
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`(* ? ?)`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* 1 (* 1 1)))
 nr_nodes: 6]
(CANDIDATE)[id: 38
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 39
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 40
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 1 y))
 nr_nodes: 4]
(CANDIDATE)[id: 41
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`(+ ? ?)`5`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ x (+ 5 1)))
 nr_nodes: 6]
(CANDIDATE)[id: 42
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 43
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 44
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 45
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 46
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`y`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (+ y x) 1))
 nr_nodes: 6]
(CANDIDATE)[id: 47
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 48
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 49
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 50
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 5 x))
 nr_nodes: 4]
(CANDIDATE)[id: 51
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 52
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 53
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 54
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 55
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 56
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 x))
 nr_nodes: 4]
(CANDIDATE)[id: 57
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 58
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ y x))
 nr_nodes: 4]
(CANDIDATE)[id: 59
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 60
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 61
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ 5 5))
 nr_nodes: 4]
(CANDIDATE)[id: 62
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 63
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 64
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 65
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ y 5))
 nr_nodes: 4]
(CANDIDATE)[id: 66
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 67
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 68
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 69
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 70
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 71
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 72
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* 5 1))
 nr_nodes: 4]
(CANDIDATE)[id: 73
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 74
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* x 1))
 nr_nodes: 4]
(CANDIDATE)[id: 75
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 76
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 77
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`y`#`#`5`#`#`(+ ? ?)`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ (* y 5) (+ 1 5)))
 nr_nodes: 8]
(CANDIDATE)[id: 78
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 79
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 80
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`x`#`#`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* (* x 1) 1))
 nr_nodes: 6]
(CANDIDATE)[id: 81
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 82
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 83
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`1`#`#`(* ? ?)`x`#`#`1`#`#`1`#`#`(+ ? ?)`1`#`#`(* ? ?)`(* ? ?)`5`#`#`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 1 (* x 1)) 1) (+ 1 (* (* 5 x) y))))
 nr_nodes: 16]
(CANDIDATE)[id: 84
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 85
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 86
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`y`#`#`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* (* y y) y))
 nr_nodes: 6]
(CANDIDATE)[id: 87
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 88
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 89
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`y`#`#`(+ ? ?)`x`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (* y (+ x 1)) x))
 nr_nodes: 8]
(CANDIDATE)[id: 90
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 91
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 92
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 93
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 x))
 nr_nodes: 4]
(CANDIDATE)[id: 94
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 95
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ y x))
 nr_nodes: 4]
(CANDIDATE)[id: 96
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 97
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 98
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 99
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* x 1))
 nr_nodes: 4]
(CANDIDATE)[id: 100
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 101
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 102
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ y 1))
 nr_nodes: 4]
(CANDIDATE)[id: 103
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 104
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 105
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 106
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ 5 1))
 nr_nodes: 4]
(CANDIDATE)[id: 107
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 108
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 109
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 110
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 111
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 112
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`(* ? ?)`x`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ y (* x 5)))
 nr_nodes: 6]
(CANDIDATE)[id: 113
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ 5 5))
 nr_nodes: 4]
(CANDIDATE)[id: 114
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 115
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 116
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 117
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`(+ ? ?)`5`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ y (+ 5 5)))
 nr_nodes: 6]
(CANDIDATE)[id: 118
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 119
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 120
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`5`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* (+ 5 x) 1))
 nr_nodes: 6]
(CANDIDATE)[id: 121
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 122
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 123
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 124
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* x x))
 nr_nodes: 4]
(CANDIDATE)[id: 125
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* 5 5))
 nr_nodes: 4]
(CANDIDATE)[id: 126
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 1 x))
 nr_nodes: 4]
(CANDIDATE)[id: 127
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 5 x))
 nr_nodes: 4]
(CANDIDATE)[id: 128
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 129
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ y 1))
 nr_nodes: 4]
(CANDIDATE)[id: 130
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 131
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 132
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`x`#`#`x`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* x x) x) 1))
 nr_nodes: 8]
(CANDIDATE)[id: 133
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 134
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`(* ? ?)`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* y (* 1 1)))
 nr_nodes: 6]
(CANDIDATE)[id: 135
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 5 x))
 nr_nodes: 4]
(CANDIDATE)[id: 136
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 137
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`(+ ? ?)`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 5 (+ x x)))
 nr_nodes: 6]
(CANDIDATE)[id: 138
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 139
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 140
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 141
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`x`#`#`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* (+ x 1) 5))
 nr_nodes: 6]
(CANDIDATE)[id: 142
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 143
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 144
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`(* ? ?)`(+ ? ?)`1`#`#`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 5 (* (+ 1 x) y)))
 nr_nodes: 8]
(CANDIDATE)[id: 145
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 146
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 147
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 148
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 149
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`(* ? ?)`(+ ? ?)`y`#`#`y`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* 1 (* (+ y y) 1)))
 nr_nodes: 8]
(CANDIDATE)[id: 150
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 151
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 152
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 153
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 154
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 155
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 5 y))
 nr_nodes: 4]
(CANDIDATE)[id: 156
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 157
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 158
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 159
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 5 x))
 nr_nodes: 4]
(CANDIDATE)[id: 160
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`1`#`#`(+ ? ?)`y`#`#`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* (+ 1 (+ y 1)) 5))
 nr_nodes: 8]
(CANDIDATE)[id: 161
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 162
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 163
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 164
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 165
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ y 5))
 nr_nodes: 4]
(CANDIDATE)[id: 166
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`(* ? ?)`(+ ? ?)`1`#`#`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* y (* (+ 1 x) y)))
 nr_nodes: 8]
(CANDIDATE)[id: 167
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 168
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 169
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 170
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* 5 5))
 nr_nodes: 4]
(CANDIDATE)[id: 171
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`(* ? ?)`1`#`#`(+ ? ?)`(+ ? ?)`y`#`#`y`#`#`(+ ? ?)`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* x (* 1 (+ (+ y y) (+ x x)))))
 nr_nodes: 12]
(CANDIDATE)[id: 172
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`1`#`#`y`#`#`(+ ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (* 1 y) (+ 1 x)))
 nr_nodes: 8]
(CANDIDATE)[id: 173
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 174
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 175
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`(* ? ?)`(* ? ?)`x`#`#`(+ ? ?)`5`#`#`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* x (* (* x (+ 5 x)) x)))
 nr_nodes: 10]
(CANDIDATE)[id: 176
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 177
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`x`#`#`x`#`#`(* ? ?)`1`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (* x x) (* 1 y)))
 nr_nodes: 8]
(CANDIDATE)[id: 178
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 179
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 180
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 181
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`(* ? ?)`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ 5 (* 1 1)))
 nr_nodes: 6]
(CANDIDATE)[id: 182
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 183
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 184
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`5`#`#`(* ? ?)`x`#`#`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* (+ 5 (* x 1)) 5))
 nr_nodes: 8]
(CANDIDATE)[id: 185
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 186
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 187
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 188
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 x))
 nr_nodes: 4]
(CANDIDATE)[id: 189
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 190
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 191
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`x`#`#`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* (* x x) y))
 nr_nodes: 6]
(CANDIDATE)[id: 192
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 193
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`(+ ? ?)`(* ? ?)`1`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 1 (+ (* 1 1) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 194
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* 1 5))
 nr_nodes: 4]
(CANDIDATE)[id: 195
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 196
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 197
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 198
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 199
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (+ x 5) x))
 nr_nodes: 6]
(CANDIDATE)[id: 200
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`1`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 1 1) x))
 nr_nodes: 6]
(CANDIDATE)[id: 201
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 202
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 203
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 204
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 205
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(* ? ?)`y`#`#`y`#`#`x`#`#`(+ ? ?)`x`#`#`(+ ? ?)`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ (* (* y y) x) (+ x (+ y 5))))
 nr_nodes: 12]
(CANDIDATE)[id: 206
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* 5 5))
 nr_nodes: 4]
(CANDIDATE)[id: 207
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ x y))
 nr_nodes: 4]
(CANDIDATE)[id: 208
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 209
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(+ ? ?)`y`#`#`5`#`#`(+ ? ?)`(+ ? ?)`y`#`#`5`#`#`(+ ? ?)`1`#`#`y`#`#`(* ? ?)`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (+ y 5) (+ (+ y 5) (+ 1 y))) (* x 1)))
 nr_nodes: 16]
(CANDIDATE)[id: 210
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 211
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 1 x))
 nr_nodes: 4]
(CANDIDATE)[id: 212
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`(* ? ?)`(* ? ?)`1`#`#`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 5 (* (* 1 5) y)))
 nr_nodes: 8]
(CANDIDATE)[id: 213
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 214
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 215
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* 5 1))
 nr_nodes: 4]
(CANDIDATE)[id: 216
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`(* ? ?)`1`#`#`(* ? ?)`1`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* x (* 1 (* 1 y))))
 nr_nodes: 8]
(CANDIDATE)[id: 217
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 218
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`5`#`#`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (+ 5 x) x))
 nr_nodes: 6]
(CANDIDATE)[id: 219
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 220
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 221
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`(+ ? ?)`(* ? ?)`5`#`#`y`#`#`(+ ? ?)`1`#`#`y`#`#`(* ? ?)`1`#`#`1`#`#`(+ ? ?)`(* ? ?)`5`#`#`(+ ? ?)`1`#`#`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (* (+ (* 5 y) (+ 1 y)) (* 1 1)) (+ (* 5 (+ 1 x)) x)))
 nr_nodes: 20]
(CANDIDATE)[id: 222
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 223
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 224
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 225
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 226
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`1`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* (* 1 x) 1))
 nr_nodes: 6]
(CANDIDATE)[id: 227
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`1`#`#`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (* 1 5) y))
 nr_nodes: 6]
(CANDIDATE)[id: 228
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 229
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 230
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 231
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* y y))
 nr_nodes: 4]
(CANDIDATE)[id: 232
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 1 x))
 nr_nodes: 4]
(CANDIDATE)[id: 233
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 234
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 235
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 236
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 237
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 238
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 239
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 240
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`5`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (* 5 5) x))
 nr_nodes: 6]
(CANDIDATE)[id: 241
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 242
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 243
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* y 1))
 nr_nodes: 4]
(CANDIDATE)[id: 244
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 245
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 246
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 247
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 x))
 nr_nodes: 4]
(CANDIDATE)[id: 248
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`(* ? ?)`(+ ? ?)`y`#`#`y`#`#`(* ? ?)`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* y (* (+ y y) (* 1 1))))
 nr_nodes: 10]
(CANDIDATE)[id: 249
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`(* ? ?)`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 1 (* 5 y)))
 nr_nodes: 6]
(CANDIDATE)[id: 250
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 251
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`(* ? ?)`5`#`#`x`#`#`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* (+ (* 5 x) 1) 5))
 nr_nodes: 8]
(CANDIDATE)[id: 252
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 253
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* y x))
 nr_nodes: 4]
(CANDIDATE)[id: 254
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 255
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 256
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 257
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 258
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 259
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 260
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 261
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 5 y))
 nr_nodes: 4]
(CANDIDATE)[id: 262
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 263
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* 5 1))
 nr_nodes: 4]
(CANDIDATE)[id: 264
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`1`#`#`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ (* 1 1) 5))
 nr_nodes: 6]
(CANDIDATE)[id: 265
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(* ? ?)`y`#`#`(+ ? ?)`(+ ? ?)`5`#`#`5`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (* y (+ (+ 5 5) 5))))
 nr_nodes: 10]
(CANDIDATE)[id: 266
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 267
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`(+ ? ?)`x`#`#`1`#`#`1`#`#`(* ? ?)`1`#`#`(+ ? ?)`(+ ? ?)`x`#`#`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (* (+ (* x 5) (+ x 1)) 1) (* 1 (+ (+ x y) x))))
 nr_nodes: 18]
(CANDIDATE)[id: 268
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 5 y))
 nr_nodes: 4]
(CANDIDATE)[id: 269
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 270
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 271
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 1 x))
 nr_nodes: 4]
(CANDIDATE)[id: 272
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 273
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* 1 5))
 nr_nodes: 4]
(CANDIDATE)[id: 274
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ 5 5))
 nr_nodes: 4]
(CANDIDATE)[id: 275
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 276
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ x 5))
 nr_nodes: 4]
(CANDIDATE)[id: 277
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 278
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`5`#`#`1`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ 5 1) 1) x))
 nr_nodes: 8]
(CANDIDATE)[id: 279
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ y 5))
 nr_nodes: 4]
(CANDIDATE)[id: 280
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 281
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 282
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 283
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 284
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 285
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ x 5))
 nr_nodes: 4]
(CANDIDATE)[id: 286
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 287
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`(+ ? ?)`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ 5 (+ 1 1)))
 nr_nodes: 6]
(CANDIDATE)[id: 288
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 289
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 290
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 291
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 292
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 293
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 294
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`(* ? ?)`(* ? ?)`x`#`#`1`#`#`(* ? ?)`x`#`#`x`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* (* (* (* x 1) (* x x)) x) 1))
 nr_nodes: 12]
(CANDIDATE)[id: 295
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 296
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`x`#`#`y`#`#`(+ ? ?)`y`#`#`(* ? ?)`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* (* x y) (+ y (* x 1))))
 nr_nodes: 10]
(CANDIDATE)[id: 297
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`5`#`#`(+ ? ?)`y`#`#`y`#`#`(* ? ?)`x`#`#`(* ? ?)`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 5 (+ y y)) (* x (* 5 y))))
 nr_nodes: 12]
(CANDIDATE)[id: 298
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* y y))
 nr_nodes: 4]
(CANDIDATE)[id: 299
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 300
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 301
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 302
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 303
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`x`#`#`y`#`#`(+ ? ?)`x`#`#`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ x y) (+ x 1)) 1))
 nr_nodes: 10]
(CANDIDATE)[id: 304
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* 5 1))
 nr_nodes: 4]
(CANDIDATE)[id: 305
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 306
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ 1 1))
 nr_nodes: 4]
(CANDIDATE)[id: 307
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`y`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (+ y x) 1))
 nr_nodes: 6]
(CANDIDATE)[id: 308
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 309
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ 1 5))
 nr_nodes: 4]
(CANDIDATE)[id: 310
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 311
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ y x))
 nr_nodes: 4]
(CANDIDATE)[id: 312
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 313
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`y`#`#`(+ ? ?)`5`#`#`x`#`#`(* ? ?)`(* ? ?)`5`#`#`5`#`#`(+ ? ?)`5`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ (+ y (+ 5 x)) (* (* 5 5) (+ 5 5))))
 nr_nodes: 14]
(CANDIDATE)[id: 314
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 315
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 316
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 317
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 318
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`(* ? ?)`(+ ? ?)`1`#`#`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 5 (* (+ 1 y) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 319
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 320
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 321
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 322
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 323
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 324
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 325
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 326
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 327
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`5`#`#`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (+ 5 x) x))
 nr_nodes: 6]
(CANDIDATE)[id: 328
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 329
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 330
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 331
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 332
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 333
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 334
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 335
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 336
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* x 1))
 nr_nodes: 4]
(CANDIDATE)[id: 337
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ x x))
 nr_nodes: 4]
(CANDIDATE)[id: 338
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 339
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 340
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 341
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`5`#`#`5`#`#`(* ? ?)`1`#`#`(+ ? ?)`1`#`#`y`#`#`(+ ? ?)`x`#`#`(* ? ?)`5`#`#`(* ? ?)`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ 5 5) (* 1 (+ 1 y))) (+ x (* 5 (* x 1)))))
 nr_nodes: 18]
(CANDIDATE)[id: 342
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`y`#`#`x`#`#`(* ? ?)`y`#`#`(+ ? ?)`x`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* (+ y x) (* y (+ x 5))))
 nr_nodes: 10]
(CANDIDATE)[id: 343
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(+ ? ?)`1`#`#`1`#`#`x`#`#`(+ ? ?)`(+ ? ?)`x`#`#`1`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (+ 1 1) x) (+ (+ x 1) y)))
 nr_nodes: 12]
(CANDIDATE)[id: 344
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 345
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 346
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 347
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 348
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 349
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 350
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 351
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 5 x))
 nr_nodes: 4]
(CANDIDATE)[id: 352
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 353
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`(+ ? ?)`(+ ? ?)`y`#`#`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* y (+ (+ y 1) 5)))
 nr_nodes: 8]
(CANDIDATE)[id: 354
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`(* ? ?)`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* x (* y 5)))
 nr_nodes: 6]
(CANDIDATE)[id: 355
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 356
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 357
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 358
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`(* ? ?)`(* ? ?)`1`#`#`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 1 (* (* 1 y) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 359
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 360
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 361
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 362
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 363
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 364
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`y`#`#`x`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* (+ y x) 5))
 nr_nodes: 6]
(CANDIDATE)[id: 365
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 1 y))
 nr_nodes: 4]
(CANDIDATE)[id: 366
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`(+ ? ?)`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ 5 (+ x 1)))
 nr_nodes: 6]
(CANDIDATE)[id: 367
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 368
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 369
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 370
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 371
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`x`#`#`(+ ? ?)`y`#`#`(+ ? ?)`1`#`#`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* (* x (+ y (+ 1 x))) y))
 nr_nodes: 10]
(CANDIDATE)[id: 372
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 373
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 374
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 375
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 376
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 377
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 378
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 379
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 380
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 381
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 382
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* 5 5))
 nr_nodes: 4]
(CANDIDATE)[id: 383
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 384
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 385
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 386
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 387
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 388
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ y x))
 nr_nodes: 4]
(CANDIDATE)[id: 389
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 390
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 391
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 392
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 393
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 394
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 395
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 396
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 397
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 398
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 399
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
[Generation 0]
[Computing fitness]
[(1.5, 52), (1.375, 278), (1.25, 193), (1.125, 132), (1.125, 353), (1.0, 77), (1.0, 89), (1.0, 144), (1.0, 149), (1.0, 160), (1.0, 166), (1.0, 172), (1.0, 177), (1.0, 184), (1.0, 212), (1.0, 216), (1.0, 251), (1.0, 318), (1.0, 358), (0.875, 41), (0.875, 366), (0.75, 30), (0.75, 46), (0.75, 303), (0.75, 307), (0.625, 20), (0.625, 37), (0.625, 117), (0.625, 181), (0.625, 199), (0.625, 227), (0.625, 264), (0.625, 265), (0.625, 287), (0.625, 371), (0.5, 1), (0.5, 56), (0.5, 80), (0.5, 86), (0.5, 93), (0.5, 112), (0.5, 120), (0.5, 134), (0.5, 137), (0.5, 141), (0.5, 175), (0.5, 188), (0.5, 191), (0.5, 200), (0.5, 205), (0.5, 218), (0.5, 226), (0.5, 240), (0.5, 247), (0.5, 248), (0.5, 249), (0.5, 296), (0.5, 327), (0.5, 342), (0.5, 354), (0.5, 364), (0.375, 32), (0.375, 35), (0.375, 65), (0.375, 102), (0.375, 106), (0.375, 129), (0.375, 165), (0.375, 171), (0.375, 261), (0.375, 268), (0.375, 279), (0.375, 306), (0.375, 309), (0.375, 337), (0.375, 343), (0.375, 365), (0.29166666666666663, 7), (0.29166666666666663, 8), (0.29166666666666663, 15), (0.29166666666666663, 18), (0.29166666666666663, 19), (0.29166666666666663, 23), (0.29166666666666663, 33), (0.29166666666666663, 42), (0.29166666666666663, 48), (0.29166666666666663, 60), (0.29166666666666663, 63), (0.29166666666666663, 67), (0.29166666666666663, 69), (0.29166666666666663, 71), (0.29166666666666663, 75), (0.29166666666666663, 79), (0.29166666666666663, 82), (0.29166666666666663, 85), (0.29166666666666663, 91), (0.29166666666666663, 94), (0.29166666666666663, 97), (0.29166666666666663, 108), (0.29166666666666663, 109), (0.29166666666666663, 110), (0.29166666666666663, 128), (0.29166666666666663, 130), (0.29166666666666663, 139), (0.29166666666666663, 146), (0.29166666666666663, 148), (0.29166666666666663, 151), (0.29166666666666663, 163), (0.29166666666666663, 164), (0.29166666666666663, 167), (0.29166666666666663, 179), (0.29166666666666663, 180), (0.29166666666666663, 201), (0.29166666666666663, 203), (0.29166666666666663, 213), (0.29166666666666663, 220), (0.29166666666666663, 224), (0.29166666666666663, 229), (0.29166666666666663, 234), (0.29166666666666663, 244), (0.29166666666666663, 250), (0.29166666666666663, 254), (0.29166666666666663, 255), (0.29166666666666663, 260), (0.29166666666666663, 269), (0.29166666666666663, 277), (0.29166666666666663, 305), (0.29166666666666663, 308), (0.29166666666666663, 315), (0.29166666666666663, 319), (0.29166666666666663, 320), (0.29166666666666663, 322), (0.29166666666666663, 325), (0.29166666666666663, 329), (0.29166666666666663, 331), (0.29166666666666663, 334), (0.29166666666666663, 338), (0.29166666666666663, 346), (0.29166666666666663, 349), (0.29166666666666663, 352), (0.29166666666666663, 357), (0.29166666666666663, 360), (0.29166666666666663, 362), (0.29166666666666663, 373), (0.29166666666666663, 374), (0.29166666666666663, 375), (0.29166666666666663, 384), (0.29166666666666663, 387), (0.29166666666666663, 389), (0.29166666666666663, 392), (0.29166666666666663, 395), (0.29166666666666663, 396), (0.29166666666666663, 397), (0.25, 0), (0.25, 9), (0.25, 10), (0.25, 12), (0.25, 27), (0.25, 31), (0.25, 40), (0.25, 50), (0.25, 58), (0.25, 61), (0.25, 72), (0.25, 74), (0.25, 95), (0.25, 99), (0.25, 113), (0.25, 124), (0.25, 125), (0.25, 126), (0.25, 127), (0.25, 135), (0.25, 155), (0.25, 159), (0.25, 170), (0.25, 194), (0.25, 206), (0.25, 207), (0.25, 211), (0.25, 215), (0.25, 231), (0.25, 232), (0.25, 243), (0.25, 253), (0.25, 263), (0.25, 271), (0.25, 273), (0.25, 274), (0.25, 276), (0.25, 285), (0.25, 294), (0.25, 297), (0.25, 298), (0.25, 304), (0.25, 311), (0.25, 336), (0.25, 351), (0.25, 382), (0.25, 388), (0.16666666666666666, 2), (0.16666666666666666, 3), (0.16666666666666666, 4), (0.16666666666666666, 5), (0.16666666666666666, 6), (0.16666666666666666, 11), (0.16666666666666666, 13), (0.16666666666666666, 14), (0.16666666666666666, 16), (0.16666666666666666, 17), (0.16666666666666666, 21), (0.16666666666666666, 22), (0.16666666666666666, 24), (0.16666666666666666, 25), (0.16666666666666666, 26), (0.16666666666666666, 28), (0.16666666666666666, 29), (0.16666666666666666, 34), (0.16666666666666666, 36), (0.16666666666666666, 38), (0.16666666666666666, 39), (0.16666666666666666, 43), (0.16666666666666666, 44), (0.16666666666666666, 45), (0.16666666666666666, 47), (0.16666666666666666, 49), (0.16666666666666666, 51), (0.16666666666666666, 53), (0.16666666666666666, 54), (0.16666666666666666, 55), (0.16666666666666666, 57), (0.16666666666666666, 59), (0.16666666666666666, 62), (0.16666666666666666, 64), (0.16666666666666666, 66), (0.16666666666666666, 68), (0.16666666666666666, 70), (0.16666666666666666, 73), (0.16666666666666666, 76), (0.16666666666666666, 78), (0.16666666666666666, 81), (0.16666666666666666, 84), (0.16666666666666666, 87), (0.16666666666666666, 88), (0.16666666666666666, 90), (0.16666666666666666, 92), (0.16666666666666666, 96), (0.16666666666666666, 98), (0.16666666666666666, 100), (0.16666666666666666, 101), (0.16666666666666666, 103), (0.16666666666666666, 104), (0.16666666666666666, 105), (0.16666666666666666, 107), (0.16666666666666666, 111), (0.16666666666666666, 114), (0.16666666666666666, 115), (0.16666666666666666, 116), (0.16666666666666666, 118), (0.16666666666666666, 119), (0.16666666666666666, 121), (0.16666666666666666, 122), (0.16666666666666666, 123), (0.16666666666666666, 131), (0.16666666666666666, 133), (0.16666666666666666, 136), (0.16666666666666666, 138), (0.16666666666666666, 140), (0.16666666666666666, 142), (0.16666666666666666, 143), (0.16666666666666666, 145), (0.16666666666666666, 147), (0.16666666666666666, 150), (0.16666666666666666, 152), (0.16666666666666666, 153), (0.16666666666666666, 154), (0.16666666666666666, 156), (0.16666666666666666, 157), (0.16666666666666666, 158), (0.16666666666666666, 161), (0.16666666666666666, 162), (0.16666666666666666, 168), (0.16666666666666666, 169), (0.16666666666666666, 173), (0.16666666666666666, 174), (0.16666666666666666, 176), (0.16666666666666666, 178), (0.16666666666666666, 182), (0.16666666666666666, 183), (0.16666666666666666, 185), (0.16666666666666666, 186), (0.16666666666666666, 187), (0.16666666666666666, 189), (0.16666666666666666, 190), (0.16666666666666666, 192), (0.16666666666666666, 195), (0.16666666666666666, 196), (0.16666666666666666, 197), (0.16666666666666666, 198), (0.16666666666666666, 202), (0.16666666666666666, 204), (0.16666666666666666, 208), (0.16666666666666666, 210), (0.16666666666666666, 214), (0.16666666666666666, 217), (0.16666666666666666, 219), (0.16666666666666666, 222), (0.16666666666666666, 223), (0.16666666666666666, 225), (0.16666666666666666, 228), (0.16666666666666666, 230), (0.16666666666666666, 233), (0.16666666666666666, 235), (0.16666666666666666, 236), (0.16666666666666666, 237), (0.16666666666666666, 238), (0.16666666666666666, 239), (0.16666666666666666, 241), (0.16666666666666666, 242), (0.16666666666666666, 245), (0.16666666666666666, 246), (0.16666666666666666, 252), (0.16666666666666666, 256), (0.16666666666666666, 257), (0.16666666666666666, 258), (0.16666666666666666, 259), (0.16666666666666666, 262), (0.16666666666666666, 266), (0.16666666666666666, 270), (0.16666666666666666, 272), (0.16666666666666666, 275), (0.16666666666666666, 280), (0.16666666666666666, 281), (0.16666666666666666, 282), (0.16666666666666666, 283), (0.16666666666666666, 284), (0.16666666666666666, 286), (0.16666666666666666, 288), (0.16666666666666666, 289), (0.16666666666666666, 290), (0.16666666666666666, 291), (0.16666666666666666, 292), (0.16666666666666666, 293), (0.16666666666666666, 295), (0.16666666666666666, 299), (0.16666666666666666, 300), (0.16666666666666666, 301), (0.16666666666666666, 302), (0.16666666666666666, 310), (0.16666666666666666, 312), (0.16666666666666666, 313), (0.16666666666666666, 314), (0.16666666666666666, 316), (0.16666666666666666, 317), (0.16666666666666666, 321), (0.16666666666666666, 323), (0.16666666666666666, 324), (0.16666666666666666, 326), (0.16666666666666666, 328), (0.16666666666666666, 330), (0.16666666666666666, 332), (0.16666666666666666, 333), (0.16666666666666666, 335), (0.16666666666666666, 339), (0.16666666666666666, 340), (0.16666666666666666, 344), (0.16666666666666666, 345), (0.16666666666666666, 347), (0.16666666666666666, 348), (0.16666666666666666, 350), (0.16666666666666666, 355), (0.16666666666666666, 356), (0.16666666666666666, 359), (0.16666666666666666, 361), (0.16666666666666666, 363), (0.16666666666666666, 367), (0.16666666666666666, 368), (0.16666666666666666, 369), (0.16666666666666666, 370), (0.16666666666666666, 372), (0.16666666666666666, 376), (0.16666666666666666, 377), (0.16666666666666666, 378), (0.16666666666666666, 379), (0.16666666666666666, 380), (0.16666666666666666, 381), (0.16666666666666666, 383), (0.16666666666666666, 385), (0.16666666666666666, 386), (0.16666666666666666, 390), (0.16666666666666666, 391), (0.16666666666666666, 393), (0.16666666666666666, 394), (0.16666666666666666, 398), (0.16666666666666666, 399), (0.125, 83), (0.125, 209), (0.1, 267), (0.1, 341), (0.08333333333333333, 221)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 52
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 278
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`5`#`#`1`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ 5 1) 1) x))
 nr_nodes: 8]
(CANDIDATE)[id: 193
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`(+ ? ?)`(* ? ?)`1`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 1 (+ (* 1 1) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 132
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`x`#`#`x`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* x x) x) 1))
 nr_nodes: 8]
(CANDIDATE)[id: 353
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`(+ ? ?)`(+ ? ?)`y`#`#`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* y (+ (+ y 1) 5)))
 nr_nodes: 8]
[Generation 1]
[Computing fitness]
[(1.5, 52), (1.375, 278), (1.25, 193), (1.25, 429), (1.125, 132), (1.125, 407), (1.125, 445), (1.125, 353), (1.0, 403), (1.0, 149), (1.0, 177), (1.0, 212), (1.0, 160), (1.0, 433), (1.0, 411), (1.0, 184), (1.0, 77), (1.0, 172), (1.0, 409), (1.0, 318), (1.0, 435), (1.0, 89), (1.0, 358), (1.0, 166), (1.0, 144), (1.0, 251), (1.0, 414), (1.0, 216), (0.875, 41), (0.875, 366), (0.75, 307), (0.75, 46), (0.75, 413), (0.75, 303), (0.75, 30), (0.625, 427), (0.625, 199), (0.625, 117), (0.625, 287), (0.625, 412), (0.625, 37), (0.625, 417), (0.625, 227), (0.625, 20), (0.625, 418), (0.625, 371), (0.625, 420), (0.625, 181), (0.625, 264), (0.625, 265), (0.5, 112), (0.5, 421), (0.5, 134), (0.5, 327), (0.5, 175), (0.5, 431), (0.5, 342), (0.5, 430), (0.5, 188), (0.5, 86), (0.5, 415), (0.5, 1), (0.5, 56), (0.5, 191), (0.5, 354), (0.5, 434), (0.5, 296), (0.5, 226), (0.5, 218), (0.5, 364), (0.5, 406), (0.5, 137), (0.5, 419), (0.5, 80), (0.5, 425), (0.5, 205), (0.5, 248), (0.5, 200), (0.5, 93), (0.5, 240), (0.5, 249), (0.5, 247), (0.5, 400), (0.5, 120), (0.5, 141), (0.375, 446), (0.375, 309), (0.375, 106), (0.375, 129), (0.375, 440), (0.375, 32), (0.375, 306), (0.375, 405), (0.375, 439), (0.375, 171), (0.375, 444), (0.375, 261), (0.375, 365), (0.375, 343), (0.375, 402), (0.375, 337), (0.375, 65), (0.375, 165), (0.375, 279), (0.375, 438), (0.375, 268), (0.375, 102), (0.375, 35), (0.375, 442), (0.29166666666666663, 163), (0.29166666666666663, 7), (0.29166666666666663, 457), (0.29166666666666663, 475), (0.29166666666666663, 19), (0.29166666666666663, 128), (0.29166666666666663, 456), (0.29166666666666663, 322), (0.29166666666666663, 329), (0.29166666666666663, 224), (0.29166666666666663, 463), (0.29166666666666663, 480), (0.29166666666666663, 453), (0.29166666666666663, 180), (0.29166666666666663, 71), (0.29166666666666663, 260), (0.29166666666666663, 471), (0.29166666666666663, 220), (0.29166666666666663, 213), (0.29166666666666663, 338), (0.29166666666666663, 473), (0.29166666666666663, 488), (0.29166666666666663, 60), (0.29166666666666663, 109), (0.29166666666666663, 464), (0.29166666666666663, 315), (0.29166666666666663, 352), (0.29166666666666663, 75), (0.29166666666666663, 42), (0.29166666666666663, 139), (0.29166666666666663, 33), (0.29166666666666663, 491), (0.29166666666666663, 452), (0.29166666666666663, 255), (0.29166666666666663, 91), (0.29166666666666663, 460), (0.29166666666666663, 493), (0.29166666666666663, 82), (0.29166666666666663, 179), (0.29166666666666663, 331), (0.29166666666666663, 18), (0.29166666666666663, 305), (0.29166666666666663, 375), (0.29166666666666663, 48), (0.29166666666666663, 384), (0.29166666666666663, 484), (0.29166666666666663, 472), (0.29166666666666663, 319), (0.29166666666666663, 489), (0.29166666666666663, 483), (0.29166666666666663, 397), (0.29166666666666663, 254), (0.29166666666666663, 392), (0.29166666666666663, 320), (0.29166666666666663, 23), (0.29166666666666663, 201), (0.29166666666666663, 15), (0.29166666666666663, 69), (0.29166666666666663, 308), (0.29166666666666663, 373), (0.29166666666666663, 148), (0.29166666666666663, 466), (0.29166666666666663, 151), (0.29166666666666663, 447), (0.29166666666666663, 229), (0.29166666666666663, 470), (0.29166666666666663, 360), (0.29166666666666663, 85), (0.29166666666666663, 164), (0.29166666666666663, 450), (0.29166666666666663, 462), (0.29166666666666663, 362), (0.29166666666666663, 469), (0.29166666666666663, 396), (0.29166666666666663, 63), (0.29166666666666663, 387), (0.29166666666666663, 79), (0.29166666666666663, 277), (0.29166666666666663, 269), (0.29166666666666663, 110), (0.29166666666666663, 477), (0.29166666666666663, 8), (0.29166666666666663, 454), (0.29166666666666663, 167), (0.29166666666666663, 395), (0.29166666666666663, 374), (0.29166666666666663, 325), (0.29166666666666663, 334), (0.29166666666666663, 146), (0.29166666666666663, 94), (0.29166666666666663, 448), (0.29166666666666663, 234), (0.29166666666666663, 349), (0.29166666666666663, 481), (0.29166666666666663, 108), (0.29166666666666663, 478), (0.29166666666666663, 467), (0.29166666666666663, 476), (0.29166666666666663, 357), (0.29166666666666663, 67), (0.29166666666666663, 244), (0.29166666666666663, 487), (0.29166666666666663, 490), (0.29166666666666663, 465), (0.29166666666666663, 459), (0.29166666666666663, 486), (0.29166666666666663, 97), (0.29166666666666663, 203), (0.29166666666666663, 130), (0.29166666666666663, 389), (0.29166666666666663, 250), (0.29166666666666663, 346), (0.25, 253), (0.25, 274), (0.25, 99), (0.25, 304), (0.25, 232), (0.25, 207), (0.25, 12), (0.25, 170), (0.25, 72), (0.25, 58), (0.25, 271), (0.25, 443), (0.25, 382), (0.25, 215), (0.25, 135), (0.25, 194), (0.25, 410), (0.25, 50), (0.25, 113), (0.25, 273), (0.25, 10), (0.25, 351), (0.25, 61), (0.25, 31), (0.25, 40), (0.25, 422), (0.25, 336), (0.25, 298), (0.25, 126), (0.25, 311), (0.25, 159), (0.25, 206), (0.25, 294), (0.25, 211), (0.25, 74), (0.25, 436), (0.25, 285), (0.25, 297), (0.25, 155), (0.25, 125), (0.25, 404), (0.25, 0), (0.25, 127), (0.25, 243), (0.25, 95), (0.25, 9), (0.25, 231), (0.25, 263), (0.25, 276), (0.25, 27), (0.25, 416), (0.25, 424), (0.25, 124), (0.25, 388), (0.16666666666666666, 242), (0.16666666666666666, 76), (0.16666666666666666, 78), (0.16666666666666666, 162), (0.16666666666666666, 196), (0.16666666666666666, 17), (0.16666666666666666, 169), (0.16666666666666666, 131), (0.16666666666666666, 118), (0.16666666666666666, 197), (0.16666666666666666, 173), (0.16666666666666666, 152), (0.16666666666666666, 174), (0.16666666666666666, 73), (0.16666666666666666, 153), (0.16666666666666666, 29), (0.16666666666666666, 39), (0.16666666666666666, 70), (0.16666666666666666, 195), (0.16666666666666666, 13), (0.16666666666666666, 225), (0.16666666666666666, 198), (0.16666666666666666, 64), (0.16666666666666666, 92), (0.16666666666666666, 122), (0.16666666666666666, 96), (0.16666666666666666, 119), (0.16666666666666666, 6), (0.16666666666666666, 62), (0.16666666666666666, 21), (0.16666666666666666, 237), (0.16666666666666666, 2), (0.16666666666666666, 252), (0.16666666666666666, 84), (0.16666666666666666, 111), (0.16666666666666666, 47), (0.16666666666666666, 116), (0.16666666666666666, 204), (0.16666666666666666, 156), (0.16666666666666666, 168), (0.16666666666666666, 25), (0.16666666666666666, 101), (0.16666666666666666, 54), (0.16666666666666666, 34), (0.16666666666666666, 105), (0.16666666666666666, 217), (0.16666666666666666, 235), (0.16666666666666666, 51), (0.16666666666666666, 136), (0.16666666666666666, 219), (0.16666666666666666, 210), (0.16666666666666666, 223), (0.16666666666666666, 214), (0.16666666666666666, 222), (0.16666666666666666, 230), (0.16666666666666666, 24), (0.16666666666666666, 145), (0.16666666666666666, 142), (0.16666666666666666, 154), (0.16666666666666666, 233), (0.16666666666666666, 236), (0.16666666666666666, 189), (0.16666666666666666, 98), (0.16666666666666666, 228), (0.16666666666666666, 187), (0.16666666666666666, 44), (0.16666666666666666, 257), (0.16666666666666666, 38), (0.16666666666666666, 3), (0.16666666666666666, 143), (0.16666666666666666, 182), (0.16666666666666666, 66), (0.16666666666666666, 5), (0.16666666666666666, 90), (0.16666666666666666, 185), (0.16666666666666666, 121), (0.16666666666666666, 114), (0.16666666666666666, 104), (0.16666666666666666, 55), (0.16666666666666666, 140), (0.16666666666666666, 158), (0.16666666666666666, 43), (0.16666666666666666, 256), (0.16666666666666666, 16), (0.16666666666666666, 88), (0.16666666666666666, 202), (0.16666666666666666, 238), (0.16666666666666666, 68), (0.16666666666666666, 4), (0.16666666666666666, 49), (0.16666666666666666, 28), (0.16666666666666666, 133), (0.16666666666666666, 103), (0.16666666666666666, 53), (0.16666666666666666, 115), (0.16666666666666666, 59), (0.16666666666666666, 245), (0.16666666666666666, 183), (0.16666666666666666, 150), (0.16666666666666666, 100), (0.16666666666666666, 14), (0.16666666666666666, 190), (0.16666666666666666, 138), (0.16666666666666666, 246), (0.16666666666666666, 26), (0.16666666666666666, 11), (0.16666666666666666, 208), (0.16666666666666666, 157), (0.16666666666666666, 239), (0.16666666666666666, 22), (0.16666666666666666, 178), (0.16666666666666666, 36), (0.16666666666666666, 123), (0.16666666666666666, 87), (0.16666666666666666, 161), (0.16666666666666666, 192), (0.16666666666666666, 186), (0.16666666666666666, 57), (0.16666666666666666, 107), (0.16666666666666666, 147), (0.16666666666666666, 176), (0.16666666666666666, 45), (0.16666666666666666, 81), (0.16666666666666666, 241), (0.16666666666666666, 258)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 52
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 278
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`5`#`#`1`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ 5 1) 1) x))
 nr_nodes: 8]
(CANDIDATE)[id: 193
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`(+ ? ?)`(* ? ?)`1`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 1 (+ (* 1 1) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 429
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`y`#`#`y`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* y y) 1) x))
 nr_nodes: 8]
(CANDIDATE)[id: 132
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`x`#`#`x`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* x x) x) 1))
 nr_nodes: 8]
[Generation 2]
[Computing fitness]
[(1.5, 52), (1.375, 278), (1.375, 494), (1.25, 495), (1.25, 429), (1.25, 504), (1.25, 522), (1.25, 193), (1.125, 505), (1.125, 445), (1.125, 407), (1.125, 132), (1.125, 496), (1.125, 353), (1.0, 403), (1.0, 514), (1.0, 534), (1.0, 532), (1.0, 506), (1.0, 516), (1.0, 177), (1.0, 409), (1.0, 184), (1.0, 172), (1.0, 77), (1.0, 212), (1.0, 411), (1.0, 251), (1.0, 149), (1.0, 555), (1.0, 435), (1.0, 318), (1.0, 358), (1.0, 499), (1.0, 89), (1.0, 502), (1.0, 160), (1.0, 559), (1.0, 166), (1.0, 433), (1.0, 414), (1.0, 498), (1.0, 144), (1.0, 510), (1.0, 216), (1.0, 500), (1.0, 508), (0.875, 512), (0.875, 366), (0.875, 41), (0.75, 547), (0.75, 307), (0.75, 413), (0.75, 513), (0.75, 46), (0.75, 30), (0.75, 303), (0.625, 542), (0.625, 523), (0.625, 37), (0.625, 199), (0.625, 417), (0.625, 517), (0.625, 427), (0.625, 371), (0.625, 412), (0.625, 181), (0.625, 521), (0.625, 515), (0.625, 227), (0.625, 20), (0.625, 520), (0.625, 117), (0.625, 418), (0.625, 287), (0.625, 265), (0.625, 420), (0.625, 264), (0.5, 434), (0.5, 540), (0.5, 93), (0.5, 527), (0.5, 364), (0.5, 545), (0.5, 541), (0.5, 419), (0.5, 80), (0.5, 425), (0.5, 518), (0.5, 536), (0.5, 249), (0.5, 406), (0.5, 112), (0.5, 538), (0.5, 296), (0.5, 430), (0.5, 141), (0.5, 205), (0.5, 175), (0.5, 218), (0.5, 551), (0.5, 529), (0.5, 400), (0.5, 354), (0.5, 226), (0.5, 240), (0.5, 530), (0.5, 134), (0.5, 120), (0.5, 188), (0.5, 56), (0.5, 415), (0.5, 342), (0.5, 1), (0.5, 137), (0.5, 247), (0.5, 86), (0.5, 191), (0.5, 200), (0.5, 327), (0.5, 421), (0.5, 554), (0.5, 248), (0.5, 431), (0.375, 306), (0.375, 35), (0.375, 438), (0.375, 65), (0.375, 444), (0.375, 279), (0.375, 561), (0.375, 261), (0.375, 405), (0.375, 402), (0.375, 106), (0.375, 440), (0.375, 549), (0.375, 446), (0.375, 309), (0.375, 268), (0.375, 165), (0.375, 337), (0.375, 563), (0.375, 439), (0.375, 562), (0.375, 557), (0.375, 365), (0.375, 553), (0.375, 102), (0.375, 442), (0.375, 32), (0.375, 343), (0.375, 564), (0.375, 552), (0.375, 558), (0.375, 171), (0.375, 129), (0.29166666666666663, 244), (0.29166666666666663, 109), (0.29166666666666663, 447), (0.29166666666666663, 481), (0.29166666666666663, 476), (0.29166666666666663, 452), (0.29166666666666663, 130), (0.29166666666666663, 75), (0.29166666666666663, 573), (0.29166666666666663, 384), (0.29166666666666663, 82), (0.29166666666666663, 213), (0.29166666666666663, 373), (0.29166666666666663, 387), (0.29166666666666663, 493), (0.29166666666666663, 338), (0.29166666666666663, 308), (0.29166666666666663, 583), (0.29166666666666663, 320), (0.29166666666666663, 67), (0.29166666666666663, 567), (0.29166666666666663, 488), (0.29166666666666663, 480), (0.29166666666666663, 470), (0.29166666666666663, 471), (0.29166666666666663, 362), (0.29166666666666663, 465), (0.29166666666666663, 179), (0.29166666666666663, 463), (0.29166666666666663, 305), (0.29166666666666663, 469), (0.29166666666666663, 454), (0.29166666666666663, 139), (0.29166666666666663, 250), (0.29166666666666663, 571), (0.29166666666666663, 459), (0.29166666666666663, 489), (0.29166666666666663, 475), (0.29166666666666663, 108), (0.29166666666666663, 585), (0.29166666666666663, 23), (0.29166666666666663, 360), (0.29166666666666663, 397), (0.29166666666666663, 346), (0.29166666666666663, 456), (0.29166666666666663, 224), (0.29166666666666663, 146), (0.29166666666666663, 269), (0.29166666666666663, 587), (0.29166666666666663, 63), (0.29166666666666663, 18), (0.29166666666666663, 163), (0.29166666666666663, 329), (0.29166666666666663, 148), (0.29166666666666663, 325), (0.29166666666666663, 349), (0.29166666666666663, 79), (0.29166666666666663, 566), (0.29166666666666663, 584), (0.29166666666666663, 15), (0.29166666666666663, 577), (0.29166666666666663, 490), (0.29166666666666663, 588), (0.29166666666666663, 570), (0.29166666666666663, 478), (0.29166666666666663, 396), (0.29166666666666663, 334), (0.29166666666666663, 460), (0.29166666666666663, 568), (0.29166666666666663, 450), (0.29166666666666663, 453), (0.29166666666666663, 164), (0.29166666666666663, 151), (0.29166666666666663, 42), (0.29166666666666663, 486), (0.29166666666666663, 483), (0.29166666666666663, 33), (0.29166666666666663, 254), (0.29166666666666663, 574), (0.29166666666666663, 128), (0.29166666666666663, 85), (0.29166666666666663, 357), (0.29166666666666663, 7), (0.29166666666666663, 97), (0.29166666666666663, 473), (0.29166666666666663, 392), (0.29166666666666663, 322), (0.29166666666666663, 389), (0.29166666666666663, 234), (0.29166666666666663, 448), (0.29166666666666663, 374), (0.29166666666666663, 220), (0.29166666666666663, 466), (0.29166666666666663, 395), (0.29166666666666663, 487), (0.29166666666666663, 457), (0.29166666666666663, 315), (0.29166666666666663, 91), (0.29166666666666663, 375), (0.29166666666666663, 575), (0.29166666666666663, 579), (0.29166666666666663, 352), (0.29166666666666663, 331), (0.29166666666666663, 565), (0.29166666666666663, 462), (0.29166666666666663, 581), (0.29166666666666663, 60), (0.29166666666666663, 110), (0.29166666666666663, 69), (0.29166666666666663, 229), (0.29166666666666663, 477), (0.29166666666666663, 201), (0.29166666666666663, 255), (0.29166666666666663, 277), (0.29166666666666663, 484), (0.29166666666666663, 180), (0.29166666666666663, 472), (0.29166666666666663, 590), (0.29166666666666663, 19), (0.29166666666666663, 48), (0.29166666666666663, 71), (0.29166666666666663, 94), (0.29166666666666663, 203), (0.29166666666666663, 580), (0.29166666666666663, 467), (0.29166666666666663, 8), (0.29166666666666663, 491), (0.29166666666666663, 319), (0.29166666666666663, 167), (0.29166666666666663, 589), (0.29166666666666663, 260), (0.29166666666666663, 464), (0.25, 231), (0.25, 207), (0.25, 243), (0.25, 294), (0.25, 336), (0.25, 271), (0.25, 206), (0.25, 232), (0.25, 135), (0.25, 304), (0.25, 31), (0.25, 509), (0.25, 543), (0.25, 10), (0.25, 215), (0.25, 263), (0.25, 99), (0.25, 50), (0.25, 404), (0.25, 74), (0.25, 127), (0.25, 560), (0.25, 72), (0.25, 274), (0.25, 0), (0.25, 58), (0.25, 388), (0.25, 12), (0.25, 9), (0.25, 126), (0.25, 424), (0.25, 382), (0.25, 524), (0.25, 533), (0.25, 416), (0.25, 27), (0.25, 273), (0.25, 124), (0.25, 351), (0.25, 276), (0.25, 443), (0.25, 95), (0.25, 297), (0.25, 40), (0.25, 113), (0.25, 422), (0.25, 503), (0.25, 194), (0.25, 410), (0.25, 61), (0.25, 298), (0.25, 526), (0.25, 211), (0.25, 436), (0.25, 311), (0.25, 285), (0.25, 125), (0.25, 253), (0.25, 170), (0.25, 155), (0.25, 159), (0.16666666666666666, 51), (0.16666666666666666, 78), (0.16666666666666666, 70), (0.16666666666666666, 6), (0.16666666666666666, 25), (0.16666666666666666, 54), (0.16666666666666666, 169), (0.16666666666666666, 116), (0.16666666666666666, 168), (0.16666666666666666, 118), (0.16666666666666666, 196), (0.16666666666666666, 152), (0.16666666666666666, 219), (0.16666666666666666, 17), (0.16666666666666666, 47), (0.16666666666666666, 225), (0.16666666666666666, 136), (0.16666666666666666, 29), (0.16666666666666666, 217), (0.16666666666666666, 131), (0.16666666666666666, 111), (0.16666666666666666, 2), (0.16666666666666666, 195), (0.16666666666666666, 122), (0.16666666666666666, 252), (0.16666666666666666, 101), (0.16666666666666666, 64), (0.16666666666666666, 96), (0.16666666666666666, 156), (0.16666666666666666, 153), (0.16666666666666666, 235), (0.16666666666666666, 237), (0.16666666666666666, 62), (0.16666666666666666, 162), (0.16666666666666666, 119), (0.16666666666666666, 197), (0.16666666666666666, 204), (0.16666666666666666, 105), (0.16666666666666666, 21), (0.16666666666666666, 173), (0.16666666666666666, 174), (0.16666666666666666, 84), (0.16666666666666666, 34), (0.16666666666666666, 242), (0.16666666666666666, 92), (0.16666666666666666, 76), (0.16666666666666666, 198), (0.16666666666666666, 39), (0.16666666666666666, 73), (0.16666666666666666, 13)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 52
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 278
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`5`#`#`1`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ 5 1) 1) x))
 nr_nodes: 8]
(CANDIDATE)[id: 494
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`5`#`#`1`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ 5 1) 1) x))
 nr_nodes: 8]
(CANDIDATE)[id: 495
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`y`#`#`y`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* y y) 1) x))
 nr_nodes: 8]
(CANDIDATE)[id: 429
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`y`#`#`y`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* y y) 1) x))
 nr_nodes: 8]
[Generation 3]
[Computing fitness]
[(1.5, 52), (1.375, 494), (1.375, 598), (1.375, 278), (1.25, 596), (1.25, 193), (1.25, 495), (1.25, 522), (1.25, 504), (1.25, 429), (1.25, 594), (1.125, 629), (1.125, 132), (1.125, 407), (1.125, 600), (1.125, 599), (1.125, 353), (1.125, 445), (1.125, 496), (1.125, 505), (1.125, 682), (1.0, 403), (1.0, 555), (1.0, 502), (1.0, 613), (1.0, 508), (1.0, 506), (1.0, 534), (1.0, 499), (1.0, 610), (1.0, 614), (1.0, 435), (1.0, 216), (1.0, 409), (1.0, 358), (1.0, 166), (1.0, 77), (1.0, 89), (1.0, 500), (1.0, 660), (1.0, 593), (1.0, 686), (1.0, 251), (1.0, 411), (1.0, 160), (1.0, 516), (1.0, 414), (1.0, 184), (1.0, 144), (1.0, 612), (1.0, 433), (1.0, 212), (1.0, 602), (1.0, 149), (1.0, 559), (1.0, 318), (1.0, 532), (1.0, 177), (1.0, 498), (1.0, 611), (1.0, 510), (1.0, 514), (1.0, 172), (0.875, 622), (0.875, 512), (0.875, 592), (0.875, 41), (0.875, 366), (0.75, 513), (0.75, 641), (0.75, 649), (0.75, 628), (0.75, 625), (0.75, 303), (0.75, 46), (0.75, 413), (0.75, 30), (0.75, 615), (0.75, 307), (0.75, 547), (0.75, 624), (0.625, 656), (0.625, 427), (0.625, 418), (0.625, 631), (0.625, 639), (0.625, 417), (0.625, 199), (0.625, 117), (0.625, 640), (0.625, 412), (0.625, 662), (0.625, 371), (0.625, 265), (0.625, 630), (0.625, 521), (0.625, 264), (0.625, 181), (0.625, 37), (0.625, 595), (0.625, 227), (0.625, 515), (0.625, 523), (0.625, 542), (0.625, 520), (0.625, 667), (0.625, 420), (0.625, 287), (0.625, 636), (0.625, 634), (0.625, 20), (0.625, 632), (0.625, 517), (0.5, 669), (0.5, 93), (0.5, 653), (0.5, 545), (0.5, 540), (0.5, 296), (0.5, 86), (0.5, 188), (0.5, 529), (0.5, 415), (0.5, 134), (0.5, 249), (0.5, 619), (0.5, 342), (0.5, 175), (0.5, 248), (0.5, 651), (0.5, 672), (0.5, 400), (0.5, 675), (0.5, 421), (0.5, 200), (0.5, 247), (0.5, 538), (0.5, 530), (0.5, 205), (0.5, 527), (0.5, 327), (0.5, 406), (0.5, 434), (0.5, 627), (0.5, 137), (0.5, 431), (0.5, 354), (0.5, 430), (0.5, 554), (0.5, 645), (0.5, 604), (0.5, 425), (0.5, 648), (0.5, 655), (0.5, 608), (0.5, 419), (0.5, 364), (0.5, 191), (0.5, 56), (0.5, 240), (0.5, 536), (0.5, 551), (0.5, 603), (0.5, 80), (0.5, 141), (0.5, 606), (0.5, 218), (0.5, 673), (0.5, 1), (0.5, 666), (0.5, 621), (0.5, 541), (0.5, 518), (0.5, 226), (0.5, 663), (0.5, 112), (0.5, 120), (0.5, 643), (0.375, 337), (0.375, 444), (0.375, 402), (0.375, 557), (0.375, 102), (0.375, 268), (0.375, 688), (0.375, 35), (0.375, 279), (0.375, 405), (0.375, 129), (0.375, 552), (0.375, 309), (0.375, 165), (0.375, 306), (0.375, 32), (0.375, 684), (0.375, 678), (0.375, 106), (0.375, 446), (0.375, 638), (0.375, 677), (0.375, 343), (0.375, 562), (0.375, 65), (0.375, 558), (0.375, 679), (0.375, 693), (0.375, 553), (0.375, 674), (0.375, 564), (0.375, 442), (0.375, 681), (0.375, 171), (0.375, 617), (0.375, 365), (0.375, 694), (0.375, 549), (0.375, 261), (0.375, 563), (0.375, 438), (0.375, 440), (0.375, 692), (0.375, 561), (0.375, 690), (0.375, 439), (0.29166666666666663, 97), (0.29166666666666663, 42), (0.29166666666666663, 201), (0.29166666666666663, 69), (0.29166666666666663, 568), (0.29166666666666663, 67), (0.29166666666666663, 60), (0.29166666666666663, 146), (0.29166666666666663, 462), (0.29166666666666663, 128), (0.29166666666666663, 71), (0.29166666666666663, 473), (0.29166666666666663, 573), (0.29166666666666663, 480), (0.29166666666666663, 476), (0.29166666666666663, 325), (0.29166666666666663, 579), (0.29166666666666663, 213), (0.29166666666666663, 7), (0.29166666666666663, 82), (0.29166666666666663, 571), (0.29166666666666663, 584), (0.29166666666666663, 457), (0.29166666666666663, 269), (0.29166666666666663, 63), (0.29166666666666663, 483), (0.29166666666666663, 466), (0.29166666666666663, 478), (0.29166666666666663, 151), (0.29166666666666663, 48), (0.29166666666666663, 255), (0.29166666666666663, 475), (0.29166666666666663, 490), (0.29166666666666663, 139), (0.29166666666666663, 360), (0.29166666666666663, 180), (0.29166666666666663, 583), (0.29166666666666663, 75), (0.29166666666666663, 587), (0.29166666666666663, 79), (0.29166666666666663, 472), (0.29166666666666663, 148), (0.29166666666666663, 392), (0.29166666666666663, 23), (0.29166666666666663, 589), (0.29166666666666663, 588), (0.29166666666666663, 577), (0.29166666666666663, 8), (0.29166666666666663, 454), (0.29166666666666663, 130), (0.29166666666666663, 488), (0.29166666666666663, 357), (0.29166666666666663, 580), (0.29166666666666663, 163), (0.29166666666666663, 585), (0.29166666666666663, 362), (0.29166666666666663, 277), (0.29166666666666663, 565), (0.29166666666666663, 447), (0.29166666666666663, 15), (0.29166666666666663, 470), (0.29166666666666663, 250), (0.29166666666666663, 110), (0.29166666666666663, 229), (0.29166666666666663, 456), (0.29166666666666663, 244), (0.29166666666666663, 484), (0.29166666666666663, 487), (0.29166666666666663, 570), (0.29166666666666663, 320), (0.29166666666666663, 464), (0.29166666666666663, 108), (0.29166666666666663, 387), (0.29166666666666663, 460), (0.29166666666666663, 471), (0.29166666666666663, 463), (0.29166666666666663, 465), (0.29166666666666663, 109), (0.29166666666666663, 453), (0.29166666666666663, 491), (0.29166666666666663, 384), (0.29166666666666663, 322), (0.29166666666666663, 581), (0.29166666666666663, 375), (0.29166666666666663, 329), (0.29166666666666663, 18), (0.29166666666666663, 167), (0.29166666666666663, 19), (0.29166666666666663, 220), (0.29166666666666663, 260), (0.29166666666666663, 477), (0.29166666666666663, 33), (0.29166666666666663, 450), (0.29166666666666663, 395), (0.29166666666666663, 389), (0.29166666666666663, 590), (0.29166666666666663, 374), (0.29166666666666663, 567), (0.29166666666666663, 459), (0.29166666666666663, 349), (0.29166666666666663, 467), (0.29166666666666663, 575), (0.29166666666666663, 574), (0.29166666666666663, 469), (0.29166666666666663, 91), (0.29166666666666663, 315), (0.29166666666666663, 486), (0.29166666666666663, 305), (0.29166666666666663, 308), (0.29166666666666663, 203), (0.29166666666666663, 254), (0.29166666666666663, 397), (0.29166666666666663, 352), (0.29166666666666663, 331), (0.29166666666666663, 489), (0.29166666666666663, 566), (0.29166666666666663, 224), (0.29166666666666663, 334), (0.29166666666666663, 319), (0.29166666666666663, 234), (0.29166666666666663, 164), (0.29166666666666663, 338), (0.29166666666666663, 85), (0.29166666666666663, 493), (0.29166666666666663, 481), (0.29166666666666663, 179), (0.29166666666666663, 448), (0.29166666666666663, 452), (0.29166666666666663, 373), (0.29166666666666663, 94), (0.29166666666666663, 396), (0.29166666666666663, 346), (0.25, 304), (0.25, 294), (0.25, 206), (0.25, 404), (0.25, 126), (0.25, 616), (0.25, 274), (0.25, 31), (0.25, 231), (0.25, 127), (0.25, 207), (0.25, 12), (0.25, 524), (0.25, 382), (0.25, 243), (0.25, 509), (0.25, 10), (0.25, 271), (0.25, 74), (0.25, 135), (0.25, 560), (0.25, 50), (0.25, 543), (0.25, 215), (0.25, 416), (0.25, 99), (0.25, 388), (0.25, 58), (0.25, 609), (0.25, 232), (0.25, 647), (0.25, 689), (0.25, 263), (0.25, 27), (0.25, 658), (0.25, 336), (0.25, 654), (0.25, 424), (0.25, 664), (0.25, 0), (0.25, 9), (0.25, 671), (0.25, 72), (0.25, 533)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 52
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 494
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`5`#`#`1`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ 5 1) 1) x))
 nr_nodes: 8]
(CANDIDATE)[id: 598
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`5`#`#`x`#`#`(* ? ?)`1`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 5 x) (* 1 y)))
 nr_nodes: 8]
(CANDIDATE)[id: 278
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`5`#`#`1`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ 5 1) 1) x))
 nr_nodes: 8]
(CANDIDATE)[id: 596
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`(+ ? ?)`(+ ? ?)`x`#`#`1`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* x (+ (+ x 1) y)))
 nr_nodes: 8]
[Generation 4]
[Computing fitness]
[(1.5, 696), (1.5, 52), (1.375, 598), (1.375, 494), (1.375, 698), (1.375, 751), (1.375, 278), (1.25, 738), (1.25, 193), (1.25, 596), (1.25, 495), (1.25, 733), (1.25, 594), (1.25, 703), (1.25, 504), (1.25, 429), (1.25, 522), (1.125, 709), (1.125, 682), (1.125, 407), (1.125, 746), (1.125, 706), (1.125, 600), (1.125, 445), (1.125, 722), (1.125, 721), (1.125, 353), (1.125, 505), (1.125, 730), (1.125, 629), (1.125, 699), (1.125, 704), (1.125, 132), (1.125, 728), (1.125, 496), (1.125, 599), (1.0, 177), (1.0, 498), (1.0, 713), (1.0, 510), (1.0, 144), (1.0, 89), (1.0, 532), (1.0, 602), (1.0, 734), (1.0, 714), (1.0, 611), (1.0, 500), (1.0, 358), (1.0, 718), (1.0, 789), (1.0, 772), (1.0, 149), (1.0, 782), (1.0, 216), (1.0, 534), (1.0, 433), (1.0, 614), (1.0, 77), (1.0, 172), (1.0, 763), (1.0, 555), (1.0, 409), (1.0, 660), (1.0, 686), (1.0, 613), (1.0, 612), (1.0, 516), (1.0, 318), (1.0, 559), (1.0, 593), (1.0, 411), (1.0, 514), (1.0, 212), (1.0, 737), (1.0, 506), (1.0, 414), (1.0, 707), (1.0, 251), (1.0, 610), (1.0, 715), (1.0, 729), (1.0, 502), (1.0, 435), (1.0, 403), (1.0, 184), (1.0, 712), (1.0, 508), (1.0, 499), (1.0, 166), (1.0, 736), (1.0, 160), (0.875, 592), (0.875, 41), (0.875, 622), (0.875, 366), (0.875, 512), (0.75, 743), (0.75, 30), (0.75, 547), (0.75, 46), (0.75, 649), (0.75, 413), (0.75, 625), (0.75, 624), (0.75, 702), (0.75, 513), (0.75, 615), (0.75, 303), (0.75, 307), (0.75, 641), (0.75, 628), (0.625, 760), (0.625, 630), (0.625, 793), (0.625, 776), (0.625, 719), (0.625, 521), (0.625, 412), (0.625, 265), (0.625, 117), (0.625, 418), (0.625, 264), (0.625, 757), (0.625, 753), (0.625, 227), (0.625, 542), (0.625, 420), (0.625, 631), (0.625, 523), (0.625, 766), (0.625, 777), (0.625, 517), (0.625, 634), (0.625, 656), (0.625, 427), (0.625, 371), (0.625, 764), (0.625, 754), (0.625, 752), (0.625, 515), (0.625, 701), (0.625, 741), (0.625, 762), (0.625, 20), (0.625, 662), (0.625, 199), (0.625, 667), (0.625, 640), (0.625, 37), (0.625, 636), (0.625, 632), (0.625, 181), (0.625, 417), (0.625, 595), (0.625, 639), (0.625, 520), (0.625, 767), (0.625, 287), (0.625, 758), (0.5, 655), (0.5, 794), (0.5, 518), (0.5, 538), (0.5, 218), (0.5, 648), (0.5, 606), (0.5, 619), (0.5, 240), (0.5, 541), (0.5, 675), (0.5, 175), (0.5, 536), (0.5, 419), (0.5, 726), (0.5, 779), (0.5, 672), (0.5, 93), (0.5, 137), (0.5, 205), (0.5, 342), (0.5, 327), (0.5, 554), (0.5, 673), (0.5, 651), (0.5, 724), (0.5, 112), (0.5, 400), (0.5, 731), (0.5, 716), (0.5, 663), (0.5, 643), (0.5, 669), (0.5, 120), (0.5, 248), (0.5, 188), (0.5, 710), (0.5, 755), (0.5, 608), (0.5, 421), (0.5, 527), (0.5, 788), (0.5, 604), (0.5, 529), (0.5, 621), (0.5, 431), (0.5, 430), (0.5, 415), (0.5, 666), (0.5, 785), (0.5, 771), (0.5, 226), (0.5, 80), (0.5, 711), (0.5, 56), (0.5, 354), (0.5, 247), (0.5, 653), (0.5, 749), (0.5, 1), (0.5, 191), (0.5, 645), (0.5, 781), (0.5, 200), (0.5, 603), (0.5, 791), (0.5, 364), (0.5, 627), (0.5, 530), (0.5, 740), (0.5, 296), (0.5, 134), (0.5, 540), (0.5, 787), (0.5, 545), (0.5, 406), (0.5, 249), (0.5, 434), (0.5, 425), (0.5, 141), (0.5, 551), (0.5, 86), (0.375, 32), (0.375, 279), (0.375, 444), (0.375, 440), (0.375, 677), (0.375, 690), (0.375, 261), (0.375, 309), (0.375, 446), (0.375, 679), (0.375, 692), (0.375, 405), (0.375, 681), (0.375, 674), (0.375, 563), (0.375, 558), (0.375, 442), (0.375, 552), (0.375, 337), (0.375, 165), (0.375, 365), (0.375, 438), (0.375, 549), (0.375, 688), (0.375, 106), (0.375, 638), (0.375, 102), (0.375, 35), (0.375, 306), (0.375, 343), (0.375, 65), (0.375, 678), (0.375, 402), (0.375, 684), (0.375, 129), (0.375, 439), (0.375, 617), (0.375, 561), (0.375, 553), (0.375, 795), (0.375, 562), (0.375, 693), (0.375, 171), (0.375, 769), (0.375, 268), (0.375, 694), (0.375, 557), (0.375, 564), (0.29166666666666663, 581), (0.29166666666666663, 583), (0.29166666666666663, 260), (0.29166666666666663, 571), (0.29166666666666663, 460), (0.29166666666666663, 48), (0.29166666666666663, 454), (0.29166666666666663, 466), (0.29166666666666663, 7), (0.29166666666666663, 108), (0.29166666666666663, 580), (0.29166666666666663, 67), (0.29166666666666663, 484), (0.29166666666666663, 322), (0.29166666666666663, 60), (0.29166666666666663, 579), (0.29166666666666663, 42), (0.29166666666666663, 467), (0.29166666666666663, 269), (0.29166666666666663, 139), (0.29166666666666663, 456), (0.29166666666666663, 329), (0.29166666666666663, 325), (0.29166666666666663, 453), (0.29166666666666663, 463), (0.29166666666666663, 465), (0.29166666666666663, 395), (0.29166666666666663, 63), (0.29166666666666663, 349), (0.29166666666666663, 567), (0.29166666666666663, 384), (0.29166666666666663, 491), (0.29166666666666663, 244), (0.29166666666666663, 457), (0.29166666666666663, 389), (0.29166666666666663, 459), (0.29166666666666663, 146), (0.29166666666666663, 470), (0.29166666666666663, 255), (0.29166666666666663, 585), (0.29166666666666663, 250), (0.29166666666666663, 109), (0.29166666666666663, 488), (0.29166666666666663, 472), (0.29166666666666663, 229), (0.29166666666666663, 97), (0.29166666666666663, 587), (0.29166666666666663, 151), (0.29166666666666663, 477), (0.29166666666666663, 588), (0.29166666666666663, 320), (0.29166666666666663, 201), (0.29166666666666663, 589), (0.29166666666666663, 471), (0.29166666666666663, 167), (0.29166666666666663, 447), (0.29166666666666663, 464), (0.29166666666666663, 392), (0.29166666666666663, 220), (0.29166666666666663, 476), (0.29166666666666663, 8), (0.29166666666666663, 69), (0.29166666666666663, 450), (0.29166666666666663, 163), (0.29166666666666663, 82), (0.29166666666666663, 33), (0.29166666666666663, 180), (0.29166666666666663, 148), (0.29166666666666663, 19), (0.29166666666666663, 277), (0.29166666666666663, 387), (0.29166666666666663, 473), (0.29166666666666663, 475), (0.29166666666666663, 374), (0.29166666666666663, 75), (0.29166666666666663, 577), (0.29166666666666663, 462), (0.29166666666666663, 357), (0.29166666666666663, 483), (0.29166666666666663, 480), (0.29166666666666663, 18), (0.29166666666666663, 375), (0.29166666666666663, 487), (0.29166666666666663, 71), (0.29166666666666663, 360), (0.29166666666666663, 130), (0.29166666666666663, 362), (0.29166666666666663, 23), (0.29166666666666663, 15), (0.29166666666666663, 490), (0.29166666666666663, 590), (0.29166666666666663, 128), (0.29166666666666663, 565), (0.29166666666666663, 570), (0.29166666666666663, 573), (0.29166666666666663, 568), (0.29166666666666663, 584), (0.29166666666666663, 110), (0.29166666666666663, 213), (0.29166666666666663, 478), (0.29166666666666663, 79), (0.25, 783), (0.25, 775), (0.25, 786), (0.25, 759), (0.25, 773), (0.25, 792), (0.25, 768), (0.25, 745), (0.25, 748)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 696
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 52
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 598
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`5`#`#`x`#`#`(* ? ?)`1`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 5 x) (* 1 y)))
 nr_nodes: 8]
(CANDIDATE)[id: 494
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`5`#`#`1`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ 5 1) 1) x))
 nr_nodes: 8]
(CANDIDATE)[id: 698
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`5`#`#`x`#`#`(* ? ?)`1`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 5 x) (* 1 y)))
 nr_nodes: 8]
[Generation 5]
[Computing fitness]
[(1.5, 52), (1.5, 696), (1.375, 278), (1.375, 598), (1.375, 811), (1.375, 799), (1.375, 751), (1.375, 494), (1.375, 798), (1.375, 698), (1.25, 429), (1.25, 820), (1.25, 193), (1.25, 522), (1.25, 872), (1.25, 738), (1.25, 504), (1.25, 733), (1.25, 594), (1.25, 703), (1.25, 806), (1.25, 596), (1.25, 803), (1.25, 495), (1.125, 722), (1.125, 812), (1.125, 813), (1.125, 721), (1.125, 728), (1.125, 810), (1.125, 599), (1.125, 706), (1.125, 445), (1.125, 746), (1.125, 132), (1.125, 837), (1.125, 353), (1.125, 699), (1.125, 407), (1.125, 704), (1.125, 682), (1.125, 839), (1.125, 730), (1.125, 629), (1.125, 505), (1.125, 868), (1.125, 709), (1.125, 801), (1.125, 600), (1.125, 814), (1.125, 496), (1.125, 818), (1.0, 166), (1.0, 805), (1.0, 409), (1.0, 149), (1.0, 559), (1.0, 892), (1.0, 612), (1.0, 514), (1.0, 821), (1.0, 89), (1.0, 602), (1.0, 251), (1.0, 736), (1.0, 500), (1.0, 772), (1.0, 853), (1.0, 714), (1.0, 532), (1.0, 613), (1.0, 856), (1.0, 534), (1.0, 555), (1.0, 358), (1.0, 846), (1.0, 172), (1.0, 318), (1.0, 435), (1.0, 414), (1.0, 611), (1.0, 840), (1.0, 789), (1.0, 884), (1.0, 144), (1.0, 510), (1.0, 737), (1.0, 848), (1.0, 847), (1.0, 184), (1.0, 160), (1.0, 499), (1.0, 782), (1.0, 593), (1.0, 715), (1.0, 403), (1.0, 851), (1.0, 888), (1.0, 433), (1.0, 411), (1.0, 216), (1.0, 508), (1.0, 824), (1.0, 516), (1.0, 686), (1.0, 845), (1.0, 718), (1.0, 498), (1.0, 610), (1.0, 660), (1.0, 713), (1.0, 614), (1.0, 77), (1.0, 707), (1.0, 712), (1.0, 212), (1.0, 763), (1.0, 734), (1.0, 729), (1.0, 828), (1.0, 838), (1.0, 506), (1.0, 177), (1.0, 502), (0.875, 366), (0.875, 816), (0.875, 592), (0.875, 512), (0.875, 797), (0.875, 858), (0.875, 882), (0.875, 41), (0.875, 622), (0.75, 859), (0.75, 303), (0.75, 702), (0.75, 547), (0.75, 649), (0.75, 850), (0.75, 413), (0.75, 46), (0.75, 625), (0.75, 886), (0.75, 307), (0.75, 513), (0.75, 624), (0.75, 641), (0.75, 743), (0.75, 863), (0.75, 615), (0.75, 809), (0.75, 628), (0.75, 30), (0.625, 631), (0.625, 757), (0.625, 427), (0.625, 776), (0.625, 523), (0.625, 808), (0.625, 879), (0.625, 520), (0.625, 764), (0.625, 20), (0.625, 264), (0.625, 265), (0.625, 371), (0.625, 117), (0.625, 857), (0.625, 762), (0.625, 719), (0.625, 630), (0.625, 417), (0.625, 701), (0.625, 885), (0.625, 873), (0.625, 632), (0.625, 767), (0.625, 890), (0.625, 887), (0.625, 741), (0.625, 662), (0.625, 835), (0.625, 831), (0.625, 595), (0.625, 515), (0.625, 754), (0.625, 760), (0.625, 793), (0.625, 521), (0.625, 420), (0.625, 517), (0.625, 777), (0.625, 758), (0.625, 766), (0.625, 418), (0.625, 753), (0.625, 199), (0.625, 869), (0.625, 634), (0.625, 878), (0.625, 227), (0.625, 752), (0.625, 181), (0.625, 287), (0.625, 640), (0.625, 639), (0.625, 877), (0.625, 542), (0.625, 37), (0.625, 865), (0.625, 636), (0.625, 412), (0.625, 870), (0.625, 883), (0.625, 656), (0.625, 667), (0.5, 716), (0.5, 56), (0.5, 541), (0.5, 137), (0.5, 240), (0.5, 675), (0.5, 861), (0.5, 860), (0.5, 731), (0.5, 653), (0.5, 604), (0.5, 248), (0.5, 354), (0.5, 874), (0.5, 93), (0.5, 673), (0.5, 825), (0.5, 120), (0.5, 296), (0.5, 655), (0.5, 342), (0.5, 421), (0.5, 191), (0.5, 415), (0.5, 175), (0.5, 643), (0.5, 530), (0.5, 726), (0.5, 425), (0.5, 852), (0.5, 755), (0.5, 621), (0.5, 645), (0.5, 1), (0.5, 538), (0.5, 536), (0.5, 833), (0.5, 200), (0.5, 431), (0.5, 603), (0.5, 551), (0.5, 364), (0.5, 608), (0.5, 794), (0.5, 527), (0.5, 651), (0.5, 606), (0.5, 86), (0.5, 669), (0.5, 188), (0.5, 400), (0.5, 648), (0.5, 666), (0.5, 779), (0.5, 518), (0.5, 781), (0.5, 663), (0.5, 800), (0.5, 627), (0.5, 205), (0.5, 226), (0.5, 247), (0.5, 554), (0.5, 791), (0.5, 218), (0.5, 434), (0.5, 540), (0.5, 880), (0.5, 672), (0.5, 826), (0.5, 327), (0.5, 711), (0.5, 529), (0.5, 785), (0.5, 545), (0.5, 419), (0.5, 619), (0.5, 893), (0.5, 430), (0.5, 866), (0.5, 134), (0.5, 112), (0.5, 787), (0.5, 740), (0.5, 749), (0.5, 80), (0.5, 724), (0.5, 249), (0.5, 406), (0.5, 141), (0.5, 710), (0.5, 844), (0.5, 855), (0.5, 788), (0.5, 771), (0.375, 677), (0.375, 549), (0.375, 564), (0.375, 309), (0.375, 165), (0.375, 674), (0.375, 268), (0.375, 553), (0.375, 261), (0.375, 405), (0.375, 444), (0.375, 65), (0.375, 558), (0.375, 32), (0.375, 102), (0.375, 402), (0.375, 681), (0.375, 337), (0.375, 795), (0.375, 693), (0.375, 365), (0.375, 679), (0.375, 171), (0.375, 442), (0.375, 638), (0.375, 561), (0.375, 769), (0.375, 690), (0.375, 106), (0.375, 35), (0.375, 678), (0.375, 694), (0.375, 562), (0.375, 563), (0.375, 306), (0.375, 343), (0.375, 129), (0.375, 438), (0.375, 557), (0.375, 684), (0.375, 440), (0.375, 688), (0.375, 446), (0.375, 692), (0.375, 279), (0.375, 617), (0.375, 439), (0.375, 876), (0.375, 552), (0.29166666666666663, 63), (0.29166666666666663, 465), (0.29166666666666663, 260), (0.29166666666666663, 466), (0.29166666666666663, 7), (0.29166666666666663, 571), (0.29166666666666663, 42), (0.29166666666666663, 395), (0.29166666666666663, 349), (0.29166666666666663, 579), (0.29166666666666663, 453), (0.29166666666666663, 269), (0.29166666666666663, 139), (0.29166666666666663, 467), (0.29166666666666663, 325), (0.29166666666666663, 457), (0.29166666666666663, 456), (0.29166666666666663, 581), (0.29166666666666663, 384), (0.29166666666666663, 460), (0.29166666666666663, 583), (0.29166666666666663, 580), (0.29166666666666663, 567), (0.29166666666666663, 484), (0.29166666666666663, 60), (0.29166666666666663, 67), (0.29166666666666663, 454), (0.29166666666666663, 108), (0.29166666666666663, 244), (0.29166666666666663, 491), (0.29166666666666663, 389), (0.29166666666666663, 48), (0.29166666666666663, 322), (0.29166666666666663, 329), (0.29166666666666663, 463), (0.25, 823), (0.25, 849), (0.25, 842), (0.25, 802), (0.25, 830)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 52
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 696
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 278
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`5`#`#`1`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ 5 1) 1) x))
 nr_nodes: 8]
(CANDIDATE)[id: 598
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`5`#`#`x`#`#`(* ? ?)`1`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 5 x) (* 1 y)))
 nr_nodes: 8]
(CANDIDATE)[id: 811
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`5`#`#`1`#`#`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 5 1) x) y))
 nr_nodes: 8]
[Generation 6]
[Computing fitness]
[(1.5, 696), (1.5, 894), (1.5, 52), (1.375, 967), (1.375, 494), (1.375, 799), (1.375, 751), (1.375, 798), (1.375, 919), (1.375, 278), (1.375, 598), (1.375, 698), (1.375, 811), (1.375, 897), (1.25, 495), (1.25, 522), (1.25, 986), (1.25, 703), (1.25, 193), (1.25, 733), (1.25, 968), (1.25, 917), (1.25, 803), (1.25, 429), (1.25, 820), (1.25, 806), (1.25, 596), (1.25, 904), (1.25, 906), (1.25, 738), (1.25, 594), (1.25, 872), (1.25, 908), (1.25, 504), (1.125, 728), (1.125, 960), (1.125, 898), (1.125, 704), (1.125, 709), (1.125, 746), (1.125, 721), (1.125, 837), (1.125, 814), (1.125, 868), (1.125, 629), (1.125, 353), (1.125, 812), (1.125, 505), (1.125, 801), (1.125, 445), (1.125, 699), (1.125, 407), (1.125, 599), (1.125, 682), (1.125, 132), (1.125, 839), (1.125, 923), (1.125, 909), (1.125, 818), (1.125, 730), (1.125, 496), (1.125, 913), (1.125, 813), (1.125, 706), (1.125, 810), (1.125, 722), (1.125, 970), (1.125, 600), (1.0, 612), (1.0, 907), (1.0, 184), (1.0, 851), (1.0, 559), (1.0, 824), (1.0, 963), (1.0, 838), (1.0, 358), (1.0, 516), (1.0, 954), (1.0, 510), (1.0, 974), (1.0, 433), (1.0, 506), (1.0, 772), (1.0, 160), (1.0, 840), (1.0, 805), (1.0, 403), (1.0, 782), (1.0, 411), (1.0, 763), (1.0, 924), (1.0, 884), (1.0, 614), (1.0, 712), (1.0, 903), (1.0, 737), (1.0, 847), (1.0, 555), (1.0, 715), (1.0, 856), (1.0, 508), (1.0, 736), (1.0, 602), (1.0, 948), (1.0, 941), (1.0, 707), (1.0, 216), (1.0, 848), (1.0, 729), (1.0, 613), (1.0, 593), (1.0, 435), (1.0, 973), (1.0, 734), (1.0, 972), (1.0, 944), (1.0, 828), (1.0, 845), (1.0, 166), (1.0, 318), (1.0, 610), (1.0, 77), (1.0, 534), (1.0, 888), (1.0, 502), (1.0, 718), (1.0, 514), (1.0, 212), (1.0, 821), (1.0, 660), (1.0, 500), (1.0, 149), (1.0, 714), (1.0, 846), (1.0, 892), (1.0, 611), (1.0, 950), (1.0, 966), (1.0, 532), (1.0, 853), (1.0, 409), (1.0, 789), (1.0, 713), (1.0, 498), (1.0, 172), (1.0, 686), (1.0, 957), (1.0, 89), (1.0, 144), (1.0, 177), (1.0, 499), (1.0, 946), (1.0, 251), (1.0, 929), (1.0, 905), (1.0, 934), (1.0, 414), (1.0, 958), (0.875, 979), (0.875, 41), (0.875, 512), (0.875, 592), (0.875, 816), (0.875, 622), (0.875, 366), (0.875, 797), (0.875, 858), (0.875, 882), (0.75, 959), (0.75, 641), (0.75, 30), (0.75, 994), (0.75, 307), (0.75, 961), (0.75, 702), (0.75, 303), (0.75, 990), (0.75, 46), (0.75, 859), (0.75, 513), (0.75, 413), (0.75, 991), (0.75, 984), (0.75, 993), (0.75, 886), (0.75, 989), (0.75, 863), (0.75, 624), (0.75, 628), (0.75, 649), (0.75, 547), (0.75, 625), (0.75, 615), (0.75, 920), (0.75, 743), (0.75, 809), (0.75, 850), (0.625, 418), (0.625, 632), (0.625, 760), (0.625, 515), (0.625, 877), (0.625, 701), (0.625, 879), (0.625, 636), (0.625, 757), (0.625, 427), (0.625, 656), (0.625, 793), (0.625, 927), (0.625, 753), (0.625, 420), (0.625, 517), (0.625, 878), (0.625, 835), (0.625, 264), (0.625, 921), (0.625, 873), (0.625, 523), (0.625, 199), (0.625, 777), (0.625, 865), (0.625, 762), (0.625, 857), (0.625, 916), (0.625, 521), (0.625, 971), (0.625, 667), (0.625, 265), (0.625, 831), (0.625, 287), (0.625, 869), (0.625, 631), (0.625, 767), (0.625, 639), (0.625, 808), (0.625, 371), (0.625, 996), (0.625, 776), (0.625, 634), (0.625, 883), (0.625, 754), (0.625, 520), (0.625, 752), (0.625, 117), (0.625, 933), (0.625, 662), (0.625, 37), (0.625, 870), (0.625, 741), (0.625, 595), (0.625, 887), (0.625, 417), (0.625, 181), (0.625, 766), (0.625, 640), (0.625, 20), (0.625, 885), (0.625, 758), (0.625, 764), (0.625, 900), (0.625, 719), (0.625, 542), (0.625, 227), (0.625, 412), (0.625, 630), (0.625, 890), (0.5, 247), (0.5, 430), (0.5, 545), (0.5, 969), (0.5, 226), (0.5, 953), (0.5, 604), (0.5, 771), (0.5, 781), (0.5, 825), (0.5, 541), (0.5, 406), (0.5, 726), (0.5, 939), (0.5, 880), (0.5, 860), (0.5, 982), (0.5, 755), (0.5, 354), (0.5, 1), (0.5, 785), (0.5, 855), (0.5, 205), (0.5, 675), (0.5, 606), (0.5, 645), (0.5, 896), (0.5, 175), (0.5, 648), (0.5, 740), (0.5, 794), (0.5, 327), (0.5, 724), (0.5, 672), (0.5, 621), (0.5, 936), (0.5, 651), (0.5, 529), (0.5, 844), (0.5, 914), (0.5, 141), (0.5, 663), (0.5, 669), (0.5, 653), (0.5, 249), (0.5, 93), (0.5, 248), (0.5, 608), (0.5, 902), (0.5, 800), (0.5, 56), (0.5, 861), (0.5, 200), (0.5, 788), (0.5, 945), (0.5, 188), (0.5, 296), (0.5, 710), (0.5, 893), (0.5, 931), (0.5, 530), (0.5, 779), (0.5, 400), (0.5, 431), (0.5, 938), (0.5, 527), (0.5, 551), (0.5, 342), (0.5, 643), (0.5, 673), (0.5, 731), (0.5, 627), (0.5, 80), (0.5, 874), (0.5, 852), (0.5, 364), (0.5, 137), (0.5, 134), (0.5, 120), (0.5, 787), (0.5, 240), (0.5, 833), (0.5, 191), (0.5, 866), (0.5, 981), (0.5, 910), (0.5, 218), (0.5, 716), (0.5, 554), (0.5, 976), (0.5, 540), (0.5, 421), (0.5, 434), (0.5, 749), (0.5, 826), (0.5, 619), (0.5, 425), (0.5, 86), (0.5, 112), (0.5, 943), (0.5, 419), (0.5, 536), (0.5, 711), (0.5, 603), (0.5, 791), (0.5, 538), (0.5, 666), (0.5, 415), (0.5, 518), (0.5, 655), (0.375, 677), (0.375, 955), (0.375, 32), (0.375, 165), (0.375, 309), (0.375, 978), (0.375, 405), (0.375, 553), (0.375, 65), (0.375, 564), (0.375, 268), (0.375, 444), (0.375, 261), (0.375, 558), (0.375, 549), (0.375, 987), (0.375, 674), (0.25, 912), (0.25, 925), (0.25, 965), (0.25, 951), (0.25, 975)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 696
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 894
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 52
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 967
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`5`#`#`1`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ 5 1) 1) x))
 nr_nodes: 8]
(CANDIDATE)[id: 494
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`5`#`#`1`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ 5 1) 1) x))
 nr_nodes: 8]
[Generation 7]
[Computing fitness]
[(1.5, 894), (1.5, 997), (1.5, 696), (1.5, 52), (1.375, 1000), (1.375, 799), (1.375, 1006), (1.375, 897), (1.375, 278), (1.375, 919), (1.375, 798), (1.375, 494), (1.375, 751), (1.375, 598), (1.375, 698), (1.375, 1003), (1.375, 811), (1.375, 967), (1.375, 1004), (1.25, 908), (1.25, 1060), (1.25, 193), (1.25, 1048), (1.25, 806), (1.25, 703), (1.25, 904), (1.25, 596), (1.25, 733), (1.25, 1059), (1.25, 1012), (1.25, 906), (1.25, 495), (1.25, 968), (1.25, 594), (1.25, 917), (1.25, 872), (1.25, 1014), (1.25, 738), (1.25, 504), (1.25, 820), (1.25, 986), (1.25, 803), (1.25, 522), (1.25, 1085), (1.25, 429), (1.125, 132), (1.125, 1083), (1.125, 730), (1.125, 970), (1.125, 496), (1.125, 960), (1.125, 721), (1.125, 1032), (1.125, 801), (1.125, 709), (1.125, 704), (1.125, 682), (1.125, 706), (1.125, 923), (1.125, 810), (1.125, 728), (1.125, 445), (1.125, 722), (1.125, 813), (1.125, 837), (1.125, 353), (1.125, 1023), (1.125, 812), (1.125, 629), (1.125, 818), (1.125, 898), (1.125, 1044), (1.125, 1027), (1.125, 1036), (1.125, 599), (1.125, 868), (1.125, 839), (1.125, 1063), (1.125, 505), (1.125, 909), (1.125, 913), (1.125, 699), (1.125, 600), (1.125, 746), (1.125, 1056), (1.125, 407), (1.125, 814), (1.125, 1008), (1.0, 824), (1.0, 177), (1.0, 184), (1.0, 714), (1.0, 435), (1.0, 144), (1.0, 828), (1.0, 1010), (1.0, 514), (1.0, 707), (1.0, 1089), (1.0, 409), (1.0, 957), (1.0, 613), (1.0, 1062), (1.0, 1050), (1.0, 963), (1.0, 172), (1.0, 712), (1.0, 737), (1.0, 713), (1.0, 612), (1.0, 1071), (1.0, 729), (1.0, 508), (1.0, 847), (1.0, 251), (1.0, 929), (1.0, 433), (1.0, 903), (1.0, 166), (1.0, 502), (1.0, 856), (1.0, 972), (1.0, 973), (1.0, 944), (1.0, 1051), (1.0, 905), (1.0, 948), (1.0, 1100), (1.0, 934), (1.0, 954), (1.0, 1057), (1.0, 516), (1.0, 848), (1.0, 851), (1.0, 660), (1.0, 1009), (1.0, 614), (1.0, 763), (1.0, 1082), (1.0, 1007), (1.0, 772), (1.0, 715), (1.0, 853), (1.0, 414), (1.0, 789), (1.0, 941), (1.0, 510), (1.0, 149), (1.0, 1065), (1.0, 318), (1.0, 1045), (1.0, 946), (1.0, 534), (1.0, 924), (1.0, 821), (1.0, 89), (1.0, 845), (1.0, 499), (1.0, 686), (1.0, 1080), (1.0, 216), (1.0, 846), (1.0, 1076), (1.0, 602), (1.0, 1095), (1.0, 532), (1.0, 160), (1.0, 358), (1.0, 718), (1.0, 1052), (1.0, 974), (1.0, 840), (1.0, 411), (1.0, 1019), (1.0, 212), (1.0, 892), (1.0, 782), (1.0, 498), (1.0, 1061), (1.0, 1054), (1.0, 950), (1.0, 610), (1.0, 958), (1.0, 1092), (1.0, 907), (1.0, 77), (1.0, 888), (1.0, 734), (1.0, 506), (1.0, 838), (1.0, 559), (1.0, 611), (1.0, 555), (1.0, 736), (1.0, 1066), (1.0, 403), (1.0, 1088), (1.0, 805), (1.0, 593), (1.0, 884), (1.0, 1025), (1.0, 1077), (1.0, 1074), (1.0, 500), (1.0, 1093), (1.0, 966), (0.875, 592), (0.875, 366), (0.875, 41), (0.875, 622), (0.875, 816), (0.875, 858), (0.875, 512), (0.875, 797), (0.875, 882), (0.875, 979), (0.75, 984), (0.75, 628), (0.75, 624), (0.75, 303), (0.75, 1098), (0.75, 859), (0.75, 991), (0.75, 547), (0.75, 863), (0.75, 994), (0.75, 850), (0.75, 413), (0.75, 809), (0.75, 1035), (0.75, 641), (0.75, 920), (0.75, 989), (0.75, 743), (0.75, 30), (0.75, 649), (0.75, 46), (0.75, 307), (0.75, 625), (0.75, 886), (0.75, 513), (0.75, 961), (0.75, 959), (0.75, 702), (0.75, 615), (0.75, 993), (0.75, 990), (0.625, 760), (0.625, 916), (0.625, 427), (0.625, 634), (0.625, 766), (0.625, 662), (0.625, 878), (0.625, 927), (0.625, 808), (0.625, 900), (0.625, 371), (0.625, 757), (0.625, 767), (0.625, 636), (0.625, 887), (0.625, 523), (0.625, 879), (0.625, 1042), (0.625, 520), (0.625, 264), (0.625, 719), (0.625, 630), (0.625, 793), (0.625, 117), (0.625, 869), (0.625, 835), (0.625, 776), (0.625, 656), (0.625, 517), (0.625, 595), (0.625, 20), (0.625, 632), (0.625, 181), (0.625, 265), (0.625, 640), (0.625, 890), (0.625, 865), (0.625, 762), (0.625, 667), (0.625, 1022), (0.625, 758), (0.625, 631), (0.625, 877), (0.625, 287), (0.625, 971), (0.625, 921), (0.625, 1020), (0.625, 1087), (0.625, 754), (0.625, 885), (0.625, 873), (0.625, 883), (0.625, 420), (0.625, 227), (0.625, 199), (0.625, 639), (0.625, 741), (0.625, 753), (0.625, 37), (0.625, 870), (0.625, 752), (0.625, 857), (0.625, 1028), (0.625, 417), (0.625, 542), (0.625, 777), (0.625, 701), (0.625, 1033), (0.625, 521), (0.625, 996), (0.625, 764), (0.625, 412), (0.625, 418), (0.625, 933), (0.625, 831), (0.625, 515), (0.625, 1040), (0.5, 604), (0.5, 606), (0.5, 1), (0.5, 1016), (0.5, 724), (0.5, 1053), (0.5, 1018), (0.5, 902), (0.5, 430), (0.5, 880), (0.5, 861), (0.5, 675), (0.5, 982), (0.5, 672), (0.5, 608), (0.5, 726), (0.5, 953), (0.5, 755), (0.5, 914), (0.5, 188), (0.5, 1058), (0.5, 354), (0.5, 1030), (0.5, 645), (0.5, 247), (0.5, 936), (0.5, 740), (0.5, 945), (0.5, 249), (0.5, 663), (0.5, 327), (0.5, 651), (0.5, 800), (0.5, 296), (0.5, 896), (0.5, 56), (0.5, 1099), (0.5, 1002), (0.5, 999), (0.5, 825), (0.5, 1069), (0.5, 545), (0.5, 541), (0.5, 969), (0.5, 529), (0.5, 205), (0.5, 200), (0.5, 669), (0.5, 844), (0.5, 406), (0.5, 653), (0.5, 860), (0.5, 226), (0.5, 248), (0.5, 621), (0.5, 855), (0.5, 141), (0.5, 1091), (0.5, 781), (0.5, 175), (0.5, 1013), (0.5, 93), (0.5, 785), (0.5, 788), (0.5, 771), (0.5, 648), (0.5, 939), (0.5, 1096), (0.5, 794), (0.5, 1067), (0.375, 1038), (0.25, 1047), (0.25, 1037), (0.25, 1043), (0.25, 1073), (0.25, 1078)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 894
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 997
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 696
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 52
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1000
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`y`#`#`x`#`#`(* ? ?)`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ y x) (* 5 y)))
 nr_nodes: 8]
[Generation 8]
[Computing fitness]
[(1.5, 52), (1.5, 894), (1.5, 696), (1.5, 1102), (1.5, 1101), (1.5, 997), (1.375, 811), (1.375, 751), (1.375, 799), (1.375, 598), (1.375, 798), (1.375, 1004), (1.375, 919), (1.375, 1109), (1.375, 698), (1.375, 1000), (1.375, 494), (1.375, 1105), (1.375, 967), (1.375, 1103), (1.375, 897), (1.375, 278), (1.375, 1006), (1.375, 1003), (1.25, 193), (1.25, 1188), (1.25, 1059), (1.25, 1122), (1.25, 1149), (1.25, 738), (1.25, 917), (1.25, 803), (1.25, 906), (1.25, 703), (1.25, 1060), (1.25, 1118), (1.25, 986), (1.25, 968), (1.25, 733), (1.25, 1012), (1.25, 820), (1.25, 596), (1.25, 908), (1.25, 1120), (1.25, 594), (1.25, 872), (1.25, 1048), (1.25, 1127), (1.25, 1115), (1.25, 1014), (1.25, 429), (1.25, 504), (1.25, 1121), (1.25, 1085), (1.25, 522), (1.25, 495), (1.25, 806), (1.25, 904), (1.25, 1184), (1.125, 868), (1.125, 810), (1.125, 1151), (1.125, 1153), (1.125, 1179), (1.125, 706), (1.125, 1152), (1.125, 1159), (1.125, 1137), (1.125, 699), (1.125, 600), (1.125, 1032), (1.125, 813), (1.125, 682), (1.125, 1027), (1.125, 730), (1.125, 837), (1.125, 1119), (1.125, 801), (1.125, 496), (1.125, 1157), (1.125, 812), (1.125, 1083), (1.125, 407), (1.125, 353), (1.125, 909), (1.125, 1036), (1.125, 629), (1.125, 746), (1.125, 1056), (1.125, 709), (1.125, 704), (1.125, 1113), (1.125, 1135), (1.125, 722), (1.125, 1136), (1.125, 1044), (1.125, 1187), (1.125, 818), (1.125, 1139), (1.125, 445), (1.125, 1144), (1.125, 1129), (1.125, 970), (1.125, 960), (1.125, 599), (1.125, 814), (1.125, 721), (1.125, 1156), (1.125, 505), (1.125, 1023), (1.125, 923), (1.125, 1183), (1.125, 728), (1.125, 898), (1.125, 1008), (1.125, 132), (1.125, 1126), (1.125, 1130), (1.125, 839), (1.125, 1063), (1.125, 913), (1.0, 160), (1.0, 1045), (1.0, 1100), (1.0, 946), (1.0, 1111), (1.0, 1007), (1.0, 714), (1.0, 966), (1.0, 782), (1.0, 1162), (1.0, 613), (1.0, 1095), (1.0, 853), (1.0, 1191), (1.0, 1182), (1.0, 963), (1.0, 972), (1.0, 713), (1.0, 1009), (1.0, 1062), (1.0, 1052), (1.0, 77), (1.0, 851), (1.0, 1054), (1.0, 707), (1.0, 166), (1.0, 660), (1.0, 184), (1.0, 846), (1.0, 1088), (1.0, 847), (1.0, 1166), (1.0, 1092), (1.0, 903), (1.0, 1050), (1.0, 1010), (1.0, 1168), (1.0, 414), (1.0, 1051), (1.0, 838), (1.0, 737), (1.0, 1066), (1.0, 502), (1.0, 1175), (1.0, 500), (1.0, 944), (1.0, 1128), (1.0, 1185), (1.0, 1065), (1.0, 712), (1.0, 924), (1.0, 144), (1.0, 403), (1.0, 763), (1.0, 840), (1.0, 1161), (1.0, 498), (1.0, 888), (1.0, 1082), (1.0, 772), (1.0, 1163), (1.0, 177), (1.0, 216), (1.0, 555), (1.0, 411), (1.0, 892), (1.0, 612), (1.0, 1080), (1.0, 514), (1.0, 614), (1.0, 1176), (1.0, 957), (1.0, 736), (1.0, 593), (1.0, 89), (1.0, 954), (1.0, 1076), (1.0, 251), (1.0, 884), (1.0, 941), (1.0, 499), (1.0, 318), (1.0, 534), (1.0, 149), (1.0, 1186), (1.0, 718), (1.0, 1074), (1.0, 973), (1.0, 1057), (1.0, 1171), (1.0, 1061), (1.0, 602), (1.0, 729), (1.0, 1192), (1.0, 1019), (1.0, 1025), (1.0, 1195), (1.0, 1164), (1.0, 1077), (1.0, 433), (1.0, 686), (1.0, 821), (1.0, 1169), (1.0, 958), (1.0, 1140), (1.0, 848), (1.0, 1071), (1.0, 508), (1.0, 1089), (1.0, 845), (1.0, 929), (1.0, 172), (1.0, 824), (1.0, 789), (1.0, 516), (1.0, 856), (1.0, 905), (1.0, 611), (1.0, 934), (1.0, 1174), (1.0, 907), (1.0, 1117), (1.0, 506), (1.0, 974), (1.0, 610), (1.0, 1093), (1.0, 950), (1.0, 212), (1.0, 1194), (1.0, 559), (1.0, 409), (1.0, 358), (1.0, 805), (1.0, 828), (1.0, 1147), (1.0, 510), (1.0, 715), (1.0, 948), (1.0, 435), (1.0, 1125), (1.0, 734), (1.0, 532), (0.875, 366), (0.875, 592), (0.875, 41), (0.875, 512), (0.875, 882), (0.875, 622), (0.875, 816), (0.875, 858), (0.875, 797), (0.875, 979), (0.75, 702), (0.75, 863), (0.75, 1098), (0.75, 641), (0.75, 984), (0.75, 850), (0.75, 303), (0.75, 989), (0.75, 859), (0.75, 1155), (0.75, 547), (0.75, 628), (0.75, 743), (0.75, 920), (0.75, 513), (0.75, 413), (0.75, 46), (0.75, 991), (0.75, 615), (0.75, 961), (0.75, 307), (0.75, 993), (0.75, 809), (0.75, 30), (0.75, 990), (0.75, 886), (0.75, 994), (0.75, 1035), (0.75, 649), (0.75, 624), (0.75, 959), (0.75, 625), (0.625, 793), (0.625, 427), (0.625, 418), (0.625, 766), (0.625, 933), (0.625, 776), (0.625, 767), (0.625, 752), (0.625, 417), (0.625, 371), (0.625, 808), (0.625, 883), (0.625, 634), (0.625, 754), (0.625, 1020), (0.625, 890), (0.625, 857), (0.625, 523), (0.625, 1132), (0.625, 515), (0.625, 1190), (0.625, 1028), (0.625, 921), (0.625, 916), (0.625, 631), (0.625, 927), (0.625, 719), (0.625, 595), (0.625, 521), (0.625, 1033), (0.625, 764), (0.625, 887), (0.625, 757), (0.625, 662), (0.625, 264), (0.625, 667), (0.625, 199), (0.625, 760), (0.625, 762), (0.625, 1087), (0.625, 412), (0.625, 758), (0.625, 1177), (0.625, 1022), (0.625, 831), (0.625, 1040), (0.625, 996), (0.625, 1112), (0.625, 835), (0.625, 517), (0.625, 287), (0.625, 741), (0.625, 630), (0.625, 636), (0.625, 520), (0.625, 971), (0.625, 632), (0.625, 542), (0.625, 37), (0.625, 865), (0.625, 753), (0.625, 869), (0.625, 227), (0.625, 656), (0.625, 873), (0.625, 1042), (0.625, 877), (0.625, 777), (0.625, 420), (0.625, 20), (0.625, 117), (0.625, 1145), (0.625, 265), (0.625, 181), (0.625, 878), (0.625, 639), (0.625, 640), (0.625, 870), (0.625, 885), (0.625, 879), (0.625, 900), (0.625, 701), (0.5, 1170), (0.5, 604), (0.5, 1181), (0.5, 1148), (0.5, 1178), (0.5, 1107), (0.5, 1180), (0.375, 1134), (0.375, 1165), (0.25, 1142), (0.25, 1146), (0.25, 1124), (0.25, 1173)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 52
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 894
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 696
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1102
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1101
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 9]
[Computing fitness]
[(1.5, 1196), (1.5, 1102), (1.5, 1101), (1.5, 1197), (1.5, 1253), (1.5, 894), (1.5, 1198), (1.5, 696), (1.5, 997), (1.5, 52), (1.375, 698), (1.375, 1277), (1.375, 1105), (1.375, 751), (1.375, 811), (1.375, 494), (1.375, 1287), (1.375, 1004), (1.375, 1199), (1.375, 1103), (1.375, 1109), (1.375, 1003), (1.375, 967), (1.375, 897), (1.375, 1006), (1.375, 598), (1.375, 1268), (1.375, 1000), (1.375, 1204), (1.375, 919), (1.375, 798), (1.375, 799), (1.375, 278), (1.25, 1118), (1.25, 803), (1.25, 968), (1.25, 1012), (1.25, 906), (1.25, 1216), (1.25, 1223), (1.25, 1121), (1.25, 986), (1.25, 193), (1.25, 1014), (1.25, 1218), (1.25, 1219), (1.25, 806), (1.25, 594), (1.25, 1115), (1.25, 1230), (1.25, 1122), (1.25, 1225), (1.25, 908), (1.25, 1085), (1.25, 522), (1.25, 1226), (1.25, 495), (1.25, 429), (1.25, 820), (1.25, 1127), (1.25, 1217), (1.25, 1060), (1.25, 1284), (1.25, 872), (1.25, 596), (1.25, 917), (1.25, 1120), (1.25, 1184), (1.25, 703), (1.25, 1237), (1.25, 733), (1.25, 504), (1.25, 1059), (1.25, 1188), (1.25, 1149), (1.25, 1048), (1.25, 1250), (1.25, 904), (1.25, 738), (1.125, 1240), (1.125, 1056), (1.125, 706), (1.125, 1156), (1.125, 1126), (1.125, 837), (1.125, 801), (1.125, 1203), (1.125, 629), (1.125, 1152), (1.125, 1206), (1.125, 1187), (1.125, 353), (1.125, 1232), (1.125, 1113), (1.125, 913), (1.125, 970), (1.125, 1119), (1.125, 682), (1.125, 839), (1.125, 746), (1.125, 1027), (1.125, 1241), (1.125, 445), (1.125, 721), (1.125, 1139), (1.125, 1247), (1.125, 1183), (1.125, 1252), (1.125, 1151), (1.125, 1008), (1.125, 1036), (1.125, 1136), (1.125, 1238), (1.125, 496), (1.125, 1261), (1.125, 1269), (1.125, 1083), (1.125, 722), (1.125, 1032), (1.125, 960), (1.125, 699), (1.125, 818), (1.125, 923), (1.125, 1157), (1.125, 1179), (1.125, 909), (1.125, 1044), (1.125, 709), (1.125, 1153), (1.125, 599), (1.125, 1254), (1.125, 1023), (1.125, 868), (1.125, 730), (1.125, 704), (1.125, 728), (1.125, 1159), (1.125, 1063), (1.125, 1129), (1.125, 132), (1.125, 1144), (1.125, 1270), (1.125, 505), (1.125, 812), (1.125, 814), (1.125, 407), (1.125, 898), (1.125, 1130), (1.125, 600), (1.125, 1137), (1.125, 1233), (1.125, 813), (1.125, 810), (1.125, 1135), (1.0, 903), (1.0, 1066), (1.0, 166), (1.0, 1065), (1.0, 1276), (1.0, 718), (1.0, 435), (1.0, 660), (1.0, 1175), (1.0, 736), (1.0, 1062), (1.0, 1051), (1.0, 318), (1.0, 1265), (1.0, 1074), (1.0, 358), (1.0, 1192), (1.0, 602), (1.0, 1171), (1.0, 212), (1.0, 892), (1.0, 411), (1.0, 1161), (1.0, 614), (1.0, 593), (1.0, 948), (1.0, 734), (1.0, 944), (1.0, 941), (1.0, 782), (1.0, 1054), (1.0, 840), (1.0, 500), (1.0, 172), (1.0, 1128), (1.0, 149), (1.0, 1080), (1.0, 1140), (1.0, 950), (1.0, 611), (1.0, 502), (1.0, 1019), (1.0, 516), (1.0, 498), (1.0, 974), (1.0, 712), (1.0, 510), (1.0, 828), (1.0, 888), (1.0, 508), (1.0, 1244), (1.0, 905), (1.0, 824), (1.0, 559), (1.0, 144), (1.0, 1166), (1.0, 1211), (1.0, 1125), (1.0, 1050), (1.0, 612), (1.0, 946), (1.0, 1089), (1.0, 1281), (1.0, 1117), (1.0, 1163), (1.0, 1258), (1.0, 954), (1.0, 184), (1.0, 884), (1.0, 1273), (1.0, 846), (1.0, 838), (1.0, 1095), (1.0, 851), (1.0, 805), (1.0, 506), (1.0, 216), (1.0, 1168), (1.0, 1093), (1.0, 414), (1.0, 514), (1.0, 1111), (1.0, 1009), (1.0, 1057), (1.0, 1185), (1.0, 1052), (1.0, 1231), (1.0, 924), (1.0, 1289), (1.0, 1061), (1.0, 160), (1.0, 1092), (1.0, 177), (1.0, 1007), (1.0, 957), (1.0, 251), (1.0, 1010), (1.0, 715), (1.0, 1255), (1.0, 1100), (1.0, 934), (1.0, 534), (1.0, 1176), (1.0, 1147), (1.0, 707), (1.0, 1220), (1.0, 763), (1.0, 1215), (1.0, 714), (1.0, 821), (1.0, 972), (1.0, 963), (1.0, 1025), (1.0, 1191), (1.0, 1082), (1.0, 403), (1.0, 1162), (1.0, 1076), (1.0, 1174), (1.0, 845), (1.0, 555), (1.0, 433), (1.0, 1045), (1.0, 1195), (1.0, 1088), (1.0, 610), (1.0, 853), (1.0, 613), (1.0, 789), (1.0, 856), (1.0, 409), (1.0, 1186), (1.0, 847), (1.0, 1077), (1.0, 907), (1.0, 713), (1.0, 77), (1.0, 89), (1.0, 966), (1.0, 973), (1.0, 1200), (1.0, 1194), (1.0, 686), (1.0, 1164), (1.0, 848), (1.0, 1071), (1.0, 772), (1.0, 499), (1.0, 1182), (1.0, 1169), (1.0, 729), (1.0, 958), (1.0, 532), (1.0, 1280), (1.0, 929), (1.0, 737), (0.875, 366), (0.875, 797), (0.875, 882), (0.875, 592), (0.875, 858), (0.875, 979), (0.875, 512), (0.875, 816), (0.875, 622), (0.875, 41), (0.75, 991), (0.75, 961), (0.75, 743), (0.75, 850), (0.75, 1155), (0.75, 994), (0.75, 649), (0.75, 307), (0.75, 413), (0.75, 702), (0.75, 1098), (0.75, 1227), (0.75, 989), (0.75, 624), (0.75, 959), (0.75, 990), (0.75, 30), (0.75, 547), (0.75, 984), (0.75, 641), (0.75, 625), (0.75, 615), (0.75, 513), (0.75, 859), (0.75, 886), (0.75, 920), (0.75, 46), (0.75, 1035), (0.75, 303), (0.75, 628), (0.75, 809), (0.75, 993), (0.75, 863), (0.625, 1229), (0.625, 767), (0.625, 1212), (0.625, 793), (0.625, 933), (0.625, 1132), (0.625, 371), (0.625, 1286), (0.625, 890), (0.625, 883), (0.625, 754), (0.625, 417), (0.625, 808), (0.625, 515), (0.625, 634), (0.625, 1020), (0.625, 766), (0.625, 418), (0.625, 1221), (0.625, 523), (0.625, 427), (0.625, 857), (0.625, 752), (0.625, 776), (0.5, 1210), (0.5, 1279), (0.5, 1282), (0.5, 1251), (0.5, 1283), (0.5, 1224), (0.5, 1249), (0.5, 1275), (0.5, 1271), (0.5, 1264), (0.5, 1288), (0.5, 1208), (0.5, 1272), (0.5, 1263), (0.5, 1202), (0.375, 1256), (0.375, 1260), (0.375, 1243), (0.375, 1228), (0.25, 1235), (0.25, 1266), (0.25, 1214), (0.25, 1246)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 1196
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1102
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1101
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1197
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1253
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`5`#`#`x`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 5 x) x) 1))
 nr_nodes: 8]
[Generation 10]
[Computing fitness]
[(1.5, 696), (1.5, 1101), (1.5, 1102), (1.5, 1197), (1.5, 1293), (1.5, 1290), (1.5, 1291), (1.5, 1384), (1.5, 894), (1.5, 1253), (1.5, 1196), (1.5, 997), (1.5, 1296), (1.5, 1198), (1.5, 52), (1.375, 1303), (1.375, 1004), (1.375, 494), (1.375, 1003), (1.375, 1109), (1.375, 1000), (1.375, 1302), (1.375, 1103), (1.375, 1287), (1.375, 1199), (1.375, 919), (1.375, 1105), (1.375, 1305), (1.375, 1306), (1.375, 811), (1.375, 1204), (1.375, 278), (1.375, 1304), (1.375, 897), (1.375, 1006), (1.375, 798), (1.375, 1307), (1.375, 967), (1.375, 598), (1.375, 1268), (1.375, 1277), (1.375, 799), (1.375, 698), (1.375, 751), (1.375, 1298), (1.25, 1250), (1.25, 1118), (1.25, 1121), (1.25, 1322), (1.25, 986), (1.25, 1325), (1.25, 1120), (1.25, 1223), (1.25, 495), (1.25, 1327), (1.25, 904), (1.25, 1012), (1.25, 1060), (1.25, 1149), (1.25, 1319), (1.25, 1127), (1.25, 1184), (1.25, 429), (1.25, 1312), (1.25, 193), (1.25, 1218), (1.25, 522), (1.25, 1329), (1.25, 917), (1.25, 1323), (1.25, 1216), (1.25, 1372), (1.25, 906), (1.25, 1085), (1.25, 1115), (1.25, 1225), (1.25, 1226), (1.25, 1217), (1.25, 872), (1.25, 1330), (1.25, 738), (1.25, 1237), (1.25, 1059), (1.25, 1333), (1.25, 806), (1.25, 594), (1.25, 1188), (1.25, 1014), (1.25, 1230), (1.25, 820), (1.25, 803), (1.25, 908), (1.25, 1122), (1.25, 703), (1.25, 596), (1.25, 1048), (1.25, 1310), (1.25, 1284), (1.25, 504), (1.25, 1336), (1.25, 968), (1.25, 1219), (1.25, 733), (1.125, 728), (1.125, 1240), (1.125, 1153), (1.125, 1370), (1.125, 1252), (1.125, 1261), (1.125, 1008), (1.125, 1063), (1.125, 1136), (1.125, 1187), (1.125, 699), (1.125, 505), (1.125, 1203), (1.125, 1183), (1.125, 1344), (1.125, 1254), (1.125, 1232), (1.125, 1233), (1.125, 1056), (1.125, 682), (1.125, 1299), (1.125, 813), (1.125, 1139), (1.125, 818), (1.125, 1044), (1.125, 868), (1.125, 1126), (1.125, 704), (1.125, 812), (1.125, 1339), (1.125, 923), (1.125, 909), (1.125, 1036), (1.125, 1156), (1.125, 496), (1.125, 1130), (1.125, 1152), (1.125, 898), (1.125, 913), (1.125, 1270), (1.125, 814), (1.125, 1159), (1.125, 1241), (1.125, 629), (1.125, 1206), (1.125, 709), (1.125, 1238), (1.125, 1345), (1.125, 1113), (1.125, 1137), (1.125, 837), (1.125, 407), (1.125, 599), (1.125, 1321), (1.125, 1343), (1.125, 1318), (1.125, 801), (1.125, 1129), (1.125, 1179), (1.125, 1151), (1.125, 1361), (1.125, 960), (1.125, 1027), (1.125, 1157), (1.125, 722), (1.125, 706), (1.125, 132), (1.125, 810), (1.125, 1385), (1.125, 1032), (1.125, 839), (1.125, 353), (1.125, 445), (1.125, 1119), (1.125, 970), (1.125, 1144), (1.125, 1135), (1.125, 600), (1.125, 1083), (1.125, 730), (1.125, 1341), (1.125, 721), (1.125, 746), (1.125, 1353), (1.125, 1023), (1.125, 1381), (1.125, 1269), (1.125, 1247), (1.0, 613), (1.0, 251), (1.0, 847), (1.0, 848), (1.0, 184), (1.0, 1182), (1.0, 1025), (1.0, 950), (1.0, 954), (1.0, 1360), (1.0, 89), (1.0, 1051), (1.0, 924), (1.0, 1019), (1.0, 500), (1.0, 149), (1.0, 435), (1.0, 1080), (1.0, 853), (1.0, 160), (1.0, 77), (1.0, 1128), (1.0, 498), (1.0, 1191), (1.0, 1195), (1.0, 1117), (1.0, 1050), (1.0, 1280), (1.0, 532), (1.0, 1074), (1.0, 884), (1.0, 409), (1.0, 1220), (1.0, 516), (1.0, 905), (1.0, 403), (1.0, 941), (1.0, 838), (1.0, 1244), (1.0, 1175), (1.0, 1125), (1.0, 1332), (1.0, 358), (1.0, 1378), (1.0, 610), (1.0, 805), (1.0, 1065), (1.0, 660), (1.0, 736), (1.0, 828), (1.0, 1095), (1.0, 946), (1.0, 892), (1.0, 212), (1.0, 1009), (1.0, 1289), (1.0, 718), (1.0, 966), (1.0, 856), (1.0, 686), (1.0, 1071), (1.0, 1355), (1.0, 1215), (1.0, 1147), (1.0, 846), (1.0, 1164), (1.0, 1186), (1.0, 499), (1.0, 1054), (1.0, 1076), (1.0, 1169), (1.0, 973), (1.0, 1007), (1.0, 534), (1.0, 934), (1.0, 1161), (1.0, 1171), (1.0, 508), (1.0, 614), (1.0, 1088), (1.0, 1211), (1.0, 1200), (1.0, 144), (1.0, 1077), (1.0, 948), (1.0, 957), (1.0, 1140), (1.0, 1192), (1.0, 715), (1.0, 963), (1.0, 1062), (1.0, 821), (1.0, 851), (1.0, 216), (1.0, 840), (1.0, 1255), (1.0, 559), (1.0, 1082), (1.0, 502), (1.0, 1093), (1.0, 1066), (1.0, 1163), (1.0, 929), (1.0, 712), (1.0, 1331), (1.0, 772), (1.0, 611), (1.0, 1162), (1.0, 555), (1.0, 729), (1.0, 737), (1.0, 1273), (1.0, 1346), (1.0, 707), (1.0, 172), (1.0, 1176), (1.0, 845), (1.0, 177), (1.0, 1194), (1.0, 944), (1.0, 1265), (1.0, 1052), (1.0, 433), (1.0, 1297), (1.0, 1276), (1.0, 1111), (1.0, 1045), (1.0, 612), (1.0, 974), (1.0, 972), (1.0, 1010), (1.0, 1057), (1.0, 1174), (1.0, 602), (1.0, 1335), (1.0, 734), (1.0, 1281), (1.0, 514), (1.0, 411), (1.0, 1258), (1.0, 958), (1.0, 1168), (1.0, 907), (1.0, 1092), (1.0, 713), (1.0, 506), (1.0, 1363), (1.0, 1089), (1.0, 1185), (1.0, 763), (1.0, 593), (1.0, 824), (1.0, 1061), (1.0, 1349), (1.0, 510), (1.0, 1166), (1.0, 414), (1.0, 888), (1.0, 789), (1.0, 1231), (1.0, 318), (1.0, 1100), (1.0, 782), (1.0, 714), (1.0, 166), (1.0, 903), (0.875, 366), (0.875, 592), (0.875, 979), (0.875, 41), (0.875, 797), (0.875, 816), (0.875, 512), (0.875, 622), (0.875, 1295), (0.875, 858), (0.875, 882), (0.75, 1351), (0.75, 1374), (0.75, 1379), (0.75, 743), (0.75, 850), (0.75, 1308), (0.75, 991), (0.75, 1155), (0.75, 961), (0.625, 1375), (0.625, 1359), (0.625, 1338), (0.625, 1377), (0.625, 1357), (0.5, 1324), (0.5, 1365), (0.5, 1366), (0.5, 1342), (0.5, 1383), (0.5, 1380), (0.5, 1334), (0.5, 1300), (0.5, 1314), (0.375, 1368), (0.375, 1320), (0.375, 1316), (0.375, 1347), (0.375, 1371), (0.25, 1309), (0.25, 1373), (0.25, 1328), (0.25, 1362)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 696
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1101
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1102
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1197
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1293
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 11]
[Computing fitness]
[(1.5, 1102), (1.5, 1296), (1.5, 1391), (1.5, 1390), (1.5, 1253), (1.5, 1290), (1.5, 1198), (1.5, 52), (1.5, 1386), (1.5, 696), (1.5, 1196), (1.5, 997), (1.5, 1392), (1.5, 1387), (1.5, 1389), (1.5, 1384), (1.5, 1101), (1.5, 1197), (1.5, 1404), (1.5, 1293), (1.5, 894), (1.5, 1291), (1.375, 1397), (1.375, 1403), (1.375, 919), (1.375, 1307), (1.375, 1408), (1.375, 598), (1.375, 811), (1.375, 1006), (1.375, 1287), (1.375, 1305), (1.375, 1303), (1.375, 1268), (1.375, 1003), (1.375, 278), (1.375, 1004), (1.375, 1306), (1.375, 1298), (1.375, 1103), (1.375, 1401), (1.375, 1199), (1.375, 1000), (1.375, 1395), (1.375, 1109), (1.375, 798), (1.375, 1426), (1.375, 1277), (1.375, 1411), (1.375, 751), (1.375, 1304), (1.375, 1204), (1.375, 1105), (1.375, 967), (1.375, 1302), (1.375, 494), (1.375, 698), (1.375, 897), (1.375, 799), (1.25, 1085), (1.25, 1237), (1.25, 733), (1.25, 1330), (1.25, 1012), (1.25, 1121), (1.25, 429), (1.25, 1333), (1.25, 1466), (1.25, 904), (1.25, 1184), (1.25, 594), (1.25, 703), (1.25, 1149), (1.25, 1226), (1.25, 522), (1.25, 1372), (1.25, 803), (1.25, 1454), (1.25, 820), (1.25, 1284), (1.25, 1118), (1.25, 1329), (1.25, 1120), (1.25, 1433), (1.25, 1115), (1.25, 1188), (1.25, 1336), (1.25, 596), (1.25, 1451), (1.25, 495), (1.25, 1489), (1.25, 906), (1.25, 806), (1.25, 193), (1.25, 1250), (1.25, 986), (1.25, 1322), (1.25, 1323), (1.25, 917), (1.25, 1216), (1.25, 1014), (1.25, 1225), (1.25, 1430), (1.25, 1048), (1.25, 1218), (1.25, 1230), (1.25, 504), (1.25, 1127), (1.25, 872), (1.25, 1327), (1.25, 1060), (1.25, 1422), (1.25, 1456), (1.25, 1219), (1.25, 1059), (1.25, 1223), (1.25, 908), (1.25, 1428), (1.25, 1325), (1.25, 1319), (1.25, 1310), (1.25, 968), (1.25, 1312), (1.25, 1217), (1.25, 1447), (1.25, 738), (1.25, 1122), (1.25, 1416), (1.125, 1135), (1.125, 1008), (1.125, 730), (1.125, 1341), (1.125, 600), (1.125, 1270), (1.125, 1157), (1.125, 1151), (1.125, 629), (1.125, 1056), (1.125, 599), (1.125, 814), (1.125, 1406), (1.125, 1032), (1.125, 1206), (1.125, 1343), (1.125, 909), (1.125, 1144), (1.125, 913), (1.125, 1129), (1.125, 1321), (1.125, 1232), (1.125, 1044), (1.125, 722), (1.125, 812), (1.125, 1462), (1.125, 1261), (1.125, 1179), (1.125, 1183), (1.125, 837), (1.125, 407), (1.125, 1477), (1.125, 132), (1.125, 1027), (1.125, 1187), (1.125, 818), (1.125, 1252), (1.125, 923), (1.125, 1153), (1.125, 898), (1.125, 1126), (1.125, 704), (1.125, 801), (1.125, 1233), (1.125, 445), (1.125, 1238), (1.125, 746), (1.125, 1381), (1.125, 1240), (1.125, 1344), (1.125, 1339), (1.125, 1385), (1.125, 699), (1.125, 1361), (1.125, 353), (1.125, 1023), (1.125, 1478), (1.125, 1137), (1.125, 1269), (1.125, 1254), (1.125, 1465), (1.125, 496), (1.125, 1156), (1.125, 1353), (1.125, 970), (1.125, 1318), (1.125, 1241), (1.125, 1487), (1.125, 682), (1.125, 1063), (1.125, 1203), (1.125, 709), (1.125, 1299), (1.125, 1130), (1.125, 1139), (1.125, 505), (1.125, 1036), (1.125, 1457), (1.125, 1247), (1.125, 1441), (1.125, 1152), (1.125, 728), (1.125, 1483), (1.125, 839), (1.125, 1159), (1.125, 813), (1.125, 1488), (1.125, 1370), (1.125, 868), (1.125, 1417), (1.125, 1119), (1.125, 810), (1.125, 706), (1.125, 1136), (1.125, 1423), (1.125, 1083), (1.125, 1345), (1.125, 960), (1.125, 721), (1.125, 1113), (1.0, 172), (1.0, 433), (1.0, 1054), (1.0, 403), (1.0, 1010), (1.0, 1125), (1.0, 946), (1.0, 821), (1.0, 1468), (1.0, 924), (1.0, 1082), (1.0, 1071), (1.0, 948), (1.0, 1066), (1.0, 1052), (1.0, 737), (1.0, 216), (1.0, 1171), (1.0, 660), (1.0, 1220), (1.0, 1019), (1.0, 1080), (1.0, 1147), (1.0, 905), (1.0, 177), (1.0, 1057), (1.0, 1194), (1.0, 718), (1.0, 944), (1.0, 1211), (1.0, 1169), (1.0, 1355), (1.0, 1007), (1.0, 1331), (1.0, 610), (1.0, 502), (1.0, 828), (1.0, 1174), (1.0, 856), (1.0, 1463), (1.0, 1045), (1.0, 1164), (1.0, 1117), (1.0, 707), (1.0, 1140), (1.0, 840), (1.0, 559), (1.0, 1415), (1.0, 934), (1.0, 160), (1.0, 1074), (1.0, 851), (1.0, 212), (1.0, 715), (1.0, 1093), (1.0, 929), (1.0, 498), (1.0, 500), (1.0, 611), (1.0, 1111), (1.0, 1346), (1.0, 1410), (1.0, 729), (1.0, 1485), (1.0, 1161), (1.0, 1192), (1.0, 1128), (1.0, 1297), (1.0, 409), (1.0, 950), (1.0, 555), (1.0, 1175), (1.0, 853), (1.0, 77), (1.0, 1088), (1.0, 1162), (1.0, 1244), (1.0, 973), (1.0, 941), (1.0, 712), (1.0, 435), (1.0, 1163), (1.0, 508), (1.0, 1255), (1.0, 1062), (1.0, 1332), (1.0, 89), (1.0, 954), (1.0, 1431), (1.0, 614), (1.0, 974), (1.0, 1076), (1.0, 612), (1.0, 149), (1.0, 1182), (1.0, 1186), (1.0, 1215), (1.0, 1443), (1.0, 499), (1.0, 1191), (1.0, 602), (1.0, 1280), (1.0, 1176), (1.0, 884), (1.0, 1095), (1.0, 838), (1.0, 534), (1.0, 1378), (1.0, 848), (1.0, 1195), (1.0, 846), (1.0, 251), (1.0, 1077), (1.0, 1065), (1.0, 1265), (1.0, 805), (1.0, 966), (1.0, 1050), (1.0, 358), (1.0, 1051), (1.0, 1461), (1.0, 1273), (1.0, 963), (1.0, 184), (1.0, 1276), (1.0, 1200), (1.0, 845), (1.0, 532), (1.0, 1025), (1.0, 847), (1.0, 972), (1.0, 144), (1.0, 1360), (1.0, 686), (1.0, 613), (1.0, 1450), (1.0, 1413), (1.0, 772), (1.0, 1009), (1.0, 736), (1.0, 892), (1.0, 516), (1.0, 1289), (1.0, 957), (0.875, 1394), (0.875, 1402), (0.75, 1419), (0.75, 1400), (0.625, 1470), (0.625, 1481), (0.625, 1453), (0.625, 1396), (0.625, 1435), (0.625, 1482), (0.5, 1448), (0.5, 1445), (0.5, 1421), (0.5, 1425), (0.5, 1473), (0.5, 1440), (0.5, 1480), (0.5, 1446), (0.375, 1458), (0.375, 1436), (0.375, 1471), (0.375, 1469), (0.375, 1475), (0.375, 1399), (0.375, 1474), (0.25, 1486), (0.25, 1438), (0.25, 1459)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 1102
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1296
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1391
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`5`#`#`x`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 5 x) x) 1))
 nr_nodes: 8]
(CANDIDATE)[id: 1390
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1253
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`5`#`#`x`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 5 x) x) 1))
 nr_nodes: 8]
[Generation 12]
[Computing fitness]
[(1.5, 1296), (1.5, 696), (1.5, 1499), (1.5, 1496), (1.5, 1386), (1.5, 1290), (1.5, 1490), (1.5, 1497), (1.5, 1390), (1.5, 1387), (1.5, 1291), (1.5, 1101), (1.5, 1391), (1.5, 1504), (1.5, 1293), (1.5, 1196), (1.5, 894), (1.5, 1384), (1.5, 52), (1.5, 1198), (1.5, 1492), (1.5, 1253), (1.5, 1404), (1.5, 1102), (1.5, 1197), (1.5, 1389), (1.5, 1392), (1.5, 997), (1.375, 751), (1.375, 598), (1.375, 1277), (1.375, 698), (1.375, 1109), (1.375, 1527), (1.375, 1540), (1.375, 1306), (1.375, 1006), (1.375, 1510), (1.375, 1287), (1.375, 811), (1.375, 897), (1.375, 967), (1.375, 1403), (1.375, 1512), (1.375, 1560), (1.375, 1105), (1.375, 1302), (1.375, 1408), (1.375, 1506), (1.375, 1411), (1.375, 799), (1.375, 1199), (1.375, 1307), (1.375, 1518), (1.375, 1395), (1.375, 1397), (1.375, 1401), (1.375, 919), (1.375, 1000), (1.375, 1004), (1.375, 1298), (1.375, 1103), (1.375, 1509), (1.375, 1268), (1.375, 1426), (1.375, 1305), (1.375, 1304), (1.375, 1204), (1.375, 1516), (1.375, 1523), (1.375, 278), (1.375, 1303), (1.375, 1508), (1.375, 1003), (1.375, 798), (1.375, 494), (1.25, 738), (1.25, 1059), (1.25, 1454), (1.25, 193), (1.25, 1149), (1.25, 1548), (1.25, 806), (1.25, 1216), (1.25, 596), (1.25, 1223), (1.25, 1085), (1.25, 1012), (1.25, 1456), (1.25, 1336), (1.25, 1060), (1.25, 908), (1.25, 504), (1.25, 820), (1.25, 1329), (1.25, 1226), (1.25, 1428), (1.25, 1230), (1.25, 872), (1.25, 1447), (1.25, 1561), (1.25, 1577), (1.25, 1433), (1.25, 1546), (1.25, 803), (1.25, 1323), (1.25, 1237), (1.25, 429), (1.25, 1217), (1.25, 917), (1.25, 1542), (1.25, 1451), (1.25, 1121), (1.25, 1120), (1.25, 1430), (1.25, 1570), (1.25, 1284), (1.25, 1535), (1.25, 1225), (1.25, 1466), (1.25, 1184), (1.25, 1219), (1.25, 522), (1.25, 1550), (1.25, 1422), (1.25, 1312), (1.25, 733), (1.25, 1327), (1.25, 906), (1.25, 968), (1.25, 1330), (1.25, 1188), (1.25, 1416), (1.25, 1127), (1.25, 1014), (1.25, 986), (1.25, 1250), (1.25, 904), (1.25, 1372), (1.25, 1122), (1.25, 1118), (1.25, 1525), (1.25, 1547), (1.25, 1310), (1.25, 703), (1.25, 1333), (1.25, 1048), (1.25, 1218), (1.25, 1319), (1.25, 1115), (1.25, 1572), (1.25, 594), (1.25, 1325), (1.25, 1531), (1.25, 1322), (1.25, 1489), (1.25, 495), (1.125, 1119), (1.125, 1343), (1.125, 1254), (1.125, 1129), (1.125, 1457), (1.125, 730), (1.125, 1240), (1.125, 1584), (1.125, 1505), (1.125, 814), (1.125, 704), (1.125, 1083), (1.125, 505), (1.125, 810), (1.125, 1044), (1.125, 813), (1.125, 1187), (1.125, 496), (1.125, 1270), (1.125, 1462), (1.125, 1261), (1.125, 1232), (1.125, 746), (1.125, 709), (1.125, 1530), (1.125, 1206), (1.125, 839), (1.125, 1477), (1.125, 445), (1.125, 1252), (1.125, 1269), (1.125, 913), (1.125, 722), (1.125, 1406), (1.125, 1381), (1.125, 1339), (1.125, 1023), (1.125, 721), (1.125, 682), (1.125, 1353), (1.125, 1321), (1.125, 706), (1.125, 1179), (1.125, 1344), (1.125, 1032), (1.125, 1135), (1.125, 1159), (1.125, 600), (1.125, 1139), (1.125, 1341), (1.125, 1027), (1.125, 1511), (1.125, 812), (1.125, 599), (1.125, 1056), (1.125, 1203), (1.125, 909), (1.125, 1299), (1.125, 801), (1.125, 837), (1.125, 868), (1.125, 1152), (1.125, 1488), (1.125, 1153), (1.125, 1136), (1.125, 970), (1.125, 1183), (1.125, 699), (1.125, 1586), (1.125, 1238), (1.125, 1144), (1.125, 1483), (1.125, 1157), (1.125, 1423), (1.125, 353), (1.125, 407), (1.125, 1036), (1.125, 1008), (1.125, 1130), (1.125, 1522), (1.125, 1465), (1.125, 1156), (1.125, 1555), (1.125, 1361), (1.125, 1113), (1.125, 1233), (1.125, 1137), (1.125, 629), (1.125, 1534), (1.125, 1345), (1.125, 960), (1.125, 1478), (1.125, 1063), (1.125, 923), (1.125, 818), (1.125, 132), (1.125, 1241), (1.125, 1417), (1.125, 1385), (1.125, 898), (1.125, 1487), (1.125, 1318), (1.125, 1370), (1.125, 728), (1.125, 1247), (1.125, 1151), (1.125, 1441), (1.125, 1500), (1.125, 1126), (1.0, 1161), (1.0, 1164), (1.0, 1431), (1.0, 828), (1.0, 160), (1.0, 1052), (1.0, 1057), (1.0, 1019), (1.0, 1045), (1.0, 435), (1.0, 924), (1.0, 707), (1.0, 1186), (1.0, 954), (1.0, 1010), (1.0, 1244), (1.0, 840), (1.0, 1062), (1.0, 1071), (1.0, 403), (1.0, 611), (1.0, 950), (1.0, 1162), (1.0, 737), (1.0, 660), (1.0, 1215), (1.0, 1171), (1.0, 610), (1.0, 1111), (1.0, 500), (1.0, 1529), (1.0, 1163), (1.0, 944), (1.0, 77), (1.0, 715), (1.0, 1415), (1.0, 712), (1.0, 1007), (1.0, 1175), (1.0, 1220), (1.0, 1082), (1.0, 941), (1.0, 1539), (1.0, 1169), (1.0, 498), (1.0, 853), (1.0, 1549), (1.0, 89), (1.0, 502), (1.0, 1553), (1.0, 1519), (1.0, 1410), (1.0, 1346), (1.0, 1552), (1.0, 934), (1.0, 1140), (1.0, 1192), (1.0, 1147), (1.0, 1463), (1.0, 212), (1.0, 1125), (1.0, 946), (1.0, 177), (1.0, 929), (1.0, 559), (1.0, 1066), (1.0, 614), (1.0, 948), (1.0, 729), (1.0, 1174), (1.0, 1355), (1.0, 1194), (1.0, 1332), (1.0, 1536), (1.0, 1513), (1.0, 1074), (1.0, 555), (1.0, 718), (1.0, 1211), (1.0, 821), (1.0, 1576), (1.0, 409), (1.0, 149), (1.0, 1088), (1.0, 172), (1.0, 1182), (1.0, 433), (1.0, 905), (1.0, 1468), (1.0, 1562), (1.0, 856), (1.0, 1117), (1.0, 216), (1.0, 974), (1.0, 1080), (1.0, 1255), (1.0, 1054), (1.0, 851), (1.0, 1093), (1.0, 1331), (1.0, 1485), (1.0, 973), (1.0, 1076), (1.0, 1128), (1.0, 612), (1.0, 508), (1.0, 1297), (0.875, 1544), (0.875, 1495), (0.875, 1502), (0.75, 1537), (0.75, 1588), (0.75, 1543), (0.75, 1564), (0.625, 1558), (0.625, 1557), (0.625, 1573), (0.625, 1566), (0.625, 1568), (0.625, 1571), (0.625, 1503), (0.5, 1515), (0.5, 1517), (0.5, 1533), (0.5, 1578), (0.375, 1575), (0.375, 1521), (0.375, 1583), (0.375, 1493), (0.25, 1579), (0.25, 1532), (0.25, 1569), (0.25, 1581), (0.25, 1565)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 1296
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 696
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1499
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1496
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1386
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 13]
[Computing fitness]
[(1.5, 1590), (1.5, 1102), (1.5, 1605), (1.5, 1390), (1.5, 1492), (1.5, 1600), (1.5, 894), (1.5, 997), (1.5, 1499), (1.5, 1597), (1.5, 1591), (1.5, 1296), (1.5, 1384), (1.5, 1604), (1.5, 1497), (1.5, 1386), (1.5, 1603), (1.5, 1490), (1.5, 1596), (1.5, 1595), (1.5, 1404), (1.5, 1496), (1.5, 1290), (1.5, 1391), (1.5, 1387), (1.5, 1293), (1.5, 1291), (1.5, 1253), (1.5, 1594), (1.5, 1197), (1.5, 1592), (1.5, 1196), (1.5, 696), (1.5, 1389), (1.5, 1589), (1.5, 1101), (1.5, 1504), (1.5, 1198), (1.5, 1602), (1.5, 52), (1.5, 1392), (1.375, 1306), (1.375, 1506), (1.375, 1304), (1.375, 1512), (1.375, 1105), (1.375, 698), (1.375, 1204), (1.375, 1607), (1.375, 1426), (1.375, 1303), (1.375, 1103), (1.375, 1621), (1.375, 1302), (1.375, 1287), (1.375, 1540), (1.375, 1628), (1.375, 1510), (1.375, 598), (1.375, 1612), (1.375, 1199), (1.375, 799), (1.375, 1618), (1.375, 1509), (1.375, 278), (1.375, 1397), (1.375, 967), (1.375, 1277), (1.375, 1395), (1.375, 751), (1.375, 1508), (1.375, 1610), (1.375, 1620), (1.375, 1411), (1.375, 1003), (1.375, 1630), (1.375, 1632), (1.375, 494), (1.375, 1617), (1.375, 1403), (1.375, 811), (1.375, 1000), (1.375, 1518), (1.375, 1268), (1.375, 1516), (1.375, 1109), (1.375, 1004), (1.375, 897), (1.375, 1401), (1.375, 1560), (1.375, 919), (1.375, 798), (1.375, 1523), (1.375, 1408), (1.375, 1307), (1.375, 1298), (1.375, 1006), (1.375, 1527), (1.375, 1305), (1.25, 1650), (1.25, 1663), (1.25, 1542), (1.25, 596), (1.25, 1547), (1.25, 1666), (1.25, 1216), (1.25, 1577), (1.25, 1422), (1.25, 1060), (1.25, 904), (1.25, 1644), (1.25, 1219), (1.25, 1284), (1.25, 429), (1.25, 1115), (1.25, 1428), (1.25, 1456), (1.25, 1237), (1.25, 1059), (1.25, 1673), (1.25, 1330), (1.25, 703), (1.25, 1014), (1.25, 1329), (1.25, 1489), (1.25, 1325), (1.25, 1118), (1.25, 1225), (1.25, 1218), (1.25, 522), (1.25, 1322), (1.25, 1327), (1.25, 1188), (1.25, 1122), (1.25, 193), (1.25, 1546), (1.25, 1433), (1.25, 1561), (1.25, 1416), (1.25, 1230), (1.25, 1646), (1.25, 1651), (1.25, 1550), (1.25, 1451), (1.25, 495), (1.25, 803), (1.25, 906), (1.25, 1184), (1.25, 1310), (1.25, 1645), (1.25, 1627), (1.25, 1668), (1.25, 1609), (1.25, 806), (1.25, 1430), (1.25, 1535), (1.25, 504), (1.25, 1121), (1.25, 1525), (1.25, 1466), (1.25, 594), (1.25, 1372), (1.25, 1333), (1.25, 1336), (1.25, 1012), (1.25, 1662), (1.25, 872), (1.25, 1672), (1.25, 986), (1.25, 1250), (1.25, 1548), (1.25, 1323), (1.25, 1635), (1.25, 738), (1.25, 1570), (1.25, 1319), (1.25, 968), (1.25, 1120), (1.25, 1447), (1.25, 1226), (1.25, 1127), (1.25, 1657), (1.25, 908), (1.25, 1637), (1.25, 1223), (1.25, 1667), (1.25, 917), (1.25, 1085), (1.25, 1217), (1.25, 1636), (1.25, 1531), (1.25, 733), (1.25, 1679), (1.25, 1640), (1.25, 1312), (1.25, 1149), (1.25, 1675), (1.25, 1048), (1.25, 1572), (1.25, 820), (1.25, 1454), (1.125, 722), (1.125, 1522), (1.125, 1634), (1.125, 1008), (1.125, 1339), (1.125, 353), (1.125, 1129), (1.125, 1063), (1.125, 909), (1.125, 1157), (1.125, 1187), (1.125, 1462), (1.125, 1417), (1.125, 682), (1.125, 1130), (1.125, 868), (1.125, 1318), (1.125, 1487), (1.125, 839), (1.125, 1152), (1.125, 801), (1.125, 1659), (1.125, 1343), (1.125, 1203), (1.125, 960), (1.125, 1241), (1.125, 709), (1.125, 970), (1.125, 1353), (1.125, 818), (1.125, 1027), (1.125, 1252), (1.125, 1023), (1.125, 1500), (1.125, 1056), (1.125, 1457), (1.125, 746), (1.125, 1406), (1.125, 1361), (1.125, 132), (1.125, 1153), (1.125, 1144), (1.125, 1584), (1.125, 812), (1.125, 1270), (1.125, 1511), (1.125, 1137), (1.125, 1381), (1.125, 730), (1.125, 1608), (1.125, 1036), (1.125, 1233), (1.125, 1232), (1.125, 1478), (1.125, 1441), (1.125, 1488), (1.125, 1613), (1.125, 1247), (1.125, 728), (1.125, 1423), (1.125, 1321), (1.125, 923), (1.125, 629), (1.125, 407), (1.125, 1586), (1.125, 1671), (1.125, 1385), (1.125, 1661), (1.125, 1113), (1.125, 1555), (1.125, 1477), (1.125, 1530), (1.125, 1179), (1.125, 1299), (1.125, 1032), (1.125, 1126), (1.125, 1483), (1.125, 813), (1.125, 1465), (1.125, 704), (1.125, 1136), (1.125, 1629), (1.125, 1505), (1.125, 1156), (1.125, 1183), (1.125, 1370), (1.125, 1341), (1.125, 1159), (1.125, 600), (1.125, 810), (1.125, 505), (1.125, 1534), (1.125, 814), (1.125, 599), (1.125, 913), (1.125, 1151), (1.125, 1344), (1.125, 706), (1.125, 721), (1.125, 496), (1.125, 837), (1.125, 1238), (1.125, 445), (1.125, 1254), (1.125, 699), (1.125, 1044), (1.125, 898), (1.125, 1240), (1.125, 1139), (1.125, 1648), (1.125, 1345), (1.125, 1206), (1.125, 1269), (1.125, 1135), (1.125, 1119), (1.125, 1083), (1.125, 1261), (1.0, 1045), (1.0, 660), (1.0, 828), (1.0, 1649), (1.0, 1415), (1.0, 403), (1.0, 1163), (1.0, 1606), (1.0, 853), (1.0, 707), (1.0, 1071), (1.0, 712), (1.0, 924), (1.0, 1052), (1.0, 89), (1.0, 941), (1.0, 840), (1.0, 1171), (1.0, 1111), (1.0, 1529), (1.0, 1549), (1.0, 715), (1.0, 1410), (1.0, 1161), (1.0, 1147), (1.0, 1553), (1.0, 611), (1.0, 737), (1.0, 1010), (1.0, 435), (1.0, 1062), (1.0, 500), (1.0, 1082), (1.0, 1552), (1.0, 1346), (1.0, 950), (1.0, 502), (1.0, 1431), (1.0, 1215), (1.0, 944), (1.0, 1175), (1.0, 1007), (1.0, 1164), (1.0, 1631), (1.0, 1539), (1.0, 1220), (1.0, 1162), (1.0, 160), (1.0, 1169), (1.0, 1192), (1.0, 77), (1.0, 1019), (1.0, 954), (1.0, 498), (1.0, 1519), (1.0, 1057), (1.0, 1463), (1.0, 1140), (1.0, 934), (1.0, 1186), (1.0, 1244), (1.0, 610), (1.0, 1623), (0.75, 1642), (0.625, 1633), (0.625, 1660), (0.625, 1639), (0.625, 1599), (0.625, 1665), (0.5, 1680), (0.5, 1656), (0.5, 1677), (0.5, 1625), (0.5, 1652), (0.5, 1647), (0.5, 1616), (0.5, 1619), (0.5, 1624), (0.375, 1615), (0.375, 1654), (0.25, 1669), (0.25, 1611)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 1590
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1102
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1605
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1390
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1492
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`5`#`#`x`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 5 x) x) 1))
 nr_nodes: 8]
[Generation 14]
[Computing fitness]
[(1.5, 1602), (1.5, 1686), (1.5, 1682), (1.5, 1591), (1.5, 894), (1.5, 1698), (1.5, 1101), (1.5, 1391), (1.5, 1589), (1.5, 1683), (1.5, 1594), (1.5, 1291), (1.5, 1196), (1.5, 1605), (1.5, 1690), (1.5, 1496), (1.5, 1497), (1.5, 696), (1.5, 1691), (1.5, 1490), (1.5, 1404), (1.5, 1293), (1.5, 1595), (1.5, 1386), (1.5, 1290), (1.5, 1681), (1.5, 1687), (1.5, 1592), (1.5, 1603), (1.5, 1596), (1.5, 1387), (1.5, 1197), (1.5, 52), (1.5, 1390), (1.5, 1389), (1.5, 1296), (1.5, 1704), (1.5, 1198), (1.5, 1695), (1.5, 1504), (1.5, 1699), (1.5, 1492), (1.5, 1604), (1.5, 1499), (1.5, 1703), (1.5, 1102), (1.5, 1597), (1.5, 1685), (1.5, 997), (1.5, 1696), (1.5, 1253), (1.5, 1692), (1.5, 1392), (1.5, 1600), (1.5, 1702), (1.5, 1384), (1.5, 1590), (1.375, 1729), (1.375, 1632), (1.375, 1508), (1.375, 1287), (1.375, 1617), (1.375, 1510), (1.375, 1612), (1.375, 598), (1.375, 1408), (1.375, 1395), (1.375, 1304), (1.375, 1607), (1.375, 1734), (1.375, 278), (1.375, 1732), (1.375, 1003), (1.375, 1620), (1.375, 1199), (1.375, 1610), (1.375, 799), (1.375, 751), (1.375, 1204), (1.375, 1744), (1.375, 1724), (1.375, 798), (1.375, 811), (1.375, 1737), (1.375, 1621), (1.375, 1298), (1.375, 1305), (1.375, 1303), (1.375, 1000), (1.375, 1560), (1.375, 1720), (1.375, 1628), (1.375, 1759), (1.375, 1411), (1.375, 1302), (1.375, 1540), (1.375, 967), (1.375, 1403), (1.375, 1307), (1.375, 1277), (1.375, 1306), (1.375, 1401), (1.375, 1767), (1.375, 1739), (1.375, 494), (1.375, 1518), (1.375, 1506), (1.375, 1722), (1.375, 1004), (1.375, 1397), (1.375, 1618), (1.375, 1527), (1.375, 1006), (1.375, 1516), (1.375, 1426), (1.375, 897), (1.375, 1103), (1.375, 1512), (1.375, 698), (1.375, 1109), (1.375, 919), (1.375, 1523), (1.375, 1105), (1.375, 1630), (1.375, 1509), (1.375, 1714), (1.375, 1268), (1.375, 1746), (1.25, 1761), (1.25, 1752), (1.25, 733), (1.25, 1250), (1.25, 1312), (1.25, 1451), (1.25, 1237), (1.25, 1679), (1.25, 806), (1.25, 1059), (1.25, 1223), (1.25, 1225), (1.25, 1218), (1.25, 1014), (1.25, 1754), (1.25, 1531), (1.25, 703), (1.25, 1422), (1.25, 1121), (1.25, 1774), (1.25, 1749), (1.25, 1149), (1.25, 1547), (1.25, 522), (1.25, 803), (1.25, 872), (1.25, 495), (1.25, 1667), (1.25, 596), (1.25, 1323), (1.25, 1184), (1.25, 1319), (1.25, 1430), (1.25, 1570), (1.25, 1060), (1.25, 504), (1.25, 1372), (1.25, 1226), (1.25, 1325), (1.25, 1428), (1.25, 1122), (1.25, 1012), (1.25, 1336), (1.25, 1327), (1.25, 594), (1.25, 1048), (1.25, 429), (1.25, 1127), (1.25, 1663), (1.25, 1728), (1.25, 1219), (1.25, 1217), (1.25, 1535), (1.25, 1416), (1.25, 1577), (1.25, 1627), (1.25, 986), (1.25, 1454), (1.25, 1635), (1.25, 1711), (1.25, 1322), (1.25, 1333), (1.25, 1675), (1.25, 1673), (1.25, 1456), (1.25, 1650), (1.25, 1466), (1.25, 1330), (1.25, 1118), (1.25, 1668), (1.25, 908), (1.25, 1447), (1.25, 1085), (1.25, 1542), (1.25, 904), (1.25, 820), (1.25, 1646), (1.25, 1433), (1.25, 906), (1.25, 1644), (1.25, 1310), (1.25, 1742), (1.25, 1572), (1.25, 1637), (1.25, 1284), (1.25, 1775), (1.25, 1672), (1.25, 1657), (1.25, 1120), (1.25, 1561), (1.25, 1640), (1.25, 1662), (1.25, 968), (1.25, 1609), (1.25, 1188), (1.25, 1216), (1.25, 917), (1.25, 1489), (1.25, 1546), (1.25, 1550), (1.25, 1770), (1.25, 1636), (1.25, 1651), (1.25, 1115), (1.25, 1645), (1.25, 1548), (1.25, 1762), (1.25, 1666), (1.25, 193), (1.25, 1525), (1.25, 1329), (1.25, 738), (1.25, 1230), (1.25, 1753), (1.125, 1254), (1.125, 1299), (1.125, 706), (1.125, 1126), (1.125, 1156), (1.125, 1385), (1.125, 1534), (1.125, 699), (1.125, 1318), (1.125, 1063), (1.125, 1339), (1.125, 1522), (1.125, 1023), (1.125, 1671), (1.125, 818), (1.125, 1152), (1.125, 1441), (1.125, 728), (1.125, 1044), (1.125, 1423), (1.125, 1771), (1.125, 1406), (1.125, 629), (1.125, 722), (1.125, 1487), (1.125, 1027), (1.125, 721), (1.125, 814), (1.125, 1465), (1.125, 1270), (1.125, 1157), (1.125, 1726), (1.125, 1743), (1.125, 1353), (1.125, 1511), (1.125, 1613), (1.125, 1361), (1.125, 1261), (1.125, 1203), (1.125, 1477), (1.125, 1505), (1.125, 599), (1.125, 1462), (1.125, 1343), (1.125, 1530), (1.125, 1151), (1.125, 813), (1.125, 1478), (1.125, 1344), (1.125, 1056), (1.125, 898), (1.125, 353), (1.125, 801), (1.125, 1241), (1.125, 1135), (1.125, 1113), (1.125, 960), (1.125, 1187), (1.125, 1417), (1.125, 1708), (1.125, 1240), (1.125, 1341), (1.125, 746), (1.125, 1608), (1.125, 1130), (1.125, 1139), (1.125, 1136), (1.125, 1153), (1.125, 1179), (1.125, 730), (1.125, 913), (1.125, 445), (1.125, 1036), (1.125, 1247), (1.125, 1206), (1.125, 1748), (1.125, 1381), (1.125, 1768), (1.125, 1321), (1.125, 1483), (1.125, 1238), (1.125, 1129), (1.125, 868), (1.125, 1584), (1.125, 704), (1.125, 1232), (1.125, 682), (1.125, 1144), (1.125, 1457), (1.125, 1269), (1.125, 1137), (1.125, 1659), (1.125, 1252), (1.125, 1233), (1.125, 923), (1.125, 1083), (1.125, 600), (1.125, 709), (1.125, 132), (1.125, 812), (1.125, 970), (1.125, 1159), (1.125, 1648), (1.125, 1370), (1.125, 1555), (1.125, 1345), (1.125, 1500), (1.125, 1586), (1.125, 1032), (1.125, 1629), (1.125, 1119), (1.125, 1183), (1.125, 1634), (1.125, 1488), (1.125, 837), (1.125, 407), (1.125, 909), (1.125, 496), (1.125, 505), (1.125, 1661), (1.125, 810), (1.125, 1008), (1.125, 839), (1.0, 1649), (1.0, 1045), (1.0, 1716), (1.0, 1773), (1.0, 403), (1.0, 828), (1.0, 1163), (1.0, 660), (1.0, 1760), (1.0, 1415), (1.0, 1763), (0.875, 1718), (0.875, 1740), (0.875, 1701), (0.875, 1745), (0.75, 1765), (0.75, 1777), (0.75, 1694), (0.625, 1755), (0.625, 1706), (0.625, 1731), (0.625, 1766), (0.625, 1717), (0.625, 1689), (0.625, 1769), (0.625, 1750), (0.5, 1712), (0.5, 1707), (0.5, 1776), (0.5, 1738), (0.5, 1764), (0.375, 1705), (0.375, 1736), (0.375, 1710), (0.375, 1757)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 1602
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`5`#`#`x`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 5 x) x) 1))
 nr_nodes: 8]
(CANDIDATE)[id: 1686
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1682
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1591
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 894
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 15]
[Computing fitness]
[(1.5, 1196), (1.5, 1812), (1.5, 1790), (1.5, 1695), (1.5, 1785), (1.5, 1602), (1.5, 1504), (1.5, 1698), (1.5, 1600), (1.5, 1787), (1.5, 1686), (1.5, 1802), (1.5, 1390), (1.5, 1597), (1.5, 1101), (1.5, 1807), (1.5, 1391), (1.5, 1779), (1.5, 1801), (1.5, 1810), (1.5, 1691), (1.5, 1797), (1.5, 1592), (1.5, 1788), (1.5, 1290), (1.5, 1704), (1.5, 1794), (1.5, 1681), (1.5, 1589), (1.5, 1685), (1.5, 1404), (1.5, 1781), (1.5, 1386), (1.5, 1808), (1.5, 1604), (1.5, 696), (1.5, 1392), (1.5, 1490), (1.5, 1198), (1.5, 1387), (1.5, 1786), (1.5, 1683), (1.5, 1291), (1.5, 1692), (1.5, 1682), (1.5, 1605), (1.5, 1603), (1.5, 1591), (1.5, 1784), (1.5, 1687), (1.5, 1793), (1.5, 1594), (1.5, 1497), (1.5, 1296), (1.5, 1806), (1.5, 1780), (1.5, 1590), (1.5, 1596), (1.5, 1102), (1.5, 1813), (1.5, 1384), (1.5, 1800), (1.5, 1293), (1.5, 997), (1.5, 1699), (1.5, 894), (1.5, 1703), (1.5, 1197), (1.5, 1496), (1.5, 1696), (1.5, 1805), (1.5, 1783), (1.5, 1803), (1.5, 1253), (1.5, 1690), (1.5, 1595), (1.5, 1389), (1.5, 1492), (1.5, 1499), (1.5, 1702), (1.5, 52), (1.375, 1722), (1.375, 1306), (1.375, 1767), (1.375, 1724), (1.375, 1307), (1.375, 1109), (1.375, 1305), (1.375, 1739), (1.375, 1845), (1.375, 1746), (1.375, 1540), (1.375, 1527), (1.375, 598), (1.375, 698), (1.375, 1523), (1.375, 1277), (1.375, 1105), (1.375, 1620), (1.375, 1303), (1.375, 1729), (1.375, 1268), (1.375, 897), (1.375, 1560), (1.375, 1628), (1.375, 1734), (1.375, 1401), (1.375, 1512), (1.375, 1000), (1.375, 1103), (1.375, 1006), (1.375, 278), (1.375, 1408), (1.375, 1509), (1.375, 1817), (1.375, 1824), (1.375, 798), (1.375, 1823), (1.375, 799), (1.375, 1858), (1.375, 1298), (1.375, 1403), (1.375, 1714), (1.375, 1737), (1.375, 1630), (1.375, 811), (1.375, 1632), (1.375, 1819), (1.375, 1618), (1.375, 1287), (1.375, 967), (1.375, 1199), (1.375, 1426), (1.375, 1516), (1.375, 1411), (1.375, 1720), (1.375, 1508), (1.375, 1617), (1.375, 1843), (1.375, 919), (1.375, 1759), (1.375, 751), (1.375, 1621), (1.375, 1732), (1.375, 1302), (1.375, 1003), (1.375, 494), (1.375, 1397), (1.375, 1828), (1.375, 1821), (1.375, 1744), (1.375, 1004), (1.375, 1395), (1.375, 1830), (1.375, 1510), (1.375, 1822), (1.375, 1610), (1.375, 1506), (1.375, 1607), (1.375, 1850), (1.375, 1518), (1.375, 1204), (1.375, 1304), (1.375, 1612), (1.375, 1837), (1.25, 1466), (1.25, 1085), (1.25, 1327), (1.25, 1454), (1.25, 1531), (1.25, 1216), (1.25, 1762), (1.25, 1118), (1.25, 1865), (1.25, 1336), (1.25, 1663), (1.25, 1667), (1.25, 1609), (1.25, 908), (1.25, 1775), (1.25, 1323), (1.25, 1546), (1.25, 1330), (1.25, 1416), (1.25, 1322), (1.25, 733), (1.25, 904), (1.25, 906), (1.25, 703), (1.25, 1646), (1.25, 1640), (1.25, 1679), (1.25, 1657), (1.25, 1668), (1.25, 1121), (1.25, 1547), (1.25, 1672), (1.25, 803), (1.25, 1637), (1.25, 1711), (1.25, 986), (1.25, 1115), (1.25, 1422), (1.25, 1577), (1.25, 1433), (1.25, 1761), (1.25, 1728), (1.25, 1542), (1.25, 1456), (1.25, 1014), (1.25, 1333), (1.25, 1184), (1.25, 1120), (1.25, 1447), (1.25, 1284), (1.25, 1627), (1.25, 1860), (1.25, 1636), (1.25, 1673), (1.25, 1451), (1.25, 193), (1.25, 1237), (1.25, 1572), (1.25, 495), (1.25, 1312), (1.25, 1742), (1.25, 1749), (1.25, 1319), (1.25, 1217), (1.25, 1871), (1.25, 1329), (1.25, 1188), (1.25, 1048), (1.25, 1012), (1.25, 504), (1.25, 1870), (1.25, 1059), (1.25, 738), (1.25, 1645), (1.25, 1644), (1.25, 1635), (1.25, 1650), (1.25, 596), (1.25, 1230), (1.25, 1525), (1.25, 1127), (1.25, 1866), (1.25, 1666), (1.25, 1662), (1.25, 1550), (1.25, 1226), (1.25, 917), (1.25, 1754), (1.25, 1838), (1.25, 1428), (1.25, 872), (1.25, 1218), (1.25, 1325), (1.25, 1651), (1.25, 1570), (1.25, 1310), (1.25, 1223), (1.25, 1675), (1.25, 429), (1.25, 1060), (1.25, 1863), (1.25, 1489), (1.25, 1219), (1.25, 1250), (1.25, 1122), (1.25, 1225), (1.25, 1372), (1.25, 806), (1.25, 1561), (1.25, 820), (1.25, 1149), (1.25, 1770), (1.25, 1430), (1.25, 1753), (1.25, 1752), (1.25, 594), (1.25, 968), (1.25, 1548), (1.25, 1535), (1.25, 1774), (1.25, 522), (1.125, 1854), (1.125, 1477), (1.125, 1708), (1.125, 1339), (1.125, 721), (1.125, 1157), (1.125, 1261), (1.125, 1743), (1.125, 1478), (1.125, 913), (1.125, 1534), (1.125, 1671), (1.125, 1381), (1.125, 1240), (1.125, 1126), (1.125, 1361), (1.125, 1748), (1.125, 1113), (1.125, 1406), (1.125, 1423), (1.125, 706), (1.125, 1187), (1.125, 1151), (1.125, 898), (1.125, 629), (1.125, 1487), (1.125, 722), (1.125, 1136), (1.125, 1613), (1.125, 1044), (1.125, 1139), (1.125, 599), (1.125, 1254), (1.125, 1829), (1.125, 1318), (1.125, 1726), (1.125, 801), (1.125, 818), (1.125, 1027), (1.125, 1206), (1.125, 1238), (1.125, 699), (1.125, 1859), (1.125, 1344), (1.125, 746), (1.125, 730), (1.125, 1270), (1.125, 1299), (1.125, 1063), (1.125, 1153), (1.125, 1522), (1.125, 1856), (1.125, 1343), (1.125, 1156), (1.125, 1129), (1.125, 813), (1.125, 1341), (1.125, 445), (1.125, 1417), (1.125, 1321), (1.125, 1130), (1.125, 1179), (1.125, 353), (1.125, 1241), (1.125, 1483), (1.125, 1247), (1.125, 868), (1.125, 1056), (1.125, 1862), (1.125, 1505), (1.125, 1023), (1.125, 1152), (1.125, 1462), (1.125, 814), (1.125, 1511), (1.125, 1768), (1.125, 1036), (1.125, 728), (1.125, 1465), (1.125, 1441), (1.125, 1353), (1.125, 1833), (1.125, 960), (1.125, 1608), (1.125, 1135), (1.125, 1530), (1.125, 1820), (1.125, 1385), (1.125, 1771), (1.125, 1203), (1.0, 1846), (1.0, 1839), (1.0, 1848), (1.0, 1869), (1.0, 1853), (1.0, 1842), (1.0, 1841), (1.0, 1834), (1.0, 1840), (1.0, 1826), (0.875, 1832), (0.625, 1815), (0.625, 1873), (0.625, 1855), (0.625, 1868), (0.5, 1831), (0.5, 1835), (0.5, 1792), (0.5, 1816), (0.5, 1799), (0.375, 1796), (0.375, 1782), (0.375, 1852), (0.25, 1872)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 1196
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1812
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1790
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`y`#`#`1`#`#`(* ? ?)`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (+ y 1) (* 5 x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1695
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1785
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 16]
[Computing fitness]
[(1.5, 1490), (1.5, 1391), (1.5, 1291), (1.5, 1812), (1.5, 1879), (1.5, 1785), (1.5, 1699), (1.5, 1923), (1.5, 1875), (1.5, 1781), (1.5, 1905), (1.5, 1600), (1.5, 1926), (1.5, 1499), (1.5, 1784), (1.5, 1927), (1.5, 1290), (1.5, 1497), (1.5, 1911), (1.5, 1591), (1.5, 1783), (1.5, 1590), (1.5, 1921), (1.5, 1912), (1.5, 1780), (1.5, 1686), (1.5, 52), (1.5, 1387), (1.5, 696), (1.5, 1690), (1.5, 1597), (1.5, 1197), (1.5, 1703), (1.5, 1589), (1.5, 1920), (1.5, 1807), (1.5, 1805), (1.5, 997), (1.5, 1892), (1.5, 1682), (1.5, 1893), (1.5, 1695), (1.5, 1891), (1.5, 1788), (1.5, 1389), (1.5, 1797), (1.5, 1196), (1.5, 1293), (1.5, 1931), (1.5, 1908), (1.5, 1602), (1.5, 1704), (1.5, 1691), (1.5, 1793), (1.5, 1504), (1.5, 1603), (1.5, 1492), (1.5, 1604), (1.5, 1698), (1.5, 1392), (1.5, 1496), (1.5, 1696), (1.5, 1915), (1.5, 1790), (1.5, 1801), (1.5, 1384), (1.5, 1786), (1.5, 894), (1.5, 1253), (1.5, 1404), (1.5, 1800), (1.5, 1386), (1.5, 1605), (1.5, 1806), (1.5, 1878), (1.5, 1919), (1.5, 1883), (1.5, 1390), (1.5, 1885), (1.5, 1594), (1.5, 1802), (1.5, 1595), (1.5, 1683), (1.5, 1779), (1.5, 1596), (1.5, 1929), (1.5, 1198), (1.5, 1296), (1.5, 1914), (1.5, 1808), (1.5, 1810), (1.5, 1794), (1.5, 1803), (1.5, 1102), (1.5, 1687), (1.5, 1909), (1.5, 1924), (1.5, 1900), (1.5, 1895), (1.5, 1902), (1.5, 1592), (1.5, 1681), (1.5, 1913), (1.5, 1881), (1.5, 1787), (1.5, 1692), (1.5, 1101), (1.5, 1896), (1.5, 1685), (1.5, 1888), (1.5, 1813), (1.5, 1925), (1.5, 1702), (1.375, 1955), (1.375, 1000), (1.375, 1306), (1.375, 1508), (1.375, 1298), (1.375, 1739), (1.375, 1714), (1.375, 1512), (1.375, 798), (1.375, 1426), (1.375, 1006), (1.375, 1401), (1.375, 1828), (1.375, 1287), (1.375, 698), (1.375, 1610), (1.375, 897), (1.375, 1403), (1.375, 1411), (1.375, 1632), (1.375, 1830), (1.375, 1819), (1.375, 1947), (1.375, 1943), (1.375, 598), (1.375, 1850), (1.375, 751), (1.375, 1724), (1.375, 278), (1.375, 1940), (1.375, 1744), (1.375, 494), (1.375, 1510), (1.375, 1004), (1.375, 811), (1.375, 1630), (1.375, 1523), (1.375, 1746), (1.375, 1817), (1.375, 1620), (1.375, 1970), (1.375, 1617), (1.375, 1307), (1.375, 1823), (1.375, 1824), (1.375, 1837), (1.375, 1732), (1.375, 1304), (1.375, 799), (1.375, 1822), (1.375, 1858), (1.375, 1506), (1.375, 1516), (1.375, 1397), (1.375, 1938), (1.375, 1509), (1.375, 1720), (1.375, 1305), (1.375, 1395), (1.375, 1540), (1.375, 1845), (1.375, 1960), (1.375, 1199), (1.375, 1003), (1.375, 1950), (1.375, 1527), (1.375, 1628), (1.375, 1302), (1.375, 1560), (1.375, 1967), (1.375, 1767), (1.375, 1729), (1.375, 1518), (1.375, 1618), (1.375, 1968), (1.375, 967), (1.375, 1103), (1.375, 1204), (1.375, 1843), (1.375, 1109), (1.375, 1268), (1.375, 1277), (1.375, 1105), (1.375, 1612), (1.375, 1759), (1.375, 1959), (1.375, 1408), (1.375, 1621), (1.375, 919), (1.375, 1722), (1.375, 1737), (1.375, 1734), (1.375, 1821), (1.375, 1607), (1.375, 1303), (1.375, 1973), (1.25, 1657), (1.25, 1217), (1.25, 1122), (1.25, 917), (1.25, 1637), (1.25, 193), (1.25, 1866), (1.25, 1310), (1.25, 1711), (1.25, 1870), (1.25, 1635), (1.25, 703), (1.25, 1327), (1.25, 495), (1.25, 968), (1.25, 1121), (1.25, 1749), (1.25, 1085), (1.25, 1865), (1.25, 1667), (1.25, 1329), (1.25, 1535), (1.25, 1754), (1.25, 1863), (1.25, 1550), (1.25, 1428), (1.25, 1672), (1.25, 1451), (1.25, 1775), (1.25, 1323), (1.25, 504), (1.25, 1668), (1.25, 429), (1.25, 1662), (1.25, 1572), (1.25, 1548), (1.25, 1447), (1.25, 1127), (1.25, 1219), (1.25, 1762), (1.25, 908), (1.25, 1742), (1.25, 1546), (1.25, 1226), (1.25, 596), (1.25, 806), (1.25, 1838), (1.25, 1416), (1.25, 1645), (1.25, 1149), (1.25, 1627), (1.25, 1218), (1.25, 872), (1.25, 1609), (1.25, 1753), (1.25, 1115), (1.25, 1336), (1.25, 986), (1.25, 1120), (1.25, 1430), (1.25, 1577), (1.25, 1663), (1.25, 1322), (1.25, 1333), (1.25, 1673), (1.25, 1679), (1.25, 1547), (1.25, 1525), (1.25, 1561), (1.25, 738), (1.25, 1456), (1.25, 1860), (1.25, 522), (1.25, 1666), (1.25, 1650), (1.25, 1284), (1.25, 1489), (1.25, 1939), (1.25, 904), (1.25, 1646), (1.25, 1636), (1.25, 733), (1.25, 1542), (1.25, 1250), (1.25, 1225), (1.25, 1752), (1.25, 1118), (1.25, 1216), (1.25, 1640), (1.25, 1012), (1.25, 1325), (1.25, 1223), (1.25, 1059), (1.25, 1372), (1.25, 1675), (1.25, 1184), (1.25, 1237), (1.25, 1312), (1.25, 1761), (1.25, 1330), (1.25, 1770), (1.25, 1466), (1.25, 1570), (1.25, 1871), (1.25, 594), (1.25, 1531), (1.25, 1230), (1.25, 1048), (1.25, 1422), (1.25, 1651), (1.25, 1644), (1.25, 1188), (1.25, 1433), (1.25, 1774), (1.25, 906), (1.25, 1728), (1.25, 820), (1.25, 1454), (1.25, 1319), (1.25, 803), (1.25, 1060), (1.25, 1014), (1.125, 1969), (1.125, 629), (1.125, 801), (1.125, 1934), (1.125, 1044), (1.125, 599), (1.125, 1952), (1.125, 1613), (1.125, 1381), (1.125, 1406), (1.125, 1743), (1.125, 706), (1.125, 1726), (1.125, 721), (1.125, 1113), (1.125, 1477), (1.125, 1187), (1.125, 913), (1.125, 1423), (1.125, 1478), (1.125, 1261), (1.125, 1151), (1.125, 1027), (1.125, 1136), (1.125, 1487), (1.125, 1361), (1.125, 1708), (1.125, 1157), (1.125, 1339), (1.125, 1854), (1.125, 1139), (1.125, 1126), (1.125, 1318), (1.125, 1748), (1.125, 1936), (1.125, 1240), (1.125, 898), (1.125, 818), (1.125, 1972), (1.125, 1829), (1.125, 1671), (1.125, 1254), (1.125, 1962), (1.125, 1534), (1.125, 722), (1.0, 1951), (1.0, 1963), (1.0, 1941), (0.875, 1948), (0.875, 1887), (0.875, 1904), (0.75, 1876), (0.75, 1966), (0.625, 1932), (0.625, 1954), (0.625, 1937), (0.625, 1946), (0.5, 1956), (0.5, 1971), (0.5, 1942), (0.5, 1965), (0.5, 1974), (0.5, 1958), (0.375, 1906), (0.375, 1898), (0.375, 1930), (0.375, 1945), (0.375, 1890), (0.375, 1917)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 1490
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1391
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`5`#`#`x`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 5 x) x) 1))
 nr_nodes: 8]
(CANDIDATE)[id: 1291
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1812
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1879
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 17]
[Computing fitness]
[(1.5, 1900), (1.5, 2002), (1.5, 1902), (1.5, 1690), (1.5, 1905), (1.5, 1908), (1.5, 1807), (1.5, 1919), (1.5, 1892), (1.5, 1800), (1.5, 1992), (1.5, 2043), (1.5, 1597), (1.5, 2042), (1.5, 1980), (1.5, 1780), (1.5, 1975), (1.5, 1683), (1.5, 1920), (1.5, 1923), (1.5, 1805), (1.5, 1883), (1.5, 1810), (1.5, 1702), (1.5, 1605), (1.5, 1595), (1.5, 1803), (1.5, 1813), (1.5, 1496), (1.5, 1982), (1.5, 1927), (1.5, 1696), (1.5, 1404), (1.5, 2040), (1.5, 1781), (1.5, 1293), (1.5, 1913), (1.5, 1490), (1.5, 894), (1.5, 1976), (1.5, 1198), (1.5, 1888), (1.5, 1931), (1.5, 1291), (1.5, 1926), (1.5, 1924), (1.5, 2013), (1.5, 1988), (1.5, 2003), (1.5, 1885), (1.5, 52), (1.5, 2033), (1.5, 1600), (1.5, 1997), (1.5, 1875), (1.5, 1685), (1.5, 1896), (1.5, 2041), (1.5, 696), (1.5, 1995), (1.5, 1925), (1.5, 1991), (1.5, 1784), (1.5, 1989), (1.5, 1879), (1.5, 2022), (1.5, 1987), (1.5, 1806), (1.5, 1596), (1.5, 1196), (1.5, 1787), (1.5, 1682), (1.5, 1914), (1.5, 1912), (1.5, 1692), (1.5, 1686), (1.5, 2035), (1.5, 1589), (1.5, 1387), (1.5, 2036), (1.5, 1793), (1.5, 2038), (1.5, 1695), (1.5, 2046), (1.5, 1979), (1.5, 1290), (1.5, 1101), (1.5, 2012), (1.5, 1703), (1.5, 2007), (1.5, 1384), (1.5, 1909), (1.5, 1915), (1.5, 1788), (1.5, 2039), (1.5, 1801), (1.5, 1602), (1.5, 1390), (1.5, 1786), (1.5, 1878), (1.5, 1921), (1.5, 2027), (1.5, 2019), (1.5, 1797), (1.5, 1779), (1.5, 2004), (1.5, 2024), (1.5, 2006), (1.5, 1808), (1.5, 1790), (1.5, 1253), (1.5, 1929), (1.5, 1698), (1.5, 1977), (1.5, 2030), (1.5, 1391), (1.5, 1691), (1.5, 1604), (1.5, 1893), (1.5, 1197), (1.5, 2009), (1.5, 1891), (1.5, 1499), (1.5, 1699), (1.5, 1895), (1.5, 1603), (1.5, 1994), (1.5, 1978), (1.5, 2028), (1.5, 1591), (1.5, 2005), (1.5, 1592), (1.5, 1687), (1.5, 1504), (1.5, 1881), (1.5, 2029), (1.5, 1911), (1.5, 1681), (1.5, 997), (1.5, 1497), (1.5, 1794), (1.5, 1812), (1.5, 1389), (1.5, 1102), (1.5, 1296), (1.5, 1802), (1.5, 1594), (1.5, 1386), (1.5, 1590), (1.5, 1783), (1.5, 1392), (1.5, 1785), (1.5, 2032), (1.5, 1704), (1.5, 1492), (1.375, 1722), (1.375, 2047), (1.375, 2053), (1.375, 1612), (1.375, 1843), (1.375, 897), (1.375, 278), (1.375, 1938), (1.375, 1714), (1.375, 2067), (1.375, 1824), (1.375, 1397), (1.375, 2068), (1.375, 1109), (1.375, 2052), (1.375, 1620), (1.375, 1828), (1.375, 1307), (1.375, 1298), (1.375, 1734), (1.375, 1395), (1.375, 1306), (1.375, 967), (1.375, 1000), (1.375, 1103), (1.375, 1105), (1.375, 1268), (1.375, 1302), (1.375, 1610), (1.375, 1767), (1.375, 1523), (1.375, 1968), (1.375, 1516), (1.375, 1607), (1.375, 1850), (1.375, 1744), (1.375, 811), (1.375, 1403), (1.375, 1737), (1.375, 2066), (1.375, 1817), (1.375, 1506), (1.375, 1822), (1.375, 2063), (1.375, 494), (1.375, 1858), (1.375, 1006), (1.375, 598), (1.375, 1630), (1.375, 1739), (1.375, 1004), (1.375, 2051), (1.375, 1632), (1.375, 2058), (1.375, 1947), (1.375, 1617), (1.375, 1277), (1.375, 1823), (1.375, 1512), (1.375, 1621), (1.375, 1527), (1.375, 1955), (1.375, 1746), (1.375, 1509), (1.375, 1973), (1.375, 1628), (1.375, 1305), (1.375, 1199), (1.375, 1729), (1.375, 1540), (1.375, 1837), (1.375, 1943), (1.375, 1759), (1.375, 1940), (1.375, 799), (1.375, 1950), (1.375, 751), (1.375, 1821), (1.375, 1732), (1.375, 1560), (1.375, 1970), (1.375, 1411), (1.375, 1003), (1.375, 919), (1.375, 698), (1.375, 1426), (1.375, 1510), (1.375, 1204), (1.375, 1401), (1.375, 1967), (1.375, 1724), (1.375, 1960), (1.375, 1720), (1.375, 1819), (1.375, 1408), (1.375, 2048), (1.375, 1618), (1.375, 1845), (1.375, 798), (1.375, 1287), (1.375, 1518), (1.375, 1304), (1.375, 1303), (1.375, 1959), (1.375, 1508), (1.375, 2061), (1.375, 1830), (1.25, 1226), (1.25, 1218), (1.25, 1323), (1.25, 1775), (1.25, 1312), (1.25, 1577), (1.25, 1048), (1.25, 1372), (1.25, 1673), (1.25, 1188), (1.25, 908), (1.25, 1742), (1.25, 1456), (1.25, 1645), (1.25, 1728), (1.25, 596), (1.25, 1542), (1.25, 1774), (1.25, 1447), (1.25, 1217), (1.25, 1668), (1.25, 1059), (1.25, 1127), (1.25, 1753), (1.25, 968), (1.25, 1662), (1.25, 1650), (1.25, 1711), (1.25, 806), (1.25, 1752), (1.25, 738), (1.25, 1762), (1.25, 1672), (1.25, 1863), (1.25, 1118), (1.25, 1572), (1.25, 1666), (1.25, 733), (1.25, 1679), (1.25, 1122), (1.25, 872), (1.25, 1546), (1.25, 1667), (1.25, 1149), (1.25, 1012), (1.25, 917), (1.25, 1237), (1.25, 1121), (1.25, 1422), (1.25, 904), (1.25, 522), (1.25, 1860), (1.25, 1871), (1.25, 1333), (1.25, 1223), (1.25, 986), (1.25, 1870), (1.25, 1627), (1.25, 1939), (1.25, 1570), (1.25, 1184), (1.25, 1547), (1.25, 1609), (1.25, 1085), (1.25, 1770), (1.25, 1327), (1.25, 1329), (1.25, 1646), (1.25, 495), (1.25, 1865), (1.25, 1230), (1.25, 1525), (1.25, 1866), (1.25, 1657), (1.25, 1216), (1.25, 1451), (1.25, 1640), (1.25, 429), (1.25, 1225), (1.25, 1416), (1.25, 1284), (1.25, 1548), (1.25, 1120), (1.25, 1430), (1.25, 703), (1.25, 1466), (1.25, 1675), (1.25, 1637), (1.25, 1250), (1.25, 594), (1.25, 1531), (1.25, 1635), (1.25, 1336), (1.25, 1322), (1.25, 1636), (1.25, 1761), (1.25, 1754), (1.25, 1535), (1.25, 906), (1.25, 1644), (1.25, 1550), (1.25, 1663), (1.25, 1838), (1.25, 1310), (1.25, 1749), (1.25, 1651), (1.25, 1115), (1.25, 1489), (1.25, 1428), (1.25, 1433), (1.25, 1219), (1.25, 504), (1.25, 1561), (1.25, 193), (1.25, 1330), (1.25, 1325), (1.125, 2021), (1.125, 2059), (1.125, 2064), (1.0, 2062), (1.0, 2054), (0.875, 2056), (0.75, 2018), (0.625, 2016), (0.5, 2011), (0.5, 2001), (0.5, 2057), (0.5, 2026), (0.5, 2015), (0.5, 1986), (0.5, 1999), (0.5, 2055), (0.375, 2045), (0.375, 2050), (0.375, 2034), (0.375, 2008), (0.375, 1984), (0.375, 2031)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 1900
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2002
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1902
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1690
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1905
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 18]
[Computing fitness]
[(1.5, 1920), (1.5, 1925), (1.5, 1702), (1.5, 2079), (1.5, 2027), (1.5, 1883), (1.5, 2162), (1.5, 1895), (1.5, 1687), (1.5, 1404), (1.5, 1595), (1.5, 1810), (1.5, 2145), (1.5, 1785), (1.5, 1692), (1.5, 1490), (1.5, 1788), (1.5, 1591), (1.5, 1391), (1.5, 1988), (1.5, 1912), (1.5, 1794), (1.5, 1198), (1.5, 1196), (1.5, 2080), (1.5, 1803), (1.5, 1812), (1.5, 2002), (1.5, 1704), (1.5, 1927), (1.5, 1779), (1.5, 1497), (1.5, 2140), (1.5, 1390), (1.5, 2033), (1.5, 1980), (1.5, 2130), (1.5, 1504), (1.5, 2109), (1.5, 1492), (1.5, 1293), (1.5, 2101), (1.5, 1686), (1.5, 1101), (1.5, 2007), (1.5, 2005), (1.5, 1698), (1.5, 1290), (1.5, 2029), (1.5, 1596), (1.5, 1496), (1.5, 2038), (1.5, 1923), (1.5, 1681), (1.5, 1914), (1.5, 2092), (1.5, 1915), (1.5, 1800), (1.5, 1813), (1.5, 2146), (1.5, 2120), (1.5, 1977), (1.5, 2088), (1.5, 2150), (1.5, 2089), (1.5, 1908), (1.5, 2096), (1.5, 2114), (1.5, 2156), (1.5, 2135), (1.5, 1793), (1.5, 2012), (1.5, 1909), (1.5, 2110), (1.5, 1885), (1.5, 1685), (1.5, 1691), (1.5, 2043), (1.5, 2154), (1.5, 1389), (1.5, 696), (1.5, 1602), (1.5, 1875), (1.5, 1683), (1.5, 1801), (1.5, 2024), (1.5, 1911), (1.5, 1797), (1.5, 2105), (1.5, 1695), (1.5, 2157), (1.5, 1253), (1.5, 2115), (1.5, 2041), (1.5, 1386), (1.5, 2070), (1.5, 2151), (1.5, 1881), (1.5, 2036), (1.5, 2144), (1.5, 1987), (1.5, 1992), (1.5, 1590), (1.5, 2126), (1.5, 2093), (1.5, 2028), (1.5, 2139), (1.5, 52), (1.5, 1989), (1.5, 2082), (1.5, 2158), (1.5, 2127), (1.5, 2125), (1.5, 2039), (1.5, 2046), (1.5, 1197), (1.5, 2035), (1.5, 2103), (1.5, 1703), (1.5, 2078), (1.5, 1978), (1.5, 1926), (1.5, 1919), (1.5, 2119), (1.5, 1979), (1.5, 2019), (1.5, 1888), (1.5, 2095), (1.5, 1387), (1.5, 2040), (1.5, 2118), (1.5, 2098), (1.5, 2102), (1.5, 1931), (1.5, 1878), (1.5, 1995), (1.5, 2076), (1.5, 1783), (1.5, 2116), (1.5, 1913), (1.5, 997), (1.5, 1102), (1.5, 2122), (1.5, 1976), (1.5, 2091), (1.5, 1805), (1.5, 2153), (1.5, 1696), (1.5, 1597), (1.5, 2085), (1.5, 2106), (1.5, 1896), (1.5, 1994), (1.5, 1781), (1.5, 1384), (1.5, 2152), (1.5, 1929), (1.5, 2147), (1.5, 1893), (1.5, 1902), (1.5, 1682), (1.5, 1780), (1.5, 1879), (1.5, 2104), (1.5, 2132), (1.5, 1603), (1.5, 1997), (1.5, 1802), (1.5, 1604), (1.5, 1921), (1.5, 894), (1.5, 2077), (1.5, 1924), (1.5, 2107), (1.5, 1786), (1.5, 2108), (1.5, 1296), (1.5, 1784), (1.5, 1892), (1.5, 1808), (1.5, 1594), (1.5, 1790), (1.5, 1900), (1.5, 1605), (1.5, 1991), (1.5, 2006), (1.5, 2042), (1.5, 1699), (1.5, 2069), (1.5, 2161), (1.5, 1787), (1.5, 2032), (1.5, 2099), (1.5, 1806), (1.5, 1982), (1.5, 2100), (1.5, 1975), (1.5, 2149), (1.5, 1499), (1.5, 2003), (1.5, 2117), (1.5, 1291), (1.5, 1592), (1.5, 1392), (1.5, 1600), (1.5, 2013), (1.5, 1891), (1.5, 2022), (1.5, 2030), (1.5, 1690), (1.5, 1807), (1.5, 1905), (1.5, 2074), (1.5, 2112), (1.5, 2004), (1.5, 1589), (1.5, 2009), (1.375, 1004), (1.375, 1821), (1.375, 1516), (1.375, 799), (1.375, 798), (1.375, 1268), (1.375, 1714), (1.375, 1397), (1.375, 919), (1.375, 897), (1.375, 1947), (1.375, 1411), (1.375, 1739), (1.375, 1612), (1.375, 1277), (1.375, 1729), (1.375, 598), (1.375, 1512), (1.375, 1527), (1.375, 1620), (1.375, 1302), (1.375, 698), (1.375, 1617), (1.375, 1199), (1.375, 1724), (1.375, 2067), (1.375, 1720), (1.375, 1306), (1.375, 2063), (1.375, 1967), (1.375, 1109), (1.375, 1506), (1.375, 1722), (1.375, 1408), (1.375, 1426), (1.375, 1734), (1.375, 2066), (1.375, 967), (1.375, 1103), (1.375, 1824), (1.375, 1510), (1.375, 2048), (1.375, 2068), (1.375, 1395), (1.375, 1830), (1.375, 2053), (1.375, 1518), (1.375, 1732), (1.375, 1973), (1.375, 1305), (1.375, 1959), (1.375, 1843), (1.375, 1403), (1.375, 1767), (1.375, 1960), (1.375, 1950), (1.375, 811), (1.375, 1607), (1.375, 1610), (1.375, 1287), (1.375, 1940), (1.375, 1298), (1.375, 1303), (1.375, 1817), (1.375, 1970), (1.375, 1746), (1.375, 1630), (1.375, 1822), (1.375, 1307), (1.375, 1845), (1.375, 494), (1.375, 1508), (1.375, 1759), (1.375, 1523), (1.375, 1401), (1.375, 1828), (1.375, 2061), (1.375, 1204), (1.375, 1618), (1.375, 1540), (1.375, 1628), (1.375, 1509), (1.375, 1850), (1.375, 1621), (1.375, 1858), (1.375, 1968), (1.375, 2052), (1.375, 1938), (1.375, 1632), (1.375, 1000), (1.375, 2051), (1.375, 1955), (1.375, 2047), (1.375, 1819), (1.375, 751), (1.375, 1105), (1.375, 1737), (1.375, 1943), (1.375, 1837), (1.375, 1744), (1.375, 1003), (1.375, 2058), (1.375, 1304), (1.375, 1006), (1.375, 1823), (1.375, 278), (1.375, 1560), (1.25, 1711), (1.25, 1627), (1.25, 1059), (1.25, 1312), (1.25, 872), (1.25, 1672), (1.25, 1012), (1.25, 1572), (1.25, 1323), (1.25, 1372), (1.25, 1673), (1.25, 1217), (1.25, 1753), (1.25, 1871), (1.25, 1742), (1.25, 1650), (1.25, 1149), (1.25, 1870), (1.25, 1860), (1.25, 806), (1.25, 738), (1.25, 1122), (1.25, 1577), (1.25, 1237), (1.25, 1223), (1.25, 908), (1.25, 1547), (1.25, 1184), (1.25, 1121), (1.25, 1775), (1.25, 1118), (1.25, 1048), (1.25, 522), (1.25, 1456), (1.25, 596), (1.25, 917), (1.25, 1666), (1.25, 1645), (1.25, 1668), (1.25, 968), (1.25, 904), (1.25, 1667), (1.25, 1447), (1.25, 1728), (1.25, 1188), (1.25, 1762), (1.25, 1609), (1.25, 1546), (1.25, 1679), (1.25, 1570), (1.25, 1218), (1.25, 1422), (1.25, 1939), (1.25, 1863), (1.25, 733), (1.25, 1542), (1.25, 1774), (1.25, 1226), (1.25, 1127), (1.25, 986), (1.25, 1333), (1.25, 1752), (1.25, 1662), (1.125, 2073), (1.125, 2090), (1.125, 2087), (0.875, 2123), (0.875, 2142), (0.875, 2129), (0.75, 2136), (0.5, 2072), (0.5, 2160), (0.375, 2094), (0.375, 2138), (0.375, 2134), (0.375, 2084)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 1920
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1925
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1702
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2079
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`5`#`#`x`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 5 x) x) 1))
 nr_nodes: 8]
(CANDIDATE)[id: 2027
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 19]
[Computing fitness]
[(1.5, 2254), (1.5, 2024), (1.5, 2092), (1.5, 1704), (1.5, 1291), (1.5, 2203), (1.5, 1994), (1.5, 2158), (1.5, 2099), (1.5, 1198), (1.5, 2173), (1.5, 2118), (1.5, 1992), (1.5, 2251), (1.5, 1905), (1.5, 1975), (1.5, 1929), (1.5, 2230), (1.5, 2122), (1.5, 2033), (1.5, 2188), (1.5, 2227), (1.5, 2110), (1.5, 2135), (1.5, 1703), (1.5, 1499), (1.5, 1492), (1.5, 2012), (1.5, 2152), (1.5, 1881), (1.5, 2074), (1.5, 1102), (1.5, 1699), (1.5, 1878), (1.5, 2236), (1.5, 2126), (1.5, 2102), (1.5, 1785), (1.5, 2244), (1.5, 2078), (1.5, 2180), (1.5, 1893), (1.5, 1683), (1.5, 2218), (1.5, 1504), (1.5, 2165), (1.5, 2150), (1.5, 2224), (1.5, 1784), (1.5, 2146), (1.5, 1879), (1.5, 2069), (1.5, 1808), (1.5, 2089), (1.5, 2241), (1.5, 2223), (1.5, 1914), (1.5, 2104), (1.5, 2183), (1.5, 2070), (1.5, 2153), (1.5, 1919), (1.5, 1384), (1.5, 2106), (1.5, 1982), (1.5, 2149), (1.5, 2013), (1.5, 2248), (1.5, 2171), (1.5, 1592), (1.5, 2225), (1.5, 1591), (1.5, 2253), (1.5, 2252), (1.5, 1978), (1.5, 2140), (1.5, 1794), (1.5, 1812), (1.5, 2105), (1.5, 1927), (1.5, 1787), (1.5, 2006), (1.5, 1997), (1.5, 2209), (1.5, 1995), (1.5, 1991), (1.5, 2132), (1.5, 2214), (1.5, 1496), (1.5, 1779), (1.5, 2191), (1.5, 1920), (1.5, 1687), (1.5, 1913), (1.5, 1702), (1.5, 1900), (1.5, 2231), (1.5, 1793), (1.5, 997), (1.5, 2003), (1.5, 1101), (1.5, 1979), (1.5, 2100), (1.5, 2116), (1.5, 1987), (1.5, 2029), (1.5, 2039), (1.5, 1980), (1.5, 1797), (1.5, 2080), (1.5, 2042), (1.5, 2096), (1.5, 1781), (1.5, 2233), (1.5, 1807), (1.5, 2120), (1.5, 1589), (1.5, 2237), (1.5, 1600), (1.5, 1690), (1.5, 1926), (1.5, 1686), (1.5, 52), (1.5, 1391), (1.5, 1875), (1.5, 2088), (1.5, 1923), (1.5, 1885), (1.5, 2185), (1.5, 1681), (1.5, 1931), (1.5, 1404), (1.5, 1988), (1.5, 2220), (1.5, 1989), (1.5, 2032), (1.5, 2196), (1.5, 1911), (1.5, 2147), (1.5, 1921), (1.5, 2215), (1.5, 2130), (1.5, 1596), (1.5, 2167), (1.5, 2007), (1.5, 2043), (1.5, 2177), (1.5, 1392), (1.5, 1912), (1.5, 1691), (1.5, 1908), (1.5, 2030), (1.5, 1196), (1.5, 2077), (1.5, 2022), (1.5, 2144), (1.5, 2041), (1.5, 2119), (1.5, 2114), (1.5, 2027), (1.5, 2009), (1.5, 1685), (1.5, 2107), (1.5, 1909), (1.5, 1801), (1.5, 1802), (1.5, 1888), (1.5, 2238), (1.5, 2222), (1.5, 1603), (1.5, 1805), (1.5, 1197), (1.5, 2005), (1.5, 2166), (1.5, 1590), (1.5, 1883), (1.5, 2205), (1.5, 1895), (1.5, 2193), (1.5, 1387), (1.5, 1810), (1.5, 2079), (1.5, 1253), (1.5, 1682), (1.5, 1595), (1.5, 1806), (1.5, 1915), (1.5, 2211), (1.5, 2091), (1.5, 2095), (1.5, 2085), (1.5, 2162), (1.5, 2036), (1.5, 2117), (1.5, 2154), (1.5, 2179), (1.5, 2046), (1.5, 2197), (1.5, 1977), (1.5, 2221), (1.5, 2028), (1.5, 1786), (1.5, 2161), (1.5, 1788), (1.5, 2187), (1.5, 2226), (1.5, 2235), (1.5, 2076), (1.5, 2232), (1.5, 2255), (1.5, 2103), (1.5, 2109), (1.5, 2151), (1.5, 1293), (1.5, 1924), (1.5, 2156), (1.5, 1896), (1.5, 2228), (1.5, 2108), (1.5, 1800), (1.5, 2101), (1.5, 2175), (1.5, 1783), (1.5, 2176), (1.5, 1390), (1.5, 2125), (1.5, 1976), (1.5, 2172), (1.5, 2139), (1.5, 2040), (1.5, 1386), (1.5, 2038), (1.5, 1696), (1.5, 1594), (1.5, 894), (1.5, 2199), (1.5, 1490), (1.5, 2019), (1.5, 2145), (1.5, 2200), (1.5, 1790), (1.5, 2192), (1.5, 2206), (1.5, 2098), (1.5, 2190), (1.5, 1695), (1.5, 2035), (1.5, 1813), (1.5, 1902), (1.5, 1698), (1.5, 2082), (1.5, 2112), (1.5, 2174), (1.5, 1296), (1.5, 2250), (1.5, 1602), (1.5, 696), (1.5, 2093), (1.5, 1605), (1.5, 1692), (1.5, 2127), (1.5, 2115), (1.5, 2002), (1.5, 2234), (1.5, 1803), (1.5, 2004), (1.5, 1597), (1.5, 2163), (1.5, 2157), (1.5, 1892), (1.5, 1925), (1.5, 1497), (1.5, 1780), (1.5, 1389), (1.5, 2195), (1.5, 1891), (1.5, 1290), (1.5, 1604), (1.5, 2239), (1.375, 1767), (1.375, 1401), (1.375, 1397), (1.375, 1630), (1.375, 1843), (1.375, 1426), (1.375, 1006), (1.375, 967), (1.375, 1973), (1.375, 1759), (1.375, 1621), (1.375, 1610), (1.375, 1617), (1.375, 1287), (1.375, 1959), (1.375, 1103), (1.375, 1821), (1.375, 2063), (1.375, 494), (1.375, 751), (1.375, 2048), (1.375, 1943), (1.375, 1830), (1.375, 1268), (1.375, 1729), (1.375, 1307), (1.375, 1304), (1.375, 1508), (1.375, 598), (1.375, 1722), (1.375, 1960), (1.375, 1858), (1.375, 1817), (1.375, 1204), (1.375, 1822), (1.375, 1277), (1.375, 1004), (1.375, 1298), (1.375, 1950), (1.375, 2051), (1.375, 1000), (1.375, 698), (1.375, 1109), (1.375, 1306), (1.375, 919), (1.375, 1302), (1.375, 2066), (1.375, 1411), (1.375, 1828), (1.375, 1540), (1.375, 1940), (1.375, 1506), (1.375, 1612), (1.375, 2068), (1.375, 1512), (1.375, 1824), (1.375, 1509), (1.375, 1003), (1.375, 1724), (1.375, 1739), (1.375, 1967), (1.375, 1938), (1.375, 1968), (1.375, 1955), (1.375, 1744), (1.375, 1970), (1.375, 1510), (1.375, 2053), (1.375, 278), (1.375, 2052), (1.375, 1523), (1.375, 1850), (1.375, 1734), (1.375, 1737), (1.375, 1516), (1.375, 811), (1.375, 1632), (1.375, 1746), (1.375, 1845), (1.375, 1628), (1.375, 1720), (1.375, 2047), (1.375, 2061), (1.375, 1408), (1.375, 799), (1.375, 1620), (1.375, 1518), (1.375, 1823), (1.375, 897), (1.375, 1732), (1.375, 1305), (1.375, 1819), (1.375, 1560), (1.375, 1607), (1.375, 1714), (1.375, 1403), (1.375, 1618), (1.375, 2067), (1.375, 1527), (1.375, 1395), (1.375, 798), (1.375, 1947), (1.375, 1199), (1.375, 1105), (1.375, 1837), (1.375, 2058), (1.375, 1303), (1.25, 1711), (1.125, 2169), (0.625, 2217), (0.625, 2201), (0.5, 2257), (0.5, 2246), (0.5, 2213), (0.375, 2208), (0.375, 2204), (0.375, 2249), (0.375, 2182), (0.375, 2202), (0.375, 2242), (0.375, 2184)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 2254
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2024
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2092
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1704
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1291
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 20]
[Computing fitness]
[(1.5, 2085), (1.5, 1992), (1.5, 1785), (1.5, 1885), (1.5, 2221), (1.5, 1888), (1.5, 2135), (1.5, 1793), (1.5, 2313), (1.5, 1779), (1.5, 1603), (1.5, 1875), (1.5, 2076), (1.5, 2199), (1.5, 2074), (1.5, 1786), (1.5, 2100), (1.5, 2175), (1.5, 1879), (1.5, 2233), (1.5, 2200), (1.5, 2119), (1.5, 1686), (1.5, 2179), (1.5, 1914), (1.5, 1878), (1.5, 1682), (1.5, 1296), (1.5, 2258), (1.5, 1390), (1.5, 2110), (1.5, 2190), (1.5, 2251), (1.5, 1698), (1.5, 2153), (1.5, 1597), (1.5, 2152), (1.5, 1604), (1.5, 894), (1.5, 2237), (1.5, 2353), (1.5, 2120), (1.5, 1797), (1.5, 2149), (1.5, 1687), (1.5, 1931), (1.5, 2101), (1.5, 1696), (1.5, 1253), (1.5, 2253), (1.5, 2104), (1.5, 2239), (1.5, 2077), (1.5, 2180), (1.5, 2325), (1.5, 2295), (1.5, 2303), (1.5, 2130), (1.5, 2241), (1.5, 2355), (1.5, 1681), (1.5, 1392), (1.5, 2003), (1.5, 2250), (1.5, 2226), (1.5, 2103), (1.5, 2029), (1.5, 2030), (1.5, 2214), (1.5, 2329), (1.5, 2078), (1.5, 2275), (1.5, 2070), (1.5, 1909), (1.5, 2046), (1.5, 2122), (1.5, 2043), (1.5, 2326), (1.5, 2112), (1.5, 1911), (1.5, 2291), (1.5, 2163), (1.5, 1497), (1.5, 2238), (1.5, 2320), (1.5, 1919), (1.5, 1900), (1.5, 1927), (1.5, 2007), (1.5, 1896), (1.5, 1589), (1.5, 1924), (1.5, 2308), (1.5, 2019), (1.5, 2147), (1.5, 1695), (1.5, 2230), (1.5, 1921), (1.5, 2146), (1.5, 2312), (1.5, 2223), (1.5, 2222), (1.5, 1699), (1.5, 2027), (1.5, 2272), (1.5, 2191), (1.5, 2005), (1.5, 2108), (1.5, 1803), (1.5, 1605), (1.5, 2252), (1.5, 2264), (1.5, 2004), (1.5, 2157), (1.5, 2185), (1.5, 1197), (1.5, 1978), (1.5, 1781), (1.5, 2145), (1.5, 2211), (1.5, 2290), (1.5, 2277), (1.5, 1902), (1.5, 2089), (1.5, 1592), (1.5, 2218), (1.5, 2151), (1.5, 2036), (1.5, 2288), (1.5, 1893), (1.5, 2098), (1.5, 1590), (1.5, 1692), (1.5, 2304), (1.5, 2227), (1.5, 1994), (1.5, 696), (1.5, 1806), (1.5, 2316), (1.5, 2144), (1.5, 1703), (1.5, 1905), (1.5, 2117), (1.5, 2092), (1.5, 2220), (1.5, 1704), (1.5, 2234), (1.5, 2013), (1.5, 1600), (1.5, 2024), (1.5, 2330), (1.5, 2206), (1.5, 2286), (1.5, 2115), (1.5, 1812), (1.5, 2132), (1.5, 2319), (1.5, 1883), (1.5, 2324), (1.5, 1802), (1.5, 2302), (1.5, 2042), (1.5, 2012), (1.5, 1988), (1.5, 2254), (1.5, 2236), (1.5, 2162), (1.5, 2032), (1.5, 2150), (1.5, 2231), (1.5, 2009), (1.5, 2322), (1.5, 2284), (1.5, 2358), (1.5, 2297), (1.5, 1920), (1.5, 1783), (1.5, 1784), (1.5, 2095), (1.5, 2276), (1.5, 1807), (1.5, 2321), (1.5, 2328), (1.5, 2235), (1.5, 1683), (1.5, 2192), (1.5, 1690), (1.5, 1915), (1.5, 2038), (1.5, 2126), (1.5, 2096), (1.5, 1389), (1.5, 1702), (1.5, 1492), (1.5, 2287), (1.5, 1908), (1.5, 2349), (1.5, 1895), (1.5, 1691), (1.5, 1980), (1.5, 2255), (1.5, 1982), (1.5, 1198), (1.5, 2176), (1.5, 2140), (1.5, 2127), (1.5, 2082), (1.5, 2273), (1.5, 1808), (1.5, 1926), (1.5, 2203), (1.5, 2114), (1.5, 1602), (1.5, 2294), (1.5, 1291), (1.5, 2088), (1.5, 2193), (1.5, 2166), (1.5, 1387), (1.5, 1995), (1.5, 2118), (1.5, 1780), (1.5, 2006), (1.5, 2195), (1.5, 2232), (1.5, 1591), (1.5, 2228), (1.5, 1989), (1.5, 2271), (1.5, 997), (1.5, 2174), (1.5, 1925), (1.5, 2105), (1.5, 2197), (1.5, 1913), (1.5, 2339), (1.5, 2188), (1.5, 2040), (1.5, 1596), (1.5, 1997), (1.5, 2125), (1.5, 1881), (1.5, 1891), (1.5, 2173), (1.5, 1196), (1.5, 2261), (1.5, 2091), (1.5, 2172), (1.5, 2002), (1.5, 1912), (1.5, 2183), (1.5, 2224), (1.5, 2093), (1.5, 2244), (1.5, 2022), (1.5, 1101), (1.5, 1685), (1.5, 2154), (1.5, 1391), (1.5, 1892), (1.5, 1801), (1.5, 2315), (1.5, 1504), (1.5, 1923), (1.5, 2360), (1.5, 2099), (1.5, 2278), (1.5, 2171), (1.5, 1975), (1.5, 1991), (1.5, 2311), (1.5, 2041), (1.5, 2080), (1.5, 1496), (1.5, 1979), (1.5, 1102), (1.5, 2196), (1.5, 2106), (1.5, 2187), (1.5, 2116), (1.5, 2177), (1.5, 1788), (1.5, 2039), (1.5, 1977), (1.5, 1800), (1.5, 2165), (1.5, 1490), (1.5, 1987), (1.5, 1976), (1.5, 1790), (1.5, 1293), (1.5, 1810), (1.5, 2341), (1.5, 2205), (1.5, 2158), (1.5, 2139), (1.5, 2336), (1.5, 1499), (1.5, 2350), (1.5, 2215), (1.5, 1404), (1.5, 2269), (1.5, 1384), (1.5, 2267), (1.5, 2225), (1.5, 2156), (1.5, 2296), (1.5, 1290), (1.5, 1813), (1.5, 2298), (1.5, 1787), (1.5, 2248), (1.5, 2107), (1.5, 2266), (1.5, 2028), (1.5, 1805), (1.5, 2033), (1.5, 2310), (1.5, 2079), (1.5, 1794), (1.5, 2167), (1.5, 2335), (1.5, 52), (1.5, 2161), (1.5, 1595), (1.5, 1386), (1.5, 2069), (1.5, 2035), (1.5, 2109), (1.5, 2209), (1.5, 1594), (1.5, 2102), (1.5, 1929), (1.375, 1973), (1.375, 1103), (1.375, 1508), (1.375, 1006), (1.375, 1830), (1.375, 1302), (1.375, 1610), (1.375, 967), (1.375, 1621), (1.375, 1960), (1.375, 1306), (1.375, 1843), (1.375, 1950), (1.375, 2048), (1.375, 1729), (1.375, 1401), (1.375, 1268), (1.375, 1759), (1.375, 1617), (1.375, 698), (1.375, 2051), (1.375, 1109), (1.375, 1821), (1.375, 1287), (1.375, 1004), (1.375, 1722), (1.375, 1426), (1.375, 919), (1.375, 2063), (1.375, 1298), (1.375, 494), (1.375, 1204), (1.375, 1858), (1.375, 1307), (1.375, 1630), (1.375, 1959), (1.375, 1397), (1.375, 1817), (1.375, 1277), (1.375, 1000), (1.375, 1767), (1.375, 1822), (1.375, 1304), (1.375, 1943), (1.375, 751), (1.375, 598), (1.125, 2301), (1.0, 2347), (0.875, 2338), (0.875, 2263), (0.875, 2306), (0.875, 2343), (0.875, 2280), (0.75, 2300), (0.5, 2282), (0.5, 2293), (0.5, 2352), (0.5, 2260), (0.5, 2345), (0.5, 2362), (0.5, 2333), (0.375, 2265), (0.375, 2331), (0.375, 2356), (0.375, 2340), (0.375, 2317), (0.375, 2309)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 2085
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1992
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1785
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1885
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2221
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 21]
[Computing fitness]
[(1.5, 1696), (1.5, 2130), (1.5, 2436), (1.5, 2029), (1.5, 2419), (1.5, 2326), (1.5, 1296), (1.5, 2009), (1.5, 1924), (1.5, 1807), (1.5, 1979), (1.5, 2224), (1.5, 1909), (1.5, 2019), (1.5, 2389), (1.5, 2421), (1.5, 2395), (1.5, 2152), (1.5, 2388), (1.5, 2125), (1.5, 1290), (1.5, 1392), (1.5, 894), (1.5, 2387), (1.5, 1692), (1.5, 2117), (1.5, 2447), (1.5, 2462), (1.5, 2320), (1.5, 2174), (1.5, 2408), (1.5, 1808), (1.5, 2147), (1.5, 1911), (1.5, 1803), (1.5, 1888), (1.5, 1387), (1.5, 2110), (1.5, 2310), (1.5, 1600), (1.5, 2273), (1.5, 1604), (1.5, 1591), (1.5, 2203), (1.5, 2463), (1.5, 2241), (1.5, 2271), (1.5, 2100), (1.5, 2294), (1.5, 2416), (1.5, 2233), (1.5, 2119), (1.5, 2024), (1.5, 1390), (1.5, 1196), (1.5, 1978), (1.5, 1691), (1.5, 2415), (1.5, 2004), (1.5, 2311), (1.5, 1923), (1.5, 997), (1.5, 2328), (1.5, 2386), (1.5, 2145), (1.5, 2176), (1.5, 2157), (1.5, 2302), (1.5, 2349), (1.5, 1883), (1.5, 2291), (1.5, 2312), (1.5, 2046), (1.5, 2304), (1.5, 2238), (1.5, 2101), (1.5, 52), (1.5, 1787), (1.5, 2377), (1.5, 2115), (1.5, 2446), (1.5, 1253), (1.5, 2214), (1.5, 1698), (1.5, 2146), (1.5, 1404), (1.5, 2382), (1.5, 2253), (1.5, 2166), (1.5, 1779), (1.5, 2022), (1.5, 1595), (1.5, 2339), (1.5, 2369), (1.5, 2144), (1.5, 2180), (1.5, 1783), (1.5, 2234), (1.5, 1900), (1.5, 2286), (1.5, 2319), (1.5, 2420), (1.5, 2139), (1.5, 2315), (1.5, 1686), (1.5, 1790), (1.5, 2288), (1.5, 1602), (1.5, 1915), (1.5, 2106), (1.5, 1685), (1.5, 2116), (1.5, 1812), (1.5, 2313), (1.5, 2185), (1.5, 1699), (1.5, 2384), (1.5, 1702), (1.5, 2193), (1.5, 2183), (1.5, 2358), (1.5, 2098), (1.5, 2237), (1.5, 2287), (1.5, 2140), (1.5, 1914), (1.5, 1198), (1.5, 2205), (1.5, 2107), (1.5, 1987), (1.5, 2220), (1.5, 1878), (1.5, 2308), (1.5, 2114), (1.5, 2126), (1.5, 2336), (1.5, 2158), (1.5, 2215), (1.5, 1810), (1.5, 1793), (1.5, 2458), (1.5, 2162), (1.5, 2095), (1.5, 2027), (1.5, 1879), (1.5, 1687), (1.5, 2206), (1.5, 2244), (1.5, 2373), (1.5, 1800), (1.5, 2298), (1.5, 2177), (1.5, 2376), (1.5, 1989), (1.5, 2428), (1.5, 1384), (1.5, 2252), (1.5, 2112), (1.5, 1786), (1.5, 2135), (1.5, 2353), (1.5, 2199), (1.5, 1690), (1.5, 2430), (1.5, 2161), (1.5, 1784), (1.5, 2396), (1.5, 2149), (1.5, 2460), (1.5, 1781), (1.5, 2188), (1.5, 1597), (1.5, 2211), (1.5, 2043), (1.5, 2461), (1.5, 2433), (1.5, 2079), (1.5, 2012), (1.5, 2232), (1.5, 2002), (1.5, 1794), (1.5, 2391), (1.5, 2450), (1.5, 2411), (1.5, 1895), (1.5, 2195), (1.5, 2030), (1.5, 2187), (1.5, 1919), (1.5, 2085), (1.5, 1905), (1.5, 2192), (1.5, 1926), (1.5, 1490), (1.5, 2153), (1.5, 2218), (1.5, 2236), (1.5, 1785), (1.5, 1499), (1.5, 1994), (1.5, 1805), (1.5, 2200), (1.5, 1982), (1.5, 1780), (1.5, 2041), (1.5, 1596), (1.5, 1492), (1.5, 1703), (1.5, 1101), (1.5, 2414), (1.5, 2038), (1.5, 2108), (1.5, 1391), (1.5, 2070), (1.5, 1913), (1.5, 2228), (1.5, 2427), (1.5, 2248), (1.5, 2091), (1.5, 2425), (1.5, 2156), (1.5, 2127), (1.5, 2371), (1.5, 2196), (1.5, 2105), (1.5, 2267), (1.5, 1695), (1.5, 2005), (1.5, 1988), (1.5, 2171), (1.5, 2457), (1.5, 2465), (1.5, 2082), (1.5, 1927), (1.5, 2033), (1.5, 2006), (1.5, 2452), (1.5, 1912), (1.5, 2254), (1.5, 1590), (1.5, 2360), (1.5, 2223), (1.5, 2197), (1.5, 1875), (1.5, 2455), (1.5, 2104), (1.5, 2099), (1.5, 2003), (1.5, 2444), (1.5, 2225), (1.5, 2449), (1.5, 2372), (1.5, 2290), (1.5, 2324), (1.5, 2089), (1.5, 1885), (1.5, 1504), (1.5, 2150), (1.5, 1976), (1.5, 2364), (1.5, 1997), (1.5, 2418), (1.5, 1893), (1.5, 2394), (1.5, 2466), (1.5, 2284), (1.5, 696), (1.5, 2269), (1.5, 1881), (1.5, 2227), (1.5, 2261), (1.5, 2118), (1.5, 1995), (1.5, 1293), (1.5, 1892), (1.5, 1589), (1.5, 2275), (1.5, 1977), (1.5, 2221), (1.5, 2179), (1.5, 2296), (1.5, 1496), (1.5, 2431), (1.5, 1925), (1.5, 2076), (1.5, 2132), (1.5, 2434), (1.5, 2103), (1.5, 1704), (1.5, 2322), (1.5, 2385), (1.5, 2042), (1.5, 2439), (1.5, 2303), (1.5, 2255), (1.5, 2013), (1.5, 1991), (1.5, 1682), (1.5, 1603), (1.5, 1891), (1.5, 1683), (1.5, 2379), (1.5, 1389), (1.5, 2417), (1.5, 2426), (1.5, 2007), (1.5, 2151), (1.5, 2264), (1.5, 1806), (1.5, 2231), (1.5, 2222), (1.5, 2122), (1.5, 2325), (1.5, 2329), (1.5, 2295), (1.5, 2120), (1.5, 2165), (1.5, 1992), (1.5, 2316), (1.5, 2096), (1.5, 2335), (1.5, 1975), (1.5, 2297), (1.5, 2191), (1.5, 2239), (1.5, 1920), (1.5, 1902), (1.5, 2078), (1.5, 2172), (1.5, 2088), (1.5, 2456), (1.5, 2040), (1.5, 1921), (1.5, 1896), (1.5, 2230), (1.5, 2276), (1.5, 2154), (1.5, 1801), (1.5, 2278), (1.5, 1908), (1.5, 2380), (1.5, 1102), (1.5, 2407), (1.5, 2077), (1.5, 1788), (1.5, 1605), (1.5, 2093), (1.5, 2250), (1.5, 2190), (1.5, 1291), (1.5, 2080), (1.5, 2173), (1.5, 2226), (1.5, 2341), (1.5, 2277), (1.5, 2028), (1.5, 2074), (1.5, 1802), (1.5, 2167), (1.5, 2350), (1.5, 2355), (1.5, 2402), (1.5, 2092), (1.5, 2039), (1.5, 1813), (1.5, 1497), (1.5, 2032), (1.5, 2235), (1.5, 1592), (1.5, 2367), (1.5, 2163), (1.5, 2404), (1.5, 2374), (1.5, 2036), (1.5, 2258), (1.5, 1681), (1.5, 2409), (1.5, 1797), (1.5, 2266), (1.5, 1980), (1.5, 1931), (1.5, 2330), (1.5, 2321), (1.5, 2175), (1.5, 2251), (1.5, 2272), (1.5, 1197), (0.875, 2441), (0.875, 2366), (0.625, 2400), (0.5, 2413), (0.5, 2443), (0.375, 2401), (0.375, 2398), (0.375, 2423), (0.375, 2438), (0.375, 2406), (0.375, 2393), (0.375, 2424), (0.375, 2453)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 1696
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2130
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2436
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2029
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2419
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 22]
[Computing fitness]
[(1.5, 1914), (1.5, 894), (1.5, 2525), (1.5, 2183), (1.5, 2320), (1.5, 2115), (1.5, 997), (1.5, 1590), (1.5, 1490), (1.5, 2481), (1.5, 1691), (1.5, 2386), (1.5, 2316), (1.5, 2085), (1.5, 2460), (1.5, 2531), (1.5, 1895), (1.5, 2376), (1.5, 1685), (1.5, 2552), (1.5, 2192), (1.5, 2528), (1.5, 2114), (1.5, 1892), (1.5, 2203), (1.5, 2076), (1.5, 2161), (1.5, 2482), (1.5, 1978), (1.5, 2180), (1.5, 2288), (1.5, 1699), (1.5, 2019), (1.5, 2308), (1.5, 2166), (1.5, 2502), (1.5, 1997), (1.5, 2108), (1.5, 2187), (1.5, 2041), (1.5, 2408), (1.5, 2222), (1.5, 2461), (1.5, 2132), (1.5, 2315), (1.5, 1911), (1.5, 1883), (1.5, 2033), (1.5, 1290), (1.5, 2494), (1.5, 1692), (1.5, 2176), (1.5, 2455), (1.5, 2433), (1.5, 1989), (1.5, 1787), (1.5, 2153), (1.5, 2313), (1.5, 2099), (1.5, 2174), (1.5, 1790), (1.5, 2324), (1.5, 1698), (1.5, 2311), (1.5, 2415), (1.5, 2542), (1.5, 2119), (1.5, 2391), (1.5, 1977), (1.5, 2013), (1.5, 2339), (1.5, 2214), (1.5, 1900), (1.5, 2388), (1.5, 2496), (1.5, 1783), (1.5, 2524), (1.5, 2418), (1.5, 2220), (1.5, 1995), (1.5, 2147), (1.5, 1600), (1.5, 2100), (1.5, 2360), (1.5, 1703), (1.5, 2191), (1.5, 2070), (1.5, 2140), (1.5, 2425), (1.5, 2478), (1.5, 1926), (1.5, 2512), (1.5, 2223), (1.5, 1389), (1.5, 2462), (1.5, 2120), (1.5, 2098), (1.5, 2237), (1.5, 2003), (1.5, 1919), (1.5, 2107), (1.5, 2236), (1.5, 2006), (1.5, 2302), (1.5, 1927), (1.5, 2232), (1.5, 1979), (1.5, 2118), (1.5, 1604), (1.5, 2151), (1.5, 1925), (1.5, 2421), (1.5, 2188), (1.5, 1785), (1.5, 2473), (1.5, 1912), (1.5, 1392), (1.5, 2325), (1.5, 2447), (1.5, 2200), (1.5, 2364), (1.5, 2110), (1.5, 2234), (1.5, 1596), (1.5, 2122), (1.5, 1597), (1.5, 2471), (1.5, 2149), (1.5, 1682), (1.5, 2436), (1.5, 2303), (1.5, 2503), (1.5, 2177), (1.5, 2196), (1.5, 2295), (1.5, 2195), (1.5, 2371), (1.5, 2511), (1.5, 2244), (1.5, 2485), (1.5, 2538), (1.5, 2467), (1.5, 2158), (1.5, 2238), (1.5, 1492), (1.5, 2157), (1.5, 2470), (1.5, 2091), (1.5, 2559), (1.5, 2038), (1.5, 2046), (1.5, 2534), (1.5, 2554), (1.5, 2294), (1.5, 2239), (1.5, 2095), (1.5, 1905), (1.5, 2546), (1.5, 2286), (1.5, 2479), (1.5, 2150), (1.5, 1913), (1.5, 1875), (1.5, 2304), (1.5, 2042), (1.5, 1384), (1.5, 2105), (1.5, 2264), (1.5, 2490), (1.5, 2379), (1.5, 2117), (1.5, 2465), (1.5, 2431), (1.5, 2329), (1.5, 2267), (1.5, 2557), (1.5, 2322), (1.5, 1696), (1.5, 2146), (1.5, 2297), (1.5, 2319), (1.5, 2104), (1.5, 1602), (1.5, 1391), (1.5, 1496), (1.5, 1975), (1.5, 2449), (1.5, 1909), (1.5, 2504), (1.5, 2269), (1.5, 1885), (1.5, 2171), (1.5, 1800), (1.5, 2468), (1.5, 2484), (1.5, 2233), (1.5, 2547), (1.5, 1591), (1.5, 2509), (1.5, 2127), (1.5, 1808), (1.5, 2553), (1.5, 2521), (1.5, 2508), (1.5, 2427), (1.5, 1779), (1.5, 2349), (1.5, 2419), (1.5, 2298), (1.5, 2501), (1.5, 1683), (1.5, 1923), (1.5, 2284), (1.5, 2211), (1.5, 1687), (1.5, 1807), (1.5, 2193), (1.5, 1198), (1.5, 2029), (1.5, 1695), (1.5, 1992), (1.5, 2096), (1.5, 2519), (1.5, 2004), (1.5, 2144), (1.5, 2130), (1.5, 2227), (1.5, 1982), (1.5, 2514), (1.5, 2218), (1.5, 1803), (1.5, 2353), (1.5, 2522), (1.5, 2395), (1.5, 2089), (1.5, 2252), (1.5, 1296), (1.5, 2551), (1.5, 2275), (1.5, 1794), (1.5, 2291), (1.5, 1991), (1.5, 2030), (1.5, 2564), (1.5, 2389), (1.5, 2012), (1.5, 2543), (1.5, 2532), (1.5, 1893), (1.5, 1690), (1.5, 2463), (1.5, 2420), (1.5, 2483), (1.5, 1805), (1.5, 1879), (1.5, 2312), (1.5, 2527), (1.5, 2434), (1.5, 2185), (1.5, 2396), (1.5, 1878), (1.5, 52), (1.5, 2215), (1.5, 2385), (1.5, 2387), (1.5, 2156), (1.5, 2162), (1.5, 1891), (1.5, 2027), (1.5, 2254), (1.5, 2529), (1.5, 1781), (1.5, 2540), (1.5, 2152), (1.5, 1499), (1.5, 2255), (1.5, 2328), (1.5, 2537), (1.5, 1994), (1.5, 2336), (1.5, 2165), (1.5, 1915), (1.5, 2446), (1.5, 2112), (1.5, 2126), (1.5, 2466), (1.5, 2199), (1.5, 2261), (1.5, 2231), (1.5, 2007), (1.5, 2457), (1.5, 2287), (1.5, 2101), (1.5, 2416), (1.5, 2417), (1.5, 2225), (1.5, 2523), (1.5, 2179), (1.5, 2428), (1.5, 2372), (1.5, 2103), (1.5, 1704), (1.5, 2382), (1.5, 1253), (1.5, 2022), (1.5, 2145), (1.5, 2205), (1.5, 2271), (1.5, 2335), (1.5, 2472), (1.5, 1888), (1.5, 2452), (1.5, 1812), (1.5, 2549), (1.5, 2197), (1.5, 2426), (1.5, 1702), (1.5, 1976), (1.5, 2009), (1.5, 1387), (1.5, 2224), (1.5, 1595), (1.5, 1806), (1.5, 1686), (1.5, 2079), (1.5, 2411), (1.5, 2139), (1.5, 2326), (1.5, 2506), (1.5, 2384), (1.5, 1881), (1.5, 1589), (1.5, 1390), (1.5, 1780), (1.5, 2458), (1.5, 2369), (1.5, 696), (1.5, 2526), (1.5, 2500), (1.5, 1793), (1.5, 1196), (1.5, 2005), (1.5, 2290), (1.5, 2491), (1.5, 2248), (1.5, 1784), (1.5, 1987), (1.5, 2439), (1.5, 2562), (1.5, 2241), (1.5, 1101), (1.5, 2228), (1.5, 2043), (1.5, 2273), (1.5, 2296), (1.5, 2394), (1.5, 1404), (1.5, 2495), (1.5, 2125), (1.5, 2373), (1.5, 1504), (1.5, 2002), (1.5, 1810), (1.5, 1293), (1.5, 2082), (1.5, 2206), (1.5, 2221), (1.5, 2498), (1.5, 2310), (1.5, 2414), (1.5, 2377), (1.5, 2358), (1.5, 2024), (1.5, 2135), (1.5, 2253), (1.5, 2550), (1.5, 2450), (1.5, 1924), (1.5, 2444), (1.5, 2116), (1.5, 2430), (1.5, 1603), (1.5, 2536), (1.5, 2106), (1.5, 1988), (1.5, 1786), (0.875, 2561), (0.875, 2518), (0.875, 2487), (0.875, 2493), (0.875, 2475), (0.75, 2477), (0.75, 2499), (0.625, 2535), (0.625, 2516), (0.5, 2545), (0.5, 2489), (0.375, 2555), (0.375, 2548), (0.375, 2530)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 1914
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 894
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2525
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`5`#`#`x`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 5 x) x) 1))
 nr_nodes: 8]
(CANDIDATE)[id: 2183
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2320
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 23]
[Computing fitness]
[(1.5, 2019), (1.5, 1982), (1.5, 1781), (1.5, 997), (1.5, 2612), (1.5, 1698), (1.5, 1703), (1.5, 2431), (1.5, 2151), (1.5, 2107), (1.5, 2130), (1.5, 2199), (1.5, 1699), (1.5, 2315), (1.5, 2644), (1.5, 1389), (1.5, 2308), (1.5, 2284), (1.5, 2602), (1.5, 2615), (1.5, 2103), (1.5, 2396), (1.5, 2267), (1.5, 2227), (1.5, 1900), (1.5, 1923), (1.5, 2152), (1.5, 2215), (1.5, 1995), (1.5, 2538), (1.5, 1604), (1.5, 1685), (1.5, 1915), (1.5, 52), (1.5, 2570), (1.5, 2421), (1.5, 2096), (1.5, 2252), (1.5, 2316), (1.5, 2519), (1.5, 1391), (1.5, 2089), (1.5, 2203), (1.5, 2461), (1.5, 2335), (1.5, 2112), (1.5, 2512), (1.5, 2104), (1.5, 2452), (1.5, 2655), (1.5, 2100), (1.5, 2658), (1.5, 2122), (1.5, 2552), (1.5, 2388), (1.5, 1997), (1.5, 2595), (1.5, 2149), (1.5, 2463), (1.5, 1198), (1.5, 1891), (1.5, 2511), (1.5, 2547), (1.5, 2603), (1.5, 2580), (1.5, 2566), (1.5, 2120), (1.5, 2295), (1.5, 1977), (1.5, 2593), (1.5, 1387), (1.5, 2531), (1.5, 1692), (1.5, 2187), (1.5, 2286), (1.5, 2029), (1.5, 2153), (1.5, 2415), (1.5, 2481), (1.5, 2387), (1.5, 2514), (1.5, 2417), (1.5, 1992), (1.5, 2144), (1.5, 2660), (1.5, 2038), (1.5, 2521), (1.5, 1893), (1.5, 1702), (1.5, 2364), (1.5, 2311), (1.5, 2224), (1.5, 1590), (1.5, 2462), (1.5, 2524), (1.5, 2574), (1.5, 2609), (1.5, 2391), (1.5, 2573), (1.5, 2611), (1.5, 2218), (1.5, 2239), (1.5, 2416), (1.5, 2214), (1.5, 2176), (1.5, 2575), (1.5, 2336), (1.5, 2590), (1.5, 2275), (1.5, 2646), (1.5, 2504), (1.5, 2269), (1.5, 2572), (1.5, 2525), (1.5, 1991), (1.5, 1875), (1.5, 2126), (1.5, 2294), (1.5, 2085), (1.5, 2449), (1.5, 2004), (1.5, 2636), (1.5, 1384), (1.5, 2196), (1.5, 2650), (1.5, 2012), (1.5, 2624), (1.5, 2426), (1.5, 2376), (1.5, 2425), (1.5, 1499), (1.5, 1591), (1.5, 1785), (1.5, 2385), (1.5, 1682), (1.5, 2472), (1.5, 2244), (1.5, 2528), (1.5, 1492), (1.5, 2543), (1.5, 2192), (1.5, 2298), (1.5, 2508), (1.5, 2591), (1.5, 2304), (1.5, 2621), (1.5, 2468), (1.5, 2195), (1.5, 1296), (1.5, 2041), (1.5, 2551), (1.5, 2630), (1.5, 2490), (1.5, 2013), (1.5, 2479), (1.5, 2372), (1.5, 1595), (1.5, 1895), (1.5, 2418), (1.5, 2610), (1.5, 2640), (1.5, 2114), (1.5, 2436), (1.5, 1892), (1.5, 2117), (1.5, 2200), (1.5, 2232), (1.5, 1686), (1.5, 1913), (1.5, 2255), (1.5, 2261), (1.5, 2482), (1.5, 2455), (1.5, 2193), (1.5, 1975), (1.5, 2639), (1.5, 1926), (1.5, 2657), (1.5, 2171), (1.5, 2237), (1.5, 2271), (1.5, 1805), (1.5, 2447), (1.5, 2101), (1.5, 2467), (1.5, 2617), (1.5, 2161), (1.5, 2158), (1.5, 1704), (1.5, 2324), (1.5, 2070), (1.5, 2079), (1.5, 1978), (1.5, 2662), (1.5, 2046), (1.5, 1888), (1.5, 2434), (1.5, 1490), (1.5, 2618), (1.5, 1989), (1.5, 2622), (1.5, 2616), (1.5, 1496), (1.5, 2211), (1.5, 2223), (1.5, 1807), (1.5, 2287), (1.5, 2183), (1.5, 2119), (1.5, 2534), (1.5, 1905), (1.5, 2312), (1.5, 1878), (1.5, 1925), (1.5, 2395), (1.5, 1994), (1.5, 2446), (1.5, 2220), (1.5, 2118), (1.5, 1602), (1.5, 2302), (1.5, 2174), (1.5, 2157), (1.5, 894), (1.5, 2653), (1.5, 2554), (1.5, 1914), (1.5, 2254), (1.5, 2620), (1.5, 2162), (1.5, 2156), (1.5, 2466), (1.5, 2494), (1.5, 2166), (1.5, 2127), (1.5, 2605), (1.5, 2473), (1.5, 2629), (1.5, 2313), (1.5, 1800), (1.5, 1695), (1.5, 2225), (1.5, 2501), (1.5, 2165), (1.5, 2320), (1.5, 1883), (1.5, 1806), (1.5, 1927), (1.5, 2379), (1.5, 2180), (1.5, 2419), (1.5, 2188), (1.5, 1683), (1.5, 1803), (1.5, 2303), (1.5, 2291), (1.5, 2382), (1.5, 2588), (1.5, 2433), (1.5, 1909), (1.5, 1597), (1.5, 2523), (1.5, 2522), (1.5, 2009), (1.5, 2353), (1.5, 2328), (1.5, 2553), (1.5, 2641), (1.5, 1912), (1.5, 2427), (1.5, 2319), (1.5, 1879), (1.5, 2140), (1.5, 2027), (1.5, 2485), (1.5, 2179), (1.5, 2496), (1.5, 2231), (1.5, 1253), (1.5, 2582), (1.5, 2145), (1.5, 2509), (1.5, 2599), (1.5, 1787), (1.5, 2007), (1.5, 2656), (1.5, 2236), (1.5, 2559), (1.5, 2619), (1.5, 2478), (1.5, 2115), (1.5, 2264), (1.5, 2108), (1.5, 2234), (1.5, 2371), (1.5, 2628), (1.5, 2502), (1.5, 2177), (1.5, 1979), (1.5, 2098), (1.5, 2607), (1.5, 2146), (1.5, 2460), (1.5, 2191), (1.5, 1392), (1.5, 1794), (1.5, 2546), (1.5, 2030), (1.5, 2596), (1.5, 2564), (1.5, 1596), (1.5, 2360), (1.5, 2537), (1.5, 1790), (1.5, 2471), (1.5, 2589), (1.5, 2652), (1.5, 2095), (1.5, 1783), (1.5, 2597), (1.5, 2022), (1.5, 2470), (1.5, 2532), (1.5, 2465), (1.5, 1600), (1.5, 1919), (1.5, 2484), (1.5, 2386), (1.5, 2099), (1.5, 2420), (1.5, 2408), (1.5, 2592), (1.5, 2576), (1.5, 2389), (1.5, 2549), (1.5, 2632), (1.5, 2076), (1.5, 2339), (1.5, 1885), (1.5, 2349), (1.5, 2457), (1.5, 2132), (1.5, 2222), (1.5, 2288), (1.5, 1779), (1.5, 2033), (1.5, 2091), (1.5, 1690), (1.5, 2527), (1.5, 1696), (1.5, 2042), (1.5, 2329), (1.5, 2577), (1.5, 2006), (1.5, 1290), (1.5, 2483), (1.5, 2233), (1.5, 2105), (1.5, 2540), (1.5, 2587), (1.5, 2150), (1.5, 2147), (1.5, 2583), (1.5, 2003), (1.5, 1691), (1.5, 2297), (1.5, 2428), (1.5, 2542), (1.5, 2634), (1.5, 2322), (1.5, 1911), (1.5, 2503), (1.5, 2197), (1.5, 2110), (1.5, 1808), (1.5, 2569), (1.5, 2557), (1.5, 2529), (1.5, 2325), (1.5, 2205), (1.5, 2185), (1.5, 1812), (1.5, 1976), (1.5, 2238), (1.5, 1687), (0.625, 2604), (0.5, 2648), (0.5, 2601), (0.5, 2585), (0.5, 2643), (0.375, 2578), (0.375, 2614), (0.375, 2659), (0.375, 2645), (0.375, 2626), (0.375, 2633), (0.375, 2568), (0.375, 2654), (0.375, 2586), (0.25, 2638)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 2019
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1982
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1781
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 997
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2612
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 24]
[Computing fitness]
[(1.5, 2158), (1.5, 2677), (1.5, 2104), (1.5, 1900), (1.5, 2140), (1.5, 2007), (1.5, 2596), (1.5, 2665), (1.5, 2494), (1.5, 2644), (1.5, 2127), (1.5, 2224), (1.5, 2742), (1.5, 2126), (1.5, 2372), (1.5, 2192), (1.5, 2675), (1.5, 1602), (1.5, 2716), (1.5, 2707), (1.5, 2671), (1.5, 2203), (1.5, 2119), (1.5, 1499), (1.5, 2680), (1.5, 2657), (1.5, 2466), (1.5, 2582), (1.5, 2672), (1.5, 2085), (1.5, 2227), (1.5, 2311), (1.5, 2701), (1.5, 2472), (1.5, 2554), (1.5, 2736), (1.5, 2316), (1.5, 2046), (1.5, 2004), (1.5, 1253), (1.5, 2364), (1.5, 2269), (1.5, 1496), (1.5, 1992), (1.5, 2690), (1.5, 1883), (1.5, 2196), (1.5, 2669), (1.5, 2603), (1.5, 2621), (1.5, 2098), (1.5, 2460), (1.5, 2009), (1.5, 1781), (1.5, 2691), (1.5, 1490), (1.5, 2693), (1.5, 2525), (1.5, 2193), (1.5, 2591), (1.5, 2294), (1.5, 1989), (1.5, 2151), (1.5, 2566), (1.5, 2709), (1.5, 2664), (1.5, 2462), (1.5, 2425), (1.5, 2704), (1.5, 2666), (1.5, 2692), (1.5, 2264), (1.5, 1915), (1.5, 2662), (1.5, 2041), (1.5, 2615), (1.5, 1600), (1.5, 2157), (1.5, 2179), (1.5, 2211), (1.5, 1794), (1.5, 2640), (1.5, 2573), (1.5, 2467), (1.5, 1695), (1.5, 2511), (1.5, 2156), (1.5, 2740), (1.5, 2471), (1.5, 1596), (1.5, 2161), (1.5, 2191), (1.5, 1790), (1.5, 1893), (1.5, 2501), (1.5, 2599), (1.5, 2630), (1.5, 2616), (1.5, 2313), (1.5, 2427), (1.5, 1384), (1.5, 2496), (1.5, 2231), (1.5, 1803), (1.5, 2652), (1.5, 2546), (1.5, 2609), (1.5, 2531), (1.5, 2688), (1.5, 2523), (1.5, 2751), (1.5, 2200), (1.5, 2663), (1.5, 2667), (1.5, 2303), (1.5, 2234), (1.5, 2468), (1.5, 2027), (1.5, 2721), (1.5, 2681), (1.5, 2100), (1.5, 2223), (1.5, 2419), (1.5, 1590), (1.5, 894), (1.5, 2514), (1.5, 2575), (1.5, 1591), (1.5, 2177), (1.5, 2070), (1.5, 2130), (1.5, 2029), (1.5, 1923), (1.5, 2522), (1.5, 2702), (1.5, 2335), (1.5, 2022), (1.5, 2426), (1.5, 1995), (1.5, 1914), (1.5, 2689), (1.5, 2038), (1.5, 2319), (1.5, 2463), (1.5, 2232), (1.5, 2449), (1.5, 997), (1.5, 2415), (1.5, 2636), (1.5, 1391), (1.5, 2658), (1.5, 2588), (1.5, 1909), (1.5, 2298), (1.5, 2153), (1.5, 2114), (1.5, 1925), (1.5, 2360), (1.5, 2618), (1.5, 1994), (1.5, 2553), (1.5, 1805), (1.5, 2734), (1.5, 2478), (1.5, 2482), (1.5, 2730), (1.5, 2752), (1.5, 2418), (1.5, 2512), (1.5, 1604), (1.5, 2146), (1.5, 2165), (1.5, 2385), (1.5, 1977), (1.5, 2199), (1.5, 2696), (1.5, 2572), (1.5, 2502), (1.5, 2107), (1.5, 2379), (1.5, 2610), (1.5, 2353), (1.5, 2698), (1.5, 1878), (1.5, 2162), (1.5, 1891), (1.5, 2236), (1.5, 2152), (1.5, 2590), (1.5, 2421), (1.5, 2396), (1.5, 2629), (1.5, 1905), (1.5, 2749), (1.5, 2694), (1.5, 2145), (1.5, 2519), (1.5, 2149), (1.5, 2144), (1.5, 2708), (1.5, 2176), (1.5, 2473), (1.5, 2718), (1.5, 2656), (1.5, 1686), (1.5, 2559), (1.5, 1387), (1.5, 2291), (1.5, 2741), (1.5, 2122), (1.5, 2295), (1.5, 2376), (1.5, 2096), (1.5, 2461), (1.5, 2166), (1.5, 2589), (1.5, 2095), (1.5, 1991), (1.5, 2650), (1.5, 2655), (1.5, 2543), (1.5, 1879), (1.5, 2218), (1.5, 2244), (1.5, 2388), (1.5, 1703), (1.5, 2735), (1.5, 1389), (1.5, 2607), (1.5, 1198), (1.5, 1913), (1.5, 2416), (1.5, 2727), (1.5, 2479), (1.5, 2287), (1.5, 2646), (1.5, 2117), (1.5, 2220), (1.5, 2481), (1.5, 2534), (1.5, 2611), (1.5, 2254), (1.5, 2328), (1.5, 1982), (1.5, 2706), (1.5, 2108), (1.5, 1927), (1.5, 1296), (1.5, 1682), (1.5, 2103), (1.5, 1912), (1.5, 2699), (1.5, 2700), (1.5, 2371), (1.5, 2188), (1.5, 2183), (1.5, 2171), (1.5, 1888), (1.5, 2013), (1.5, 2180), (1.5, 2660), (1.5, 1892), (1.5, 1692), (1.5, 1702), (1.5, 1704), (1.5, 2617), (1.5, 2447), (1.5, 1783), (1.5, 2570), (1.5, 2030), (1.5, 2676), (1.5, 2101), (1.5, 2547), (1.5, 2628), (1.5, 2336), (1.5, 2712), (1.5, 1787), (1.5, 1392), (1.5, 2215), (1.5, 2697), (1.5, 2564), (1.5, 2395), (1.5, 2673), (1.5, 2436), (1.5, 2452), (1.5, 1698), (1.5, 2434), (1.5, 2732), (1.5, 2433), (1.5, 1978), (1.5, 2746), (1.5, 2653), (1.5, 2302), (1.5, 2019), (1.5, 2508), (1.5, 2255), (1.5, 1685), (1.5, 2417), (1.5, 2470), (1.5, 2532), (1.5, 1806), (1.5, 2387), (1.5, 2574), (1.5, 2490), (1.5, 52), (1.5, 2485), (1.5, 2597), (1.5, 2729), (1.5, 2504), (1.5, 1597), (1.5, 1492), (1.5, 2284), (1.5, 2225), (1.5, 2237), (1.5, 1807), (1.5, 2602), (1.5, 2446), (1.5, 2624), (1.5, 2455), (1.5, 2686), (1.5, 2748), (1.5, 2308), (1.5, 2703), (1.5, 2312), (1.5, 1975), (1.5, 2089), (1.5, 1895), (1.5, 2315), (1.5, 2552), (1.5, 2524), (1.5, 2112), (1.5, 2720), (1.5, 1595), (1.5, 2304), (1.5, 2275), (1.5, 2528), (1.5, 2739), (1.5, 1926), (1.5, 2118), (1.5, 2195), (1.5, 2465), (1.5, 2391), (1.5, 2286), (1.5, 2115), (1.5, 2537), (1.5, 2509), (1.5, 1683), (1.5, 2120), (1.5, 2719), (1.5, 2641), (1.5, 2639), (1.5, 1800), (1.5, 2174), (1.5, 2431), (1.5, 2622), (1.5, 2320), (1.5, 2743), (1.5, 2580), (1.5, 2538), (1.5, 2551), (1.5, 2261), (1.5, 2620), (1.5, 2595), (1.5, 2012), (1.5, 2214), (1.5, 2252), (1.5, 2324), (1.5, 2079), (1.5, 2267), (1.5, 2187), (1.5, 2593), (1.5, 2521), (1.5, 2695), (1.5, 2271), (1.5, 1997), (1.5, 2239), (1.5, 2744), (1.5, 2668), (1.5, 2725), (1.5, 2612), (1.5, 1699), (1.5, 1875), (1.5, 2619), (1.5, 2605), (1.5, 1785), (1.5, 2382), (1.5, 1979), (1.5, 2683), (0.625, 2685), (0.625, 2737), (0.625, 2722), (0.625, 2723), (0.5, 2711), (0.5, 2714), (0.375, 2678), (0.375, 2705), (0.375, 2747), (0.375, 2731), (0.375, 2717), (0.375, 2738)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 2158
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2677
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2104
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1900
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2140
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`5`#`#`x`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 5 x) x) 1))
 nr_nodes: 8]
[Generation 25]
[Computing fitness]
[(1.5, 2468), (1.5, 2508), (1.5, 2759), (1.5, 2446), (1.5, 2732), (1.5, 2433), (1.5, 2700), (1.5, 2022), (1.5, 1389), (1.5, 2752), (1.5, 2395), (1.5, 2653), (1.5, 2696), (1.5, 2122), (1.5, 2485), (1.5, 1597), (1.5, 2473), (1.5, 1492), (1.5, 2224), (1.5, 2294), (1.5, 2152), (1.5, 2183), (1.5, 2704), (1.5, 1590), (1.5, 2234), (1.5, 2815), (1.5, 1878), (1.5, 2748), (1.5, 2694), (1.5, 2385), (1.5, 2534), (1.5, 2095), (1.5, 2114), (1.5, 2813), (1.5, 2466), (1.5, 2494), (1.5, 2692), (1.5, 1702), (1.5, 2192), (1.5, 2316), (1.5, 2816), (1.5, 1806), (1.5, 1698), (1.5, 1978), (1.5, 2447), (1.5, 2636), (1.5, 2787), (1.5, 2677), (1.5, 1927), (1.5, 1253), (1.5, 2806), (1.5, 2319), (1.5, 2829), (1.5, 2671), (1.5, 1923), (1.5, 2801), (1.5, 2554), (1.5, 2690), (1.5, 2372), (1.5, 2525), (1.5, 2689), (1.5, 2825), (1.5, 2523), (1.5, 2101), (1.5, 2038), (1.5, 2107), (1.5, 2699), (1.5, 2255), (1.5, 2754), (1.5, 2455), (1.5, 1913), (1.5, 2835), (1.5, 2313), (1.5, 2328), (1.5, 2308), (1.5, 2753), (1.5, 2833), (1.5, 2180), (1.5, 2570), (1.5, 1909), (1.5, 2030), (1.5, 2100), (1.5, 2742), (1.5, 1977), (1.5, 2211), (1.5, 1794), (1.5, 2336), (1.5, 2767), (1.5, 2783), (1.5, 1496), (1.5, 2462), (1.5, 1912), (1.5, 2146), (1.5, 2591), (1.5, 2140), (1.5, 2610), (1.5, 1392), (1.5, 2007), (1.5, 2218), (1.5, 1695), (1.5, 2831), (1.5, 2706), (1.5, 2755), (1.5, 1991), (1.5, 2655), (1.5, 2191), (1.5, 2803), (1.5, 2673), (1.5, 2688), (1.5, 2749), (1.5, 2496), (1.5, 2644), (1.5, 2244), (1.5, 894), (1.5, 2203), (1.5, 2200), (1.5, 1490), (1.5, 2254), (1.5, 2799), (1.5, 1989), (1.5, 2599), (1.5, 2070), (1.5, 2417), (1.5, 2823), (1.5, 2662), (1.5, 2775), (1.5, 2103), (1.5, 2416), (1.5, 2127), (1.5, 2098), (1.5, 2177), (1.5, 2264), (1.5, 2756), (1.5, 2482), (1.5, 2657), (1.5, 2379), (1.5, 2701), (1.5, 2156), (1.5, 2693), (1.5, 1685), (1.5, 2630), (1.5, 2628), (1.5, 2820), (1.5, 2532), (1.5, 2371), (1.5, 2572), (1.5, 2176), (1.5, 2126), (1.5, 2295), (1.5, 2153), (1.5, 2740), (1.5, 1787), (1.5, 1892), (1.5, 2553), (1.5, 2607), (1.5, 1790), (1.5, 2421), (1.5, 2741), (1.5, 2470), (1.5, 2269), (1.5, 2085), (1.5, 2046), (1.5, 2027), (1.5, 2467), (1.5, 2237), (1.5, 2800), (1.5, 2335), (1.5, 1596), (1.5, 2802), (1.5, 2501), (1.5, 2223), (1.5, 2666), (1.5, 2291), (1.5, 2564), (1.5, 1807), (1.5, 2471), (1.5, 2546), (1.5, 2721), (1.5, 2388), (1.5, 1888), (1.5, 2512), (1.5, 1296), (1.5, 2490), (1.5, 2104), (1.5, 2746), (1.5, 2790), (1.5, 2514), (1.5, 2220), (1.5, 2574), (1.5, 2130), (1.5, 2041), (1.5, 2029), (1.5, 1198), (1.5, 1893), (1.5, 2311), (1.5, 2543), (1.5, 2727), (1.5, 2841), (1.5, 2215), (1.5, 2504), (1.5, 2461), (1.5, 2844), (1.5, 1600), (1.5, 2818), (1.5, 2708), (1.5, 2019), (1.5, 2231), (1.5, 1905), (1.5, 2712), (1.5, 2460), (1.5, 2522), (1.5, 2840), (1.5, 2772), (1.5, 2617), (1.5, 1900), (1.5, 2663), (1.5, 2832), (1.5, 2819), (1.5, 1915), (1.5, 2425), (1.5, 2573), (1.5, 2004), (1.5, 2376), (1.5, 2531), (1.5, 1499), (1.5, 2232), (1.5, 2735), (1.5, 2161), (1.5, 2590), (1.5, 2676), (1.5, 2629), (1.5, 2621), (1.5, 2729), (1.5, 2415), (1.5, 2013), (1.5, 2582), (1.5, 2709), (1.5, 2144), (1.5, 2664), (1.5, 1891), (1.5, 2675), (1.5, 2302), (1.5, 2660), (1.5, 2547), (1.5, 1602), (1.5, 2171), (1.5, 1604), (1.5, 2751), (1.5, 1384), (1.5, 2396), (1.5, 2303), (1.5, 2196), (1.5, 2119), (1.5, 1591), (1.5, 2588), (1.5, 2188), (1.5, 2575), (1.5, 2387), (1.5, 2436), (1.5, 2611), (1.5, 2615), (1.5, 2770), (1.5, 1994), (1.5, 2798), (1.5, 2519), (1.5, 2426), (1.5, 2603), (1.5, 2360), (1.5, 2449), (1.5, 2418), (1.5, 2236), (1.5, 2734), (1.5, 1992), (1.5, 2602), (1.5, 2785), (1.5, 2151), (1.5, 2842), (1.5, 1805), (1.5, 2179), (1.5, 2730), (1.5, 2157), (1.5, 2650), (1.5, 2797), (1.5, 1995), (1.5, 2845), (1.5, 2826), (1.5, 2298), (1.5, 2774), (1.5, 2511), (1.5, 2809), (1.5, 2793), (1.5, 2193), (1.5, 2165), (1.5, 2808), (1.5, 2199), (1.5, 2652), (1.5, 2162), (1.5, 2646), (1.5, 1803), (1.5, 2149), (1.5, 1783), (1.5, 2658), (1.5, 2766), (1.5, 2672), (1.5, 1975), (1.5, 997), (1.5, 52), (1.5, 2596), (1.5, 2824), (1.5, 2479), (1.5, 2703), (1.5, 2616), (1.5, 1391), (1.5, 2566), (1.5, 2284), (1.5, 1982), (1.5, 2353), (1.5, 2707), (1.5, 1879), (1.5, 1704), (1.5, 1914), (1.5, 2782), (1.5, 2597), (1.5, 1781), (1.5, 2769), (1.5, 2667), (1.5, 2718), (1.5, 2009), (1.5, 2686), (1.5, 2618), (1.5, 2795), (1.5, 2434), (1.5, 2757), (1.5, 2805), (1.5, 2698), (1.5, 2481), (1.5, 2843), (1.5, 2807), (1.5, 2624), (1.5, 1883), (1.5, 1682), (1.5, 1703), (1.5, 2502), (1.5, 2472), (1.5, 1692), (1.5, 2419), (1.5, 2427), (1.5, 2778), (1.5, 2640), (1.5, 2716), (1.5, 2789), (1.5, 2794), (1.5, 2463), (1.5, 2776), (1.5, 2166), (1.5, 2227), (1.5, 2665), (1.5, 2691), (1.5, 2559), (1.5, 2478), (1.5, 2117), (1.5, 1387), (1.5, 2312), (1.5, 2609), (1.5, 2452), (1.5, 2096), (1.5, 1686), (1.5, 2702), (1.5, 2158), (1.5, 2108), (1.5, 2225), (1.5, 2697), (1.5, 2287), (1.5, 2364), (1.5, 2784), (1.5, 2736), (1.5, 2680), (1.5, 2145), (1.5, 2669), (1.5, 2656), (1.5, 2847), (1.5, 1925), (1.5, 2681), (1.5, 2827), (1.5, 2792), (1.5, 2788), (1.5, 2589), (0.875, 2761), (0.875, 2837), (0.875, 2765), (0.875, 2812), (0.75, 2810), (0.5, 2780), (0.5, 2839), (0.375, 2817), (0.375, 2762), (0.375, 2777), (0.375, 2773), (0.375, 2763), (0.375, 2822)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 2468
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2508
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2759
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2446
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2732
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 26]
[Computing fitness]
[(1.5, 2657), (1.5, 2748), (1.5, 2940), (1.5, 2004), (1.5, 2607), (1.5, 2919), (1.5, 2415), (1.5, 2196), (1.5, 2759), (1.5, 2790), (1.5, 2727), (1.5, 2038), (1.5, 2772), (1.5, 1490), (1.5, 1995), (1.5, 2156), (1.5, 2892), (1.5, 2874), (1.5, 2946), (1.5, 2734), (1.5, 2041), (1.5, 2188), (1.5, 1496), (1.5, 2650), (1.5, 2943), (1.5, 2291), (1.5, 2730), (1.5, 2809), (1.5, 2602), (1.5, 2672), (1.5, 2829), (1.5, 1803), (1.5, 1602), (1.5, 2388), (1.5, 1787), (1.5, 2926), (1.5, 2244), (1.5, 2671), (1.5, 2793), (1.5, 2617), (1.5, 2596), (1.5, 2532), (1.5, 2308), (1.5, 2783), (1.5, 1794), (1.5, 2466), (1.5, 2735), (1.5, 2653), (1.5, 2376), (1.5, 1913), (1.5, 2931), (1.5, 2191), (1.5, 1879), (1.5, 2740), (1.5, 1296), (1.5, 2889), (1.5, 2371), (1.5, 2479), (1.5, 1695), (1.5, 2766), (1.5, 2615), (1.5, 2886), (1.5, 2303), (1.5, 2418), (1.5, 2844), (1.5, 1994), (1.5, 2468), (1.5, 2436), (1.5, 1600), (1.5, 2316), (1.5, 2862), (1.5, 2103), (1.5, 2433), (1.5, 2599), (1.5, 1805), (1.5, 2660), (1.5, 2907), (1.5, 2689), (1.5, 2749), (1.5, 2904), (1.5, 2101), (1.5, 1807), (1.5, 2704), (1.5, 2712), (1.5, 2449), (1.5, 1783), (1.5, 2171), (1.5, 2215), (1.5, 2294), (1.5, 1912), (1.5, 1905), (1.5, 1590), (1.5, 2845), (1.5, 2566), (1.5, 2751), (1.5, 2729), (1.5, 2927), (1.5, 2553), (1.5, 2319), (1.5, 2921), (1.5, 2870), (1.5, 2180), (1.5, 1900), (1.5, 2372), (1.5, 2590), (1.5, 2692), (1.5, 2501), (1.5, 894), (1.5, 2157), (1.5, 2395), (1.5, 2007), (1.5, 2755), (1.5, 2787), (1.5, 2868), (1.5, 2460), (1.5, 2421), (1.5, 1888), (1.5, 1989), (1.5, 2798), (1.5, 2396), (1.5, 2232), (1.5, 2835), (1.5, 2912), (1.5, 2908), (1.5, 2864), (1.5, 2385), (1.5, 2119), (1.5, 2741), (1.5, 2663), (1.5, 2574), (1.5, 2127), (1.5, 2100), (1.5, 2923), (1.5, 1892), (1.5, 2029), (1.5, 2224), (1.5, 2918), (1.5, 2597), (1.5, 2218), (1.5, 2199), (1.5, 2753), (1.5, 2591), (1.5, 2161), (1.5, 2588), (1.5, 2146), (1.5, 1781), (1.5, 2894), (1.5, 2840), (1.5, 2616), (1.5, 2298), (1.5, 2823), (1.5, 2504), (1.5, 1685), (1.5, 2855), (1.5, 2769), (1.5, 2767), (1.5, 2482), (1.5, 2302), (1.5, 2237), (1.5, 2813), (1.5, 1392), (1.5, 2799), (1.5, 2848), (1.5, 1914), (1.5, 2522), (1.5, 1878), (1.5, 2832), (1.5, 2871), (1.5, 2231), (1.5, 2703), (1.5, 2706), (1.5, 1492), (1.5, 2732), (1.5, 2824), (1.5, 52), (1.5, 2183), (1.5, 1591), (1.5, 2531), (1.5, 2801), (1.5, 2677), (1.5, 2470), (1.5, 2746), (1.5, 2162), (1.5, 2891), (1.5, 1499), (1.5, 2911), (1.5, 2876), (1.5, 2628), (1.5, 2878), (1.5, 2863), (1.5, 2572), (1.5, 2467), (1.5, 2857), (1.5, 2808), (1.5, 2511), (1.5, 2514), (1.5, 2662), (1.5, 2644), (1.5, 2264), (1.5, 1596), (1.5, 2708), (1.5, 2417), (1.5, 2311), (1.5, 2284), (1.5, 2446), (1.5, 2176), (1.5, 2471), (1.5, 2523), (1.5, 2884), (1.5, 2573), (1.5, 1198), (1.5, 2673), (1.5, 2897), (1.5, 2920), (1.5, 2603), (1.5, 2867), (1.5, 1982), (1.5, 2655), (1.5, 2694), (1.5, 2818), (1.5, 2179), (1.5, 2860), (1.5, 2833), (1.5, 1384), (1.5, 2379), (1.5, 2775), (1.5, 2688), (1.5, 2525), (1.5, 2564), (1.5, 1909), (1.5, 2512), (1.5, 2107), (1.5, 2866), (1.5, 2070), (1.5, 2611), (1.5, 2200), (1.5, 2816), (1.5, 2756), (1.5, 2387), (1.5, 2856), (1.5, 1702), (1.5, 2707), (1.5, 2485), (1.5, 2554), (1.5, 2917), (1.5, 2313), (1.5, 2914), (1.5, 2255), (1.5, 2933), (1.5, 1975), (1.5, 1977), (1.5, 2785), (1.5, 2699), (1.5, 1915), (1.5, 2269), (1.5, 2461), (1.5, 1893), (1.5, 2030), (1.5, 2508), (1.5, 2842), (1.5, 2754), (1.5, 2013), (1.5, 2770), (1.5, 2696), (1.5, 2019), (1.5, 2353), (1.5, 1891), (1.5, 2490), (1.5, 2543), (1.5, 2095), (1.5, 2925), (1.5, 2841), (1.5, 2676), (1.5, 2575), (1.5, 2935), (1.5, 2890), (1.5, 2519), (1.5, 2165), (1.5, 2455), (1.5, 2425), (1.5, 2629), (1.5, 2852), (1.5, 2881), (1.5, 2426), (1.5, 2447), (1.5, 2831), (1.5, 2236), (1.5, 2122), (1.5, 2152), (1.5, 2701), (1.5, 2944), (1.5, 2690), (1.5, 2494), (1.5, 1991), (1.5, 1704), (1.5, 2666), (1.5, 2803), (1.5, 2774), (1.5, 1604), (1.5, 1597), (1.5, 2085), (1.5, 2825), (1.5, 2664), (1.5, 1923), (1.5, 2826), (1.5, 2820), (1.5, 2658), (1.5, 2220), (1.5, 2104), (1.5, 2652), (1.5, 2901), (1.5, 2360), (1.5, 2546), (1.5, 2782), (1.5, 2936), (1.5, 1391), (1.5, 2046), (1.5, 2610), (1.5, 2254), (1.5, 2819), (1.5, 2797), (1.5, 2234), (1.5, 2806), (1.5, 2151), (1.5, 2849), (1.5, 2130), (1.5, 2570), (1.5, 2902), (1.5, 2895), (1.5, 2861), (1.5, 2140), (1.5, 2177), (1.5, 2893), (1.5, 2630), (1.5, 2752), (1.5, 1992), (1.5, 2336), (1.5, 2942), (1.5, 2416), (1.5, 2896), (1.5, 1806), (1.5, 2621), (1.5, 2022), (1.5, 2149), (1.5, 2144), (1.5, 997), (1.5, 2802), (1.5, 2114), (1.5, 2295), (1.5, 2709), (1.5, 2547), (1.5, 2742), (1.5, 2223), (1.5, 1790), (1.5, 2328), (1.5, 2850), (1.5, 1698), (1.5, 2473), (1.5, 2945), (1.5, 2496), (1.5, 2883), (1.5, 2815), (1.5, 1389), (1.5, 2193), (1.5, 2211), (1.5, 2905), (1.5, 2693), (1.5, 2192), (1.5, 2582), (1.5, 2879), (1.5, 2534), (1.5, 2098), (1.5, 1253), (1.5, 2900), (1.5, 2462), (1.5, 2675), (1.5, 2721), (1.5, 2947), (1.5, 2929), (1.5, 2126), (1.5, 2027), (1.5, 2153), (1.5, 2203), (1.5, 2335), (1.5, 2636), (1.5, 2800), (1.5, 2877), (1.5, 1927), (1.5, 1978), (1.5, 2700), (1.5, 2646), (0.875, 2899), (0.625, 2932), (0.5, 2938), (0.5, 2854), (0.375, 2888), (0.375, 2858), (0.375, 2873), (0.375, 2915), (0.375, 2909)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 2657
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2748
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2940
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2004
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2607
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 27]
[Computing fitness]
[(1.5, 1702), (1.5, 2808), (1.5, 2746), (1.5, 3043), (1.5, 2572), (1.5, 3037), (1.5, 2740), (1.5, 2732), (1.5, 2376), (1.5, 2662), (1.5, 2504), (1.5, 2831), (1.5, 2191), (1.5, 2514), (1.5, 2607), (1.5, 2755), (1.5, 2183), (1.5, 1913), (1.5, 2919), (1.5, 2433), (1.5, 2664), (1.5, 2447), (1.5, 2546), (1.5, 3004), (1.5, 2856), (1.5, 2696), (1.5, 3041), (1.5, 2104), (1.5, 1492), (1.5, 2418), (1.5, 1597), (1.5, 3018), (1.5, 2653), (1.5, 2617), (1.5, 2471), (1.5, 2019), (1.5, 2666), (1.5, 2770), (1.5, 2785), (1.5, 2041), (1.5, 2657), (1.5, 2751), (1.5, 2890), (1.5, 1995), (1.5, 1296), (1.5, 2813), (1.5, 2512), (1.5, 2596), (1.5, 1915), (1.5, 1392), (1.5, 1975), (1.5, 3044), (1.5, 1391), (1.5, 3016), (1.5, 2353), (1.5, 2892), (1.5, 1900), (1.5, 3046), (1.5, 1923), (1.5, 2677), (1.5, 2224), (1.5, 2255), (1.5, 2236), (1.5, 2908), (1.5, 1805), (1.5, 3011), (1.5, 2689), (1.5, 2997), (1.5, 2122), (1.5, 2690), (1.5, 2870), (1.5, 2907), (1.5, 2455), (1.5, 2818), (1.5, 2611), (1.5, 2188), (1.5, 2468), (1.5, 2894), (1.5, 2311), (1.5, 2844), (1.5, 2798), (1.5, 2234), (1.5, 3005), (1.5, 2395), (1.5, 2103), (1.5, 2911), (1.5, 2254), (1.5, 2878), (1.5, 2848), (1.5, 2046), (1.5, 1384), (1.5, 2660), (1.5, 2070), (1.5, 2171), (1.5, 2840), (1.5, 2927), (1.5, 2852), (1.5, 2387), (1.5, 2769), (1.5, 1685), (1.5, 2030), (1.5, 2573), (1.5, 2152), (1.5, 2841), (1.5, 2119), (1.5, 2729), (1.5, 2688), (1.5, 2165), (1.5, 2308), (1.5, 1892), (1.5, 3025), (1.5, 2095), (1.5, 2923), (1.5, 2543), (1.5, 2951), (1.5, 2180), (1.5, 2917), (1.5, 2029), (1.5, 2969), (1.5, 2886), (1.5, 2313), (1.5, 2490), (1.5, 2868), (1.5, 2825), (1.5, 1888), (1.5, 2766), (1.5, 2824), (1.5, 2532), (1.5, 2972), (1.5, 2436), (1.5, 2218), (1.5, 2396), (1.5, 2085), (1.5, 2316), (1.5, 2603), (1.5, 2599), (1.5, 2371), (1.5, 2956), (1.5, 2806), (1.5, 1914), (1.5, 2889), (1.5, 2671), (1.5, 2842), (1.5, 2797), (1.5, 1198), (1.5, 2943), (1.5, 2564), (1.5, 2501), (1.5, 2013), (1.5, 2727), (1.5, 2485), (1.5, 2360), (1.5, 3030), (1.5, 2615), (1.5, 2590), (1.5, 2655), (1.5, 2826), (1.5, 2200), (1.5, 2989), (1.5, 1912), (1.5, 2832), (1.5, 2801), (1.5, 2991), (1.5, 894), (1.5, 3036), (1.5, 2987), (1.5, 2891), (1.5, 3000), (1.5, 2220), (1.5, 2460), (1.5, 1982), (1.5, 2525), (1.5, 2803), (1.5, 2819), (1.5, 2479), (1.5, 1879), (1.5, 2522), (1.5, 2531), (1.5, 2425), (1.5, 2981), (1.5, 52), (1.5, 2494), (1.5, 2215), (1.5, 2415), (1.5, 2855), (1.5, 3022), (1.5, 2652), (1.5, 1803), (1.5, 2264), (1.5, 2931), (1.5, 2302), (1.5, 2867), (1.5, 1893), (1.5, 3029), (1.5, 2944), (1.5, 2179), (1.5, 2388), (1.5, 2950), (1.5, 2816), (1.5, 2591), (1.5, 2914), (1.5, 2298), (1.5, 2703), (1.5, 3023), (1.5, 3033), (1.5, 2127), (1.5, 2100), (1.5, 2897), (1.5, 2372), (1.5, 2787), (1.5, 1909), (1.5, 2756), (1.5, 2767), (1.5, 2881), (1.5, 1891), (1.5, 2965), (1.5, 2467), (1.5, 1991), (1.5, 2269), (1.5, 1604), (1.5, 3028), (1.5, 2759), (1.5, 2523), (1.5, 2588), (1.5, 2966), (1.5, 2783), (1.5, 2860), (1.5, 2970), (1.5, 1591), (1.5, 2446), (1.5, 1787), (1.5, 2107), (1.5, 2775), (1.5, 2799), (1.5, 1994), (1.5, 2708), (1.5, 2157), (1.5, 2857), (1.5, 2672), (1.5, 2933), (1.5, 1878), (1.5, 2748), (1.5, 2421), (1.5, 2962), (1.5, 2978), (1.5, 1596), (1.5, 2960), (1.5, 2974), (1.5, 2874), (1.5, 2734), (1.5, 2146), (1.5, 2566), (1.5, 2845), (1.5, 2863), (1.5, 2904), (1.5, 1794), (1.5, 2004), (1.5, 2753), (1.5, 2774), (1.5, 2676), (1.5, 2735), (1.5, 2979), (1.5, 2629), (1.5, 2101), (1.5, 2470), (1.5, 3031), (1.5, 1490), (1.5, 2977), (1.5, 2575), (1.5, 2809), (1.5, 1602), (1.5, 3035), (1.5, 2237), (1.5, 2823), (1.5, 1977), (1.5, 3020), (1.5, 2782), (1.5, 2151), (1.5, 3017), (1.5, 2749), (1.5, 1600), (1.5, 2162), (1.5, 2663), (1.5, 2602), (1.5, 2692), (1.5, 1807), (1.5, 2616), (1.5, 1590), (1.5, 2926), (1.5, 2754), (1.5, 1496), (1.5, 2291), (1.5, 2694), (1.5, 2864), (1.5, 2940), (1.5, 2920), (1.5, 2829), (1.5, 2833), (1.5, 1783), (1.5, 2244), (1.5, 2976), (1.5, 2820), (1.5, 2461), (1.5, 2379), (1.5, 2862), (1.5, 2650), (1.5, 2231), (1.5, 2628), (1.5, 2385), (1.5, 2574), (1.5, 2994), (1.5, 2704), (1.5, 2701), (1.5, 3045), (1.5, 2793), (1.5, 2707), (1.5, 2988), (1.5, 2999), (1.5, 2156), (1.5, 2319), (1.5, 2426), (1.5, 2741), (1.5, 3002), (1.5, 2699), (1.5, 2946), (1.5, 3019), (1.5, 3010), (1.5, 2918), (1.5, 2952), (1.5, 2921), (1.5, 3021), (1.5, 3014), (1.5, 2849), (1.5, 2466), (1.5, 2658), (1.5, 2284), (1.5, 3032), (1.5, 2949), (1.5, 2901), (1.5, 2982), (1.5, 1781), (1.5, 2993), (1.5, 2835), (1.5, 1499), (1.5, 2554), (1.5, 2730), (1.5, 2553), (1.5, 2482), (1.5, 2303), (1.5, 2790), (1.5, 2712), (1.5, 2935), (1.5, 2936), (1.5, 2866), (1.5, 2508), (1.5, 2449), (1.5, 2884), (1.5, 2199), (1.5, 2706), (1.5, 2232), (1.5, 2294), (1.5, 2673), (1.5, 1695), (1.5, 2986), (1.5, 2038), (1.5, 2996), (1.5, 2958), (1.5, 2007), (1.5, 2772), (1.5, 2597), (1.5, 2959), (1.5, 2196), (1.5, 2511), (1.5, 2417), (1.5, 2871), (1.5, 3040), (1.5, 3009), (1.5, 2990), (1.5, 2876), (1.5, 2610), (1.5, 2925), (1.5, 1704), (1.5, 3038), (1.5, 2519), (1.5, 2967), (1.5, 2644), (1.5, 2983), (1.5, 1905), (1.5, 1989), (1.5, 2912), (1.5, 2176), (1.5, 3026), (1.5, 2161), (1.5, 2964), (0.875, 2985), (0.5, 3007), (0.5, 2954), (0.375, 3013), (0.375, 2963), (0.375, 2968)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 1702
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2808
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2746
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 3043
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2572
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 28]
[Computing fitness]
[(1.5, 3041), (1.5, 2974), (1.5, 2755), (1.5, 2825), (1.5, 1392), (1.5, 2972), (1.5, 2989), (1.5, 2379), (1.5, 3000), (1.5, 3107), (1.5, 2826), (1.5, 3055), (1.5, 2751), (1.5, 2467), (1.5, 2862), (1.5, 1794), (1.5, 2919), (1.5, 2191), (1.5, 52), (1.5, 2525), (1.5, 2808), (1.5, 3004), (1.5, 3017), (1.5, 2707), (1.5, 2823), (1.5, 2313), (1.5, 2933), (1.5, 3037), (1.5, 2782), (1.5, 2767), (1.5, 2095), (1.5, 1914), (1.5, 2676), (1.5, 2740), (1.5, 2774), (1.5, 2797), (1.5, 2151), (1.5, 3031), (1.5, 2977), (1.5, 2727), (1.5, 3054), (1.5, 2829), (1.5, 3094), (1.5, 2754), (1.5, 3123), (1.5, 2180), (1.5, 2119), (1.5, 2867), (1.5, 2316), (1.5, 2831), (1.5, 3028), (1.5, 3084), (1.5, 2298), (1.5, 2785), (1.5, 2460), (1.5, 2215), (1.5, 3096), (1.5, 2628), (1.5, 2688), (1.5, 2818), (1.5, 3132), (1.5, 2943), (1.5, 1296), (1.5, 2914), (1.5, 1915), (1.5, 2308), (1.5, 3033), (1.5, 2923), (1.5, 2591), (1.5, 1591), (1.5, 2396), (1.5, 2708), (1.5, 1807), (1.5, 2920), (1.5, 3002), (1.5, 3022), (1.5, 2855), (1.5, 2165), (1.5, 2657), (1.5, 2311), (1.5, 2157), (1.5, 2966), (1.5, 2046), (1.5, 2729), (1.5, 3071), (1.5, 2162), (1.5, 1891), (1.5, 1783), (1.5, 2978), (1.5, 2766), (1.5, 2447), (1.5, 3050), (1.5, 2662), (1.5, 2793), (1.5, 2988), (1.5, 1490), (1.5, 2979), (1.5, 2522), (1.5, 2886), (1.5, 3137), (1.5, 2479), (1.5, 3119), (1.5, 2183), (1.5, 2690), (1.5, 2927), (1.5, 2734), (1.5, 1803), (1.5, 1909), (1.5, 2395), (1.5, 2244), (1.5, 3047), (1.5, 1888), (1.5, 3136), (1.5, 2234), (1.5, 2672), (1.5, 2856), (1.5, 3115), (1.5, 3075), (1.5, 2490), (1.5, 2501), (1.5, 2070), (1.5, 2599), (1.5, 2629), (1.5, 3048), (1.5, 3036), (1.5, 2907), (1.5, 2485), (1.5, 2951), (1.5, 2607), (1.5, 1597), (1.5, 2848), (1.5, 2470), (1.5, 2663), (1.5, 1912), (1.5, 2813), (1.5, 3116), (1.5, 2041), (1.5, 2841), (1.5, 2236), (1.5, 2611), (1.5, 1702), (1.5, 3111), (1.5, 1900), (1.5, 3043), (1.5, 1995), (1.5, 2220), (1.5, 1982), (1.5, 2832), (1.5, 2532), (1.5, 3131), (1.5, 2013), (1.5, 2655), (1.5, 2970), (1.5, 2254), (1.5, 2200), (1.5, 2840), (1.5, 2433), (1.5, 1913), (1.5, 3030), (1.5, 2514), (1.5, 3085), (1.5, 2864), (1.5, 2446), (1.5, 2842), (1.5, 3005), (1.5, 2085), (1.5, 2302), (1.5, 3088), (1.5, 2103), (1.5, 2030), (1.5, 3023), (1.5, 2653), (1.5, 1391), (1.5, 3057), (1.5, 2100), (1.5, 2741), (1.5, 2852), (1.5, 2824), (1.5, 3035), (1.5, 2816), (1.5, 2504), (1.5, 3129), (1.5, 2426), (1.5, 2468), (1.5, 2801), (1.5, 1977), (1.5, 3070), (1.5, 2703), (1.5, 2868), (1.5, 2171), (1.5, 2809), (1.5, 2704), (1.5, 2425), (1.5, 2421), (1.5, 2650), (1.5, 2991), (1.5, 2874), (1.5, 2029), (1.5, 2696), (1.5, 2908), (1.5, 1384), (1.5, 2231), (1.5, 2799), (1.5, 1596), (1.5, 3051), (1.5, 1991), (1.5, 2911), (1.5, 2699), (1.5, 2660), (1.5, 2188), (1.5, 1602), (1.5, 2969), (1.5, 2881), (1.5, 2940), (1.5, 3130), (1.5, 2770), (1.5, 2746), (1.5, 2997), (1.5, 2602), (1.5, 1604), (1.5, 2387), (1.5, 2104), (1.5, 2892), (1.5, 1198), (1.5, 3059), (1.5, 2319), (1.5, 1879), (1.5, 2615), (1.5, 1923), (1.5, 2735), (1.5, 2889), (1.5, 2255), (1.5, 2946), (1.5, 2179), (1.5, 3080), (1.5, 1892), (1.5, 1590), (1.5, 3072), (1.5, 2803), (1.5, 2759), (1.5, 1787), (1.5, 2891), (1.5, 3073), (1.5, 2894), (1.5, 2572), (1.5, 2860), (1.5, 3109), (1.5, 1878), (1.5, 1600), (1.5, 2107), (1.5, 2531), (1.5, 3058), (1.5, 2269), (1.5, 2844), (1.5, 2372), (1.5, 2857), (1.5, 2956), (1.5, 3113), (1.5, 2863), (1.5, 3089), (1.5, 2588), (1.5, 2748), (1.5, 1685), (1.5, 2965), (1.5, 3100), (1.5, 2917), (1.5, 2931), (1.5, 2146), (1.5, 3121), (1.5, 3105), (1.5, 2512), (1.5, 2960), (1.5, 2753), (1.5, 2418), (1.5, 3063), (1.5, 2494), (1.5, 1492), (1.5, 2574), (1.5, 2904), (1.5, 894), (1.5, 2890), (1.5, 2897), (1.5, 1975), (1.5, 3083), (1.5, 3139), (1.5, 2546), (1.5, 2573), (1.5, 3016), (1.5, 2833), (1.5, 2692), (1.5, 2806), (1.5, 1805), (1.5, 2666), (1.5, 2455), (1.5, 2756), (1.5, 3029), (1.5, 2237), (1.5, 3078), (1.5, 3044), (1.5, 2749), (1.5, 2461), (1.5, 2122), (1.5, 2994), (1.5, 3087), (1.5, 2617), (1.5, 3046), (1.5, 3077), (1.5, 2732), (1.5, 3102), (1.5, 3066), (1.5, 3065), (1.5, 2353), (1.5, 2360), (1.5, 2156), (1.5, 2775), (1.5, 3068), (1.5, 1496), (1.5, 2004), (1.5, 2987), (1.5, 2926), (1.5, 2701), (1.5, 2769), (1.5, 3079), (1.5, 2981), (1.5, 2385), (1.5, 2819), (1.5, 3062), (1.5, 2787), (1.5, 3020), (1.5, 3140), (1.5, 2664), (1.5, 1893), (1.5, 2264), (1.5, 3114), (1.5, 2783), (1.5, 2616), (1.5, 2376), (1.5, 2371), (1.5, 1994), (1.5, 3110), (1.5, 3082), (1.5, 2845), (1.5, 2590), (1.5, 2566), (1.5, 3138), (1.5, 3045), (1.5, 2671), (1.5, 2564), (1.5, 2152), (1.5, 2999), (1.5, 3052), (1.5, 3135), (1.5, 3025), (1.5, 2694), (1.5, 2415), (1.5, 2820), (1.5, 3049), (1.5, 2652), (1.5, 2950), (1.5, 2878), (1.5, 3125), (1.5, 2798), (1.5, 3091), (1.5, 2677), (1.5, 2291), (1.5, 3141), (1.5, 2603), (1.5, 3011), (1.5, 2218), (1.5, 2596), (1.5, 3069), (1.5, 3018), (1.5, 2523), (1.5, 3086), (1.5, 2019), (1.5, 2689), (1.5, 2471), (1.5, 2870), (1.5, 2543), (1.5, 2388), (1.5, 2224), (1.5, 3067), (1.5, 2962), (1.5, 3104), (1.5, 2101), (1.5, 2944), (1.5, 2575), (1.5, 2127), (1.5, 2436), (1.5, 2976), (0.875, 3118), (0.75, 3101), (0.5, 3134), (0.5, 3061), (0.5, 3098), (0.375, 3092), (0.375, 3127), (0.375, 3124), (0.375, 3090), (0.375, 3064)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 3041
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2974
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2755
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`5`#`#`x`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 5 x) x) 1))
 nr_nodes: 8]
(CANDIDATE)[id: 2825
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1392
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 29]
[Computing fitness]
[(1.5, 1198), (1.5, 2514), (1.5, 1392), (1.5, 2617), (1.5, 2824), (1.5, 2732), (1.5, 3065), (1.5, 2956), (1.5, 2889), (1.5, 2844), (1.5, 3154), (1.5, 3163), (1.5, 3085), (1.5, 3172), (1.5, 1702), (1.5, 3174), (1.5, 1492), (1.5, 2602), (1.5, 3139), (1.5, 2162), (1.5, 2433), (1.5, 2302), (1.5, 1391), (1.5, 2100), (1.5, 1977), (1.5, 2852), (1.5, 3111), (1.5, 3000), (1.5, 2991), (1.5, 2696), (1.5, 2746), (1.5, 2978), (1.5, 2546), (1.5, 3054), (1.5, 2797), (1.5, 3132), (1.5, 2863), (1.5, 2573), (1.5, 3192), (1.5, 3129), (1.5, 894), (1.5, 2829), (1.5, 3196), (1.5, 2628), (1.5, 3022), (1.5, 1685), (1.5, 3121), (1.5, 2666), (1.5, 2151), (1.5, 2421), (1.5, 2655), (1.5, 2734), (1.5, 3107), (1.5, 2988), (1.5, 2479), (1.5, 3023), (1.5, 2234), (1.5, 2446), (1.5, 2818), (1.5, 2754), (1.5, 1995), (1.5, 2951), (1.5, 2254), (1.5, 3199), (1.5, 2512), (1.5, 2753), (1.5, 2660), (1.5, 2831), (1.5, 3005), (1.5, 2782), (1.5, 2894), (1.5, 2237), (1.5, 2316), (1.5, 2525), (1.5, 2759), (1.5, 2881), (1.5, 1596), (1.5, 2122), (1.5, 3030), (1.5, 1878), (1.5, 3048), (1.5, 2013), (1.5, 3016), (1.5, 2826), (1.5, 2974), (1.5, 2860), (1.5, 2688), (1.5, 2799), (1.5, 2599), (1.5, 2708), (1.5, 1915), (1.5, 3161), (1.5, 2244), (1.5, 2070), (1.5, 2611), (1.5, 3130), (1.5, 3178), (1.5, 2748), (1.5, 3221), (1.5, 2046), (1.5, 3137), (1.5, 3231), (1.5, 3083), (1.5, 2676), (1.5, 2179), (1.5, 2867), (1.5, 2418), (1.5, 2672), (1.5, 2704), (1.5, 3181), (1.5, 1807), (1.5, 2531), (1.5, 2972), (1.5, 3179), (1.5, 3031), (1.5, 3055), (1.5, 2298), (1.5, 2966), (1.5, 2977), (1.5, 1900), (1.5, 2862), (1.5, 3142), (1.5, 3071), (1.5, 3068), (1.5, 2522), (1.5, 2741), (1.5, 3100), (1.5, 3050), (1.5, 3063), (1.5, 2308), (1.5, 3033), (1.5, 3037), (1.5, 3187), (1.5, 2927), (1.5, 2146), (1.5, 2874), (1.5, 2774), (1.5, 1888), (1.5, 2468), (1.5, 2699), (1.5, 2755), (1.5, 2107), (1.5, 3207), (1.5, 1591), (1.5, 3116), (1.5, 2426), (1.5, 3144), (1.5, 2360), (1.5, 2650), (1.5, 2890), (1.5, 1794), (1.5, 2917), (1.5, 2785), (1.5, 2749), (1.5, 3211), (1.5, 3035), (1.5, 3123), (1.5, 2735), (1.5, 3218), (1.5, 2395), (1.5, 3072), (1.5, 2119), (1.5, 2467), (1.5, 2729), (1.5, 2920), (1.5, 2864), (1.5, 3213), (1.5, 2615), (1.5, 2183), (1.5, 2663), (1.5, 2813), (1.5, 3230), (1.5, 2220), (1.5, 2085), (1.5, 2766), (1.5, 3210), (1.5, 2379), (1.5, 2095), (1.5, 2841), (1.5, 3224), (1.5, 2690), (1.5, 3096), (1.5, 2372), (1.5, 3102), (1.5, 2891), (1.5, 2904), (1.5, 3171), (1.5, 2994), (1.5, 3113), (1.5, 3228), (1.5, 1590), (1.5, 2460), (1.5, 2856), (1.5, 2943), (1.5, 3115), (1.5, 2461), (1.5, 2662), (1.5, 2490), (1.5, 1805), (1.5, 3036), (1.5, 2740), (1.5, 3087), (1.5, 2103), (1.5, 1912), (1.5, 3044), (1.5, 2501), (1.5, 3160), (1.5, 2653), (1.5, 3058), (1.5, 2840), (1.5, 2981), (1.5, 1604), (1.5, 2707), (1.5, 2470), (1.5, 2842), (1.5, 2188), (1.5, 3201), (1.5, 1803), (1.5, 2926), (1.5, 2793), (1.5, 2997), (1.5, 2806), (1.5, 2756), (1.5, 3208), (1.5, 2255), (1.5, 1975), (1.5, 3182), (1.5, 2494), (1.5, 3047), (1.5, 2855), (1.5, 3046), (1.5, 2269), (1.5, 1787), (1.5, 2353), (1.5, 3220), (1.5, 2231), (1.5, 2965), (1.5, 2931), (1.5, 3028), (1.5, 3193), (1.5, 3078), (1.5, 2588), (1.5, 2485), (1.5, 1914), (1.5, 2892), (1.5, 3109), (1.5, 2504), (1.5, 2004), (1.5, 1597), (1.5, 2191), (1.5, 3051), (1.5, 2919), (1.5, 3173), (1.5, 3002), (1.5, 2629), (1.5, 1892), (1.5, 1879), (1.5, 2970), (1.5, 2979), (1.5, 2833), (1.5, 2751), (1.5, 2848), (1.5, 3152), (1.5, 52), (1.5, 3198), (1.5, 3219), (1.5, 2907), (1.5, 3162), (1.5, 3170), (1.5, 3070), (1.5, 2447), (1.5, 3136), (1.5, 2767), (1.5, 2029), (1.5, 3177), (1.5, 2180), (1.5, 2989), (1.5, 3094), (1.5, 2455), (1.5, 2769), (1.5, 3189), (1.5, 2591), (1.5, 3073), (1.5, 2987), (1.5, 3226), (1.5, 2157), (1.5, 1982), (1.5, 1891), (1.5, 3089), (1.5, 2574), (1.5, 3017), (1.5, 3232), (1.5, 2770), (1.5, 2387), (1.5, 2692), (1.5, 2532), (1.5, 1923), (1.5, 3029), (1.5, 2319), (1.5, 3159), (1.5, 1991), (1.5, 3229), (1.5, 1384), (1.5, 3155), (1.5, 1602), (1.5, 3183), (1.5, 3186), (1.5, 2886), (1.5, 3206), (1.5, 3004), (1.5, 2960), (1.5, 2857), (1.5, 3075), (1.5, 3119), (1.5, 2940), (1.5, 2933), (1.5, 1909), (1.5, 1296), (1.5, 2914), (1.5, 2701), (1.5, 2923), (1.5, 2311), (1.5, 3209), (1.5, 3205), (1.5, 2823), (1.5, 3222), (1.5, 1490), (1.5, 2200), (1.5, 3041), (1.5, 3080), (1.5, 3148), (1.5, 1496), (1.5, 3195), (1.5, 3088), (1.5, 2703), (1.5, 2775), (1.5, 2908), (1.5, 2156), (1.5, 2832), (1.5, 2425), (1.5, 3057), (1.5, 3227), (1.5, 2808), (1.5, 3079), (1.5, 3066), (1.5, 2801), (1.5, 2969), (1.5, 2607), (1.5, 3059), (1.5, 3166), (1.5, 2897), (1.5, 2657), (1.5, 2165), (1.5, 2911), (1.5, 3147), (1.5, 3212), (1.5, 3175), (1.5, 2104), (1.5, 2385), (1.5, 3131), (1.5, 3043), (1.5, 2236), (1.5, 2946), (1.5, 2825), (1.5, 1913), (1.5, 2030), (1.5, 2215), (1.5, 3176), (1.5, 2727), (1.5, 3185), (1.5, 2171), (1.5, 2396), (1.5, 3168), (1.5, 1600), (1.5, 3150), (1.5, 2868), (1.5, 3167), (1.5, 3105), (1.5, 2041), (1.5, 3077), (1.5, 3153), (1.5, 3146), (1.5, 2809), (1.5, 1783), (1.5, 2313), (1.5, 3169), (1.5, 3084), (1.5, 2803), (1.5, 2572), (1.5, 2816), (0.875, 3217), (0.875, 3157), (0.625, 3190), (0.5, 3203), (0.5, 3215), (0.375, 3200), (0.375, 3149), (0.375, 3143), (0.375, 3165), (0.375, 3188)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 1198
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2514
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1392
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2617
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2824
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 30]
[Computing fitness]
[(1.5, 3058), (1.5, 3206), (1.5, 1597), (1.5, 3017), (1.5, 1878), (1.5, 1982), (1.5, 2965), (1.5, 3275), (1.5, 2767), (1.5, 3218), (1.5, 3295), (1.5, 1604), (1.5, 2183), (1.5, 3234), (1.5, 2013), (1.5, 3315), (1.5, 3321), (1.5, 1909), (1.5, 3102), (1.5, 2628), (1.5, 2653), (1.5, 2188), (1.5, 3220), (1.5, 3121), (1.5, 3085), (1.5, 3219), (1.5, 2988), (1.5, 3186), (1.5, 2943), (1.5, 1296), (1.5, 3016), (1.5, 2157), (1.5, 3317), (1.5, 2029), (1.5, 2319), (1.5, 3115), (1.5, 3107), (1.5, 2070), (1.5, 3144), (1.5, 3228), (1.5, 2179), (1.5, 2889), (1.5, 2501), (1.5, 3299), (1.5, 3030), (1.5, 2920), (1.5, 3305), (1.5, 1391), (1.5, 3213), (1.5, 2701), (1.5, 3246), (1.5, 2447), (1.5, 3205), (1.5, 2234), (1.5, 2978), (1.5, 2514), (1.5, 1991), (1.5, 3119), (1.5, 2512), (1.5, 1787), (1.5, 3172), (1.5, 2418), (1.5, 3073), (1.5, 2602), (1.5, 3201), (1.5, 3162), (1.5, 2379), (1.5, 2735), (1.5, 2672), (1.5, 3238), (1.5, 2574), (1.5, 1807), (1.5, 3048), (1.5, 2813), (1.5, 2522), (1.5, 2237), (1.5, 2927), (1.5, 1995), (1.5, 3071), (1.5, 2874), (1.5, 3154), (1.5, 3258), (1.5, 3047), (1.5, 1888), (1.5, 2119), (1.5, 2891), (1.5, 2991), (1.5, 52), (1.5, 3178), (1.5, 2004), (1.5, 2692), (1.5, 3322), (1.5, 3333), (1.5, 3160), (1.5, 3230), (1.5, 2690), (1.5, 1891), (1.5, 2824), (1.5, 3332), (1.5, 2676), (1.5, 2785), (1.5, 3285), (1.5, 3187), (1.5, 2864), (1.5, 2531), (1.5, 2987), (1.5, 2841), (1.5, 2387), (1.5, 2774), (1.5, 2468), (1.5, 2660), (1.5, 2919), (1.5, 1702), (1.5, 2470), (1.5, 2460), (1.5, 2085), (1.5, 3051), (1.5, 3319), (1.5, 1975), (1.5, 3293), (1.5, 2650), (1.5, 2485), (1.5, 2708), (1.5, 1803), (1.5, 2797), (1.5, 2974), (1.5, 2611), (1.5, 1384), (1.5, 3036), (1.5, 3233), (1.5, 2395), (1.5, 2490), (1.5, 2769), (1.5, 1794), (1.5, 3198), (1.5, 2446), (1.5, 2923), (1.5, 2046), (1.5, 3179), (1.5, 2960), (1.5, 2100), (1.5, 2855), (1.5, 1198), (1.5, 2844), (1.5, 3269), (1.5, 3266), (1.5, 3311), (1.5, 2857), (1.5, 2254), (1.5, 3089), (1.5, 2122), (1.5, 2591), (1.5, 1977), (1.5, 2833), (1.5, 2972), (1.5, 2892), (1.5, 3224), (1.5, 2704), (1.5, 2753), (1.5, 3142), (1.5, 3031), (1.5, 3033), (1.5, 2979), (1.5, 3002), (1.5, 3252), (1.5, 1685), (1.5, 2696), (1.5, 3044), (1.5, 2981), (1.5, 2494), (1.5, 3075), (1.5, 2617), (1.5, 3314), (1.5, 2806), (1.5, 3087), (1.5, 3242), (1.5, 3199), (1.5, 2532), (1.5, 2917), (1.5, 1392), (1.5, 3096), (1.5, 2766), (1.5, 1492), (1.5, 2231), (1.5, 3335), (1.5, 2862), (1.5, 2311), (1.5, 3132), (1.5, 2770), (1.5, 3192), (1.5, 2749), (1.5, 3174), (1.5, 2894), (1.5, 3260), (1.5, 3226), (1.5, 1923), (1.5, 3237), (1.5, 3286), (1.5, 3324), (1.5, 2933), (1.5, 2840), (1.5, 3248), (1.5, 2886), (1.5, 2663), (1.5, 3083), (1.5, 2966), (1.5, 2860), (1.5, 2754), (1.5, 3231), (1.5, 2907), (1.5, 3054), (1.5, 3094), (1.5, 3245), (1.5, 2269), (1.5, 2951), (1.5, 3078), (1.5, 2994), (1.5, 3239), (1.5, 3155), (1.5, 3272), (1.5, 2655), (1.5, 3296), (1.5, 2103), (1.5, 1879), (1.5, 2940), (1.5, 3046), (1.5, 3255), (1.5, 2107), (1.5, 3267), (1.5, 2455), (1.5, 3320), (1.5, 3323), (1.5, 3050), (1.5, 2353), (1.5, 3232), (1.5, 1591), (1.5, 2734), (1.5, 2146), (1.5, 3023), (1.5, 2829), (1.5, 2255), (1.5, 2426), (1.5, 2504), (1.5, 2746), (1.5, 3308), (1.5, 3037), (1.5, 2298), (1.5, 2467), (1.5, 2956), (1.5, 3022), (1.5, 3312), (1.5, 2867), (1.5, 3173), (1.5, 3241), (1.5, 3207), (1.5, 2461), (1.5, 3273), (1.5, 2729), (1.5, 2573), (1.5, 2914), (1.5, 2852), (1.5, 3282), (1.5, 3244), (1.5, 3116), (1.5, 2191), (1.5, 2360), (1.5, 3250), (1.5, 2755), (1.5, 1805), (1.5, 3274), (1.5, 2220), (1.5, 3253), (1.5, 3109), (1.5, 2302), (1.5, 2759), (1.5, 2599), (1.5, 3208), (1.5, 2977), (1.5, 2662), (1.5, 3301), (1.5, 2151), (1.5, 3170), (1.5, 3139), (1.5, 2756), (1.5, 2732), (1.5, 1590), (1.5, 3279), (1.5, 3159), (1.5, 3306), (1.5, 1602), (1.5, 3263), (1.5, 3129), (1.5, 2989), (1.5, 2741), (1.5, 3209), (1.5, 3004), (1.5, 3000), (1.5, 2688), (1.5, 3313), (1.5, 3070), (1.5, 3221), (1.5, 3163), (1.5, 2525), (1.5, 2180), (1.5, 2831), (1.5, 2848), (1.5, 3136), (1.5, 2890), (1.5, 3310), (1.5, 1912), (1.5, 2162), (1.5, 3113), (1.5, 2793), (1.5, 3152), (1.5, 3304), (1.5, 3240), (1.5, 3055), (1.5, 2799), (1.5, 3100), (1.5, 2782), (1.5, 3171), (1.5, 3189), (1.5, 2546), (1.5, 2751), (1.5, 3210), (1.5, 2842), (1.5, 1596), (1.5, 3276), (1.5, 3068), (1.5, 1900), (1.5, 2316), (1.5, 2970), (1.5, 3182), (1.5, 3130), (1.5, 3005), (1.5, 2707), (1.5, 2740), (1.5, 2308), (1.5, 3137), (1.5, 3111), (1.5, 2666), (1.5, 1892), (1.5, 3123), (1.5, 3302), (1.5, 3063), (1.5, 2372), (1.5, 3177), (1.5, 3292), (1.5, 2823), (1.5, 2748), (1.5, 3183), (1.5, 2421), (1.5, 2931), (1.5, 2904), (1.5, 2856), (1.5, 3211), (1.5, 3257), (1.5, 3229), (1.5, 2615), (1.5, 3035), (1.5, 2881), (1.5, 3181), (1.5, 2433), (1.5, 3259), (1.5, 2818), (1.5, 2826), (1.5, 3270), (1.5, 3065), (1.5, 3196), (1.5, 3161), (1.5, 2926), (1.5, 2863), (1.5, 3028), (1.5, 2588), (1.5, 3029), (1.5, 3277), (1.5, 2479), (1.5, 3251), (1.5, 2629), (1.5, 1914), (1.5, 2095), (1.5, 2997), (1.5, 3072), (1.5, 3288), (1.5, 2699), (1.5, 3236), (1.5, 894), (1.5, 1915), (1.5, 3193), (1.5, 2244), (1.5, 3283), (0.875, 3298), (0.875, 3327), (0.875, 3330), (0.625, 3264), (0.5, 3290), (0.375, 3325), (0.375, 3328), (0.375, 3280), (0.375, 3261)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 3058
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 3206
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1597
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 3017
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1878
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`5`#`#`x`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 5 x) x) 1))
 nr_nodes: 8]
[Generation 31]
[Computing fitness]
[(1.5, 2708), (1.5, 3411), (1.5, 3282), (1.5, 2813), (1.5, 2504), (1.5, 2927), (1.5, 3171), (1.5, 3404), (1.5, 3410), (1.5, 3253), (1.5, 3242), (1.5, 3046), (1.5, 3109), (1.5, 2655), (1.5, 2379), (1.5, 1604), (1.5, 3073), (1.5, 3224), (1.5, 1685), (1.5, 1787), (1.5, 3360), (1.5, 1891), (1.5, 3310), (1.5, 2447), (1.5, 3311), (1.5, 2735), (1.5, 2573), (1.5, 2085), (1.5, 3000), (1.5, 2514), (1.5, 3367), (1.5, 2663), (1.5, 3437), (1.5, 2395), (1.5, 2844), (1.5, 3400), (1.5, 3250), (1.5, 3358), (1.5, 2650), (1.5, 3319), (1.5, 2468), (1.5, 3416), (1.5, 3037), (1.5, 2255), (1.5, 2522), (1.5, 2688), (1.5, 3199), (1.5, 3004), (1.5, 2965), (1.5, 3252), (1.5, 2512), (1.5, 3363), (1.5, 1805), (1.5, 3306), (1.5, 3136), (1.5, 2611), (1.5, 2220), (1.5, 1591), (1.5, 3432), (1.5, 1878), (1.5, 3364), (1.5, 2446), (1.5, 3016), (1.5, 1391), (1.5, 2107), (1.5, 3087), (1.5, 2234), (1.5, 2704), (1.5, 3371), (1.5, 2860), (1.5, 3159), (1.5, 2029), (1.5, 1602), (1.5, 2755), (1.5, 2546), (1.5, 2162), (1.5, 3342), (1.5, 2988), (1.5, 2734), (1.5, 3244), (1.5, 3296), (1.5, 3206), (1.5, 3333), (1.5, 1923), (1.5, 3275), (1.5, 2490), (1.5, 2653), (1.5, 2188), (1.5, 2972), (1.5, 2874), (1.5, 3373), (1.5, 3186), (1.5, 2180), (1.5, 3054), (1.5, 2237), (1.5, 1597), (1.5, 3241), (1.5, 3033), (1.5, 3089), (1.5, 2729), (1.5, 2418), (1.5, 2574), (1.5, 3172), (1.5, 3144), (1.5, 3356), (1.5, 3031), (1.5, 1392), (1.5, 3428), (1.5, 3335), (1.5, 3322), (1.5, 2157), (1.5, 1807), (1.5, 3255), (1.5, 2920), (1.5, 3378), (1.5, 3429), (1.5, 2754), (1.5, 3152), (1.5, 3258), (1.5, 3343), (1.5, 2741), (1.5, 3023), (1.5, 2696), (1.5, 3346), (1.5, 3365), (1.5, 2907), (1.5, 3163), (1.5, 2840), (1.5, 2119), (1.5, 1384), (1.5, 3187), (1.5, 3075), (1.5, 3218), (1.5, 2862), (1.5, 1803), (1.5, 2833), (1.5, 2824), (1.5, 3267), (1.5, 3394), (1.5, 3096), (1.5, 2914), (1.5, 3357), (1.5, 3017), (1.5, 2852), (1.5, 3233), (1.5, 3354), (1.5, 2531), (1.5, 3361), (1.5, 2591), (1.5, 3022), (1.5, 3240), (1.5, 3359), (1.5, 3401), (1.5, 3413), (1.5, 2426), (1.5, 3002), (1.5, 3070), (1.5, 3205), (1.5, 1198), (1.5, 2989), (1.5, 3237), (1.5, 2749), (1.5, 3372), (1.5, 2494), (1.5, 3201), (1.5, 3332), (1.5, 3231), (1.5, 3248), (1.5, 2231), (1.5, 2940), (1.5, 2867), (1.5, 3245), (1.5, 2785), (1.5, 2460), (1.5, 2987), (1.5, 3314), (1.5, 2662), (1.5, 3116), (1.5, 3174), (1.5, 3071), (1.5, 3412), (1.5, 3221), (1.5, 3388), (1.5, 2951), (1.5, 3048), (1.5, 2770), (1.5, 3323), (1.5, 3313), (1.5, 3305), (1.5, 3279), (1.5, 3162), (1.5, 2756), (1.5, 3246), (1.5, 2966), (1.5, 2353), (1.5, 3381), (1.5, 3312), (1.5, 2848), (1.5, 2917), (1.5, 3344), (1.5, 2933), (1.5, 2886), (1.5, 3219), (1.5, 3347), (1.5, 2943), (1.5, 2470), (1.5, 3266), (1.5, 1977), (1.5, 3050), (1.5, 2769), (1.5, 1975), (1.5, 3129), (1.5, 1888), (1.5, 3132), (1.5, 2923), (1.5, 2676), (1.5, 2919), (1.5, 3293), (1.5, 3374), (1.5, 3232), (1.5, 2890), (1.5, 2302), (1.5, 2122), (1.5, 3113), (1.5, 2894), (1.5, 2461), (1.5, 3230), (1.5, 2979), (1.5, 2151), (1.5, 3324), (1.5, 2485), (1.5, 2602), (1.5, 2311), (1.5, 2046), (1.5, 2799), (1.5, 2617), (1.5, 3349), (1.5, 3170), (1.5, 2960), (1.5, 2599), (1.5, 1794), (1.5, 2070), (1.5, 1982), (1.5, 2831), (1.5, 1590), (1.5, 3352), (1.5, 3115), (1.5, 3338), (1.5, 3238), (1.5, 2732), (1.5, 2956), (1.5, 2751), (1.5, 52), (1.5, 3051), (1.5, 2829), (1.5, 3392), (1.5, 2891), (1.5, 3273), (1.5, 3094), (1.5, 2806), (1.5, 3380), (1.5, 3055), (1.5, 3058), (1.5, 2100), (1.5, 3348), (1.5, 3308), (1.5, 2525), (1.5, 2672), (1.5, 3269), (1.5, 2532), (1.5, 2766), (1.5, 2841), (1.5, 3415), (1.5, 2455), (1.5, 2660), (1.5, 2977), (1.5, 3422), (1.5, 3047), (1.5, 2857), (1.5, 2254), (1.5, 2501), (1.5, 3207), (1.5, 3100), (1.5, 1909), (1.5, 3341), (1.5, 2978), (1.5, 2746), (1.5, 1991), (1.5, 3379), (1.5, 2146), (1.5, 3220), (1.5, 2269), (1.5, 2701), (1.5, 2889), (1.5, 3436), (1.5, 1702), (1.5, 3419), (1.5, 3228), (1.5, 3179), (1.5, 3044), (1.5, 2981), (1.5, 3286), (1.5, 1296), (1.5, 3078), (1.5, 2298), (1.5, 1492), (1.5, 1995), (1.5, 2892), (1.5, 2767), (1.5, 3198), (1.5, 3387), (1.5, 3107), (1.5, 3210), (1.5, 2690), (1.5, 2004), (1.5, 3102), (1.5, 3121), (1.5, 3160), (1.5, 2628), (1.5, 3178), (1.5, 3173), (1.5, 2360), (1.5, 3030), (1.5, 3434), (1.5, 3317), (1.5, 3192), (1.5, 3355), (1.5, 3083), (1.5, 3285), (1.5, 2319), (1.5, 2013), (1.5, 2692), (1.5, 3272), (1.5, 3433), (1.5, 3226), (1.5, 2191), (1.5, 3189), (1.5, 3155), (1.5, 3209), (1.5, 1879), (1.5, 3425), (1.5, 3320), (1.5, 2793), (1.5, 3208), (1.5, 3301), (1.5, 3391), (1.5, 3234), (1.5, 3154), (1.5, 3213), (1.5, 3085), (1.5, 3430), (1.5, 2387), (1.5, 2183), (1.5, 3345), (1.5, 3139), (1.5, 2864), (1.5, 2974), (1.5, 3336), (1.5, 2753), (1.5, 3304), (1.5, 3263), (1.5, 2759), (1.5, 2991), (1.5, 2994), (1.5, 2103), (1.5, 3295), (1.5, 2855), (1.5, 2467), (1.5, 3321), (1.5, 3239), (1.5, 2797), (1.5, 1912), (1.5, 3299), (1.5, 3370), (1.5, 3431), (1.5, 3119), (1.5, 2782), (1.5, 3260), (1.5, 3274), (1.5, 3142), (1.5, 2179), (1.5, 2774), (1.5, 3408), (1.5, 3315), (1.5, 3036), (0.875, 3418), (0.875, 3385), (0.875, 3403), (0.875, 3396), (0.875, 3351), (0.75, 3423), (0.5, 3398), (0.5, 3376), (0.5, 3369), (0.375, 3420), (0.375, 3339), (0.375, 3406), (0.375, 3389), (0.375, 3427), (0.375, 3383)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 2708
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 3411
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 3282
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2813
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2504
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 32]
[Computing fitness]
[(1.5, 2269), (1.5, 3400), (1.5, 2146), (1.5, 3432), (1.5, 3378), (1.5, 2892), (1.5, 3374), (1.5, 2690), (1.5, 2734), (1.5, 3171), (1.5, 2525), (1.5, 3132), (1.5, 3198), (1.5, 3361), (1.5, 2806), (1.5, 1923), (1.5, 1492), (1.5, 3047), (1.5, 3381), (1.5, 3308), (1.5, 3207), (1.5, 3031), (1.5, 2107), (1.5, 3048), (1.5, 3410), (1.5, 3380), (1.5, 3136), (1.5, 3210), (1.5, 3479), (1.5, 3364), (1.5, 2522), (1.5, 3174), (1.5, 3443), (1.5, 3419), (1.5, 2755), (1.5, 3349), (1.5, 1982), (1.5, 3499), (1.5, 3446), (1.5, 2951), (1.5, 3255), (1.5, 1590), (1.5, 3232), (1.5, 2660), (1.5, 1878), (1.5, 2746), (1.5, 1977), (1.5, 3322), (1.5, 2889), (1.5, 1685), (1.5, 3428), (1.5, 1787), (1.5, 3448), (1.5, 3429), (1.5, 2989), (1.5, 3144), (1.5, 3258), (1.5, 2767), (1.5, 3113), (1.5, 2917), (1.5, 2446), (1.5, 3528), (1.5, 3447), (1.5, 3178), (1.5, 3248), (1.5, 3354), (1.5, 3348), (1.5, 2461), (1.5, 3394), (1.5, 1391), (1.5, 2663), (1.5, 3404), (1.5, 3487), (1.5, 3266), (1.5, 2890), (1.5, 3508), (1.5, 2254), (1.5, 3478), (1.5, 2766), (1.5, 3363), (1.5, 2447), (1.5, 3317), (1.5, 3279), (1.5, 2956), (1.5, 3492), (1.5, 3089), (1.5, 3293), (1.5, 3486), (1.5, 3518), (1.5, 2769), (1.5, 3253), (1.5, 2965), (1.5, 3357), (1.5, 3524), (1.5, 2862), (1.5, 1198), (1.5, 2978), (1.5, 2004), (1.5, 3324), (1.5, 3269), (1.5, 3170), (1.5, 2966), (1.5, 1597), (1.5, 3187), (1.5, 2353), (1.5, 2470), (1.5, 2599), (1.5, 3221), (1.5, 1995), (1.5, 2988), (1.5, 2891), (1.5, 3230), (1.5, 2395), (1.5, 3500), (1.5, 3455), (1.5, 2813), (1.5, 2940), (1.5, 3436), (1.5, 2785), (1.5, 3129), (1.5, 2860), (1.5, 3242), (1.5, 3075), (1.5, 2220), (1.5, 2418), (1.5, 2704), (1.5, 3495), (1.5, 2531), (1.5, 2688), (1.5, 2455), (1.5, 2708), (1.5, 2933), (1.5, 3240), (1.5, 3033), (1.5, 2672), (1.5, 2741), (1.5, 3509), (1.5, 2180), (1.5, 3054), (1.5, 2943), (1.5, 3415), (1.5, 2298), (1.5, 2546), (1.5, 3162), (1.5, 2981), (1.5, 3437), (1.5, 3159), (1.5, 3313), (1.5, 3356), (1.5, 2701), (1.5, 3517), (1.5, 2504), (1.5, 3469), (1.5, 3529), (1.5, 3512), (1.5, 2231), (1.5, 1891), (1.5, 3306), (1.5, 3073), (1.5, 3510), (1.5, 3470), (1.5, 2151), (1.5, 3100), (1.5, 3163), (1.5, 2972), (1.5, 3392), (1.5, 3078), (1.5, 3422), (1.5, 3094), (1.5, 3497), (1.5, 3016), (1.5, 3475), (1.5, 2460), (1.5, 2914), (1.5, 3333), (1.5, 3037), (1.5, 2468), (1.5, 1991), (1.5, 2676), (1.5, 3238), (1.5, 1794), (1.5, 3471), (1.5, 3186), (1.5, 3401), (1.5, 2574), (1.5, 2188), (1.5, 3116), (1.5, 3244), (1.5, 1909), (1.5, 2799), (1.5, 3416), (1.5, 3070), (1.5, 2894), (1.5, 3000), (1.5, 3466), (1.5, 2485), (1.5, 3050), (1.5, 1392), (1.5, 2573), (1.5, 3379), (1.5, 3343), (1.5, 3296), (1.5, 3046), (1.5, 3372), (1.5, 1807), (1.5, 3087), (1.5, 3201), (1.5, 2927), (1.5, 2662), (1.5, 2100), (1.5, 2426), (1.5, 3017), (1.5, 3058), (1.5, 2611), (1.5, 3501), (1.5, 3445), (1.5, 1384), (1.5, 3173), (1.5, 3237), (1.5, 2831), (1.5, 3121), (1.5, 2729), (1.5, 2977), (1.5, 2653), (1.5, 3115), (1.5, 3152), (1.5, 3199), (1.5, 3458), (1.5, 2844), (1.5, 2237), (1.5, 3387), (1.5, 2255), (1.5, 3434), (1.5, 2886), (1.5, 2857), (1.5, 3441), (1.5, 3347), (1.5, 1888), (1.5, 2512), (1.5, 3352), (1.5, 2874), (1.5, 3344), (1.5, 3452), (1.5, 3485), (1.5, 3051), (1.5, 2490), (1.5, 3411), (1.5, 3311), (1.5, 3220), (1.5, 2360), (1.5, 2987), (1.5, 3305), (1.5, 1803), (1.5, 2751), (1.5, 2122), (1.5, 3473), (1.5, 3449), (1.5, 3335), (1.5, 2833), (1.5, 2756), (1.5, 2119), (1.5, 3365), (1.5, 3457), (1.5, 3338), (1.5, 2046), (1.5, 3286), (1.5, 3450), (1.5, 3371), (1.5, 3367), (1.5, 3491), (1.5, 2923), (1.5, 2735), (1.5, 3071), (1.5, 3267), (1.5, 1975), (1.5, 3451), (1.5, 2628), (1.5, 3456), (1.5, 3160), (1.5, 2302), (1.5, 2029), (1.5, 3312), (1.5, 2617), (1.5, 3252), (1.5, 1805), (1.5, 3310), (1.5, 3102), (1.5, 3360), (1.5, 3250), (1.5, 3241), (1.5, 3439), (1.5, 1604), (1.5, 3462), (1.5, 2919), (1.5, 3023), (1.5, 2162), (1.5, 2960), (1.5, 2655), (1.5, 3442), (1.5, 3342), (1.5, 2732), (1.5, 2907), (1.5, 3474), (1.5, 2514), (1.5, 2754), (1.5, 3109), (1.5, 3498), (1.5, 2696), (1.5, 2379), (1.5, 2157), (1.5, 2840), (1.5, 2494), (1.5, 2532), (1.5, 3228), (1.5, 3488), (1.5, 3022), (1.5, 2852), (1.5, 3484), (1.5, 3044), (1.5, 3463), (1.5, 3467), (1.5, 3481), (1.5, 2650), (1.5, 3245), (1.5, 3412), (1.5, 3506), (1.5, 3413), (1.5, 3179), (1.5, 3107), (1.5, 3503), (1.5, 2920), (1.5, 3341), (1.5, 2501), (1.5, 3219), (1.5, 2602), (1.5, 52), (1.5, 3388), (1.5, 2848), (1.5, 3233), (1.5, 3477), (1.5, 3493), (1.5, 3273), (1.5, 2867), (1.5, 3323), (1.5, 3055), (1.5, 1591), (1.5, 3275), (1.5, 3096), (1.5, 2841), (1.5, 2749), (1.5, 3440), (1.5, 3482), (1.5, 3489), (1.5, 3002), (1.5, 2591), (1.5, 3332), (1.5, 3231), (1.5, 1702), (1.5, 3172), (1.5, 3246), (1.5, 2824), (1.5, 2770), (1.5, 3373), (1.5, 3004), (1.5, 3468), (1.5, 3507), (1.5, 2829), (1.5, 3526), (1.5, 2085), (1.5, 2979), (1.5, 2311), (1.5, 3282), (1.5, 3319), (1.5, 3514), (1.5, 2070), (1.5, 3205), (1.5, 3358), (1.5, 3359), (1.5, 3522), (1.5, 3346), (1.5, 3030), (1.5, 3438), (1.5, 3206), (1.5, 1296), (1.5, 1602), (1.5, 3218), (1.5, 3314), (1.5, 3224), (1.5, 2234), (1.5, 3465), (0.75, 3516), (0.5, 3521), (0.5, 3454), (0.5, 3460), (0.5, 3505), (0.375, 3464), (0.375, 3530), (0.375, 3519), (0.375, 3472), (0.375, 3490)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 2269
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 3400
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2146
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 3432
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 3378
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Generation 33]
[Computing fitness]
[(1.5, 3335), (1.5, 3087), (1.5, 2146), (1.5, 2966), (1.5, 1878), (1.5, 2813), (1.5, 3457), (1.5, 3565), (1.5, 2231), (1.5, 2746), (1.5, 3201), (1.5, 3449), (1.5, 2485), (1.5, 2004), (1.5, 3267), (1.5, 3552), (1.5, 3531), (1.5, 3557), (1.5, 3054), (1.5, 3305), (1.5, 2628), (1.5, 3136), (1.5, 2522), (1.5, 2729), (1.5, 1888), (1.5, 3469), (1.5, 3371), (1.5, 3473), (1.5, 3456), (1.5, 2919), (1.5, 2672), (1.5, 2504), (1.5, 1391), (1.5, 3046), (1.5, 3286), (1.5, 1982), (1.5, 1807), (1.5, 2696), (1.5, 3071), (1.5, 3296), (1.5, 3550), (1.5, 3498), (1.5, 2755), (1.5, 3602), (1.5, 3463), (1.5, 3132), (1.5, 3411), (1.5, 3579), (1.5, 3528), (1.5, 2655), (1.5, 3518), (1.5, 3571), (1.5, 2046), (1.5, 2927), (1.5, 3567), (1.5, 2269), (1.5, 3367), (1.5, 3547), (1.5, 3439), (1.5, 2766), (1.5, 2978), (1.5, 1794), (1.5, 2751), (1.5, 3312), (1.5, 3159), (1.5, 1597), (1.5, 3594), (1.5, 1198), (1.5, 3534), (1.5, 3356), (1.5, 2987), (1.5, 3022), (1.5, 3109), (1.5, 3048), (1.5, 2446), (1.5, 1991), (1.5, 3509), (1.5, 3428), (1.5, 3401), (1.5, 3442), (1.5, 2688), (1.5, 3379), (1.5, 3242), (1.5, 1392), (1.5, 3434), (1.5, 3378), (1.5, 3512), (1.5, 3347), (1.5, 1685), (1.5, 1909), (1.5, 3310), (1.5, 3207), (1.5, 3047), (1.5, 3588), (1.5, 2831), (1.5, 3616), (1.5, 3173), (1.5, 2379), (1.5, 3354), (1.5, 2157), (1.5, 3121), (1.5, 2353), (1.5, 2940), (1.5, 1805), (1.5, 3220), (1.5, 3487), (1.5, 3250), (1.5, 2889), (1.5, 3467), (1.5, 3387), (1.5, 3422), (1.5, 2119), (1.5, 2754), (1.5, 3129), (1.5, 2151), (1.5, 2972), (1.5, 2360), (1.5, 3364), (1.5, 2599), (1.5, 3597), (1.5, 3548), (1.5, 3598), (1.5, 2426), (1.5, 3570), (1.5, 3445), (1.5, 2741), (1.5, 3357), (1.5, 3495), (1.5, 3566), (1.5, 3051), (1.5, 3269), (1.5, 3253), (1.5, 2029), (1.5, 2573), (1.5, 3410), (1.5, 2298), (1.5, 3600), (1.5, 3116), (1.5, 3500), (1.5, 3492), (1.5, 3258), (1.5, 3400), (1.5, 2574), (1.5, 2690), (1.5, 3447), (1.5, 3163), (1.5, 3230), (1.5, 3199), (1.5, 3592), (1.5, 3455), (1.5, 3448), (1.5, 2470), (1.5, 1891), (1.5, 3404), (1.5, 3308), (1.5, 3615), (1.5, 2514), (1.5, 3372), (1.5, 3178), (1.5, 3306), (1.5, 3094), (1.5, 3429), (1.5, 3073), (1.5, 3475), (1.5, 3451), (1.5, 3604), (1.5, 3541), (1.5, 3412), (1.5, 2708), (1.5, 3016), (1.5, 3313), (1.5, 2862), (1.5, 2490), (1.5, 3311), (1.5, 2660), (1.5, 3000), (1.5, 3611), (1.5, 3343), (1.5, 2977), (1.5, 3115), (1.5, 3100), (1.5, 2460), (1.5, 3255), (1.5, 3360), (1.5, 3470), (1.5, 3499), (1.5, 3555), (1.5, 3593), (1.5, 3441), (1.5, 3575), (1.5, 2981), (1.5, 2461), (1.5, 3573), (1.5, 3471), (1.5, 2676), (1.5, 2965), (1.5, 3170), (1.5, 3241), (1.5, 2732), (1.5, 3474), (1.5, 1803), (1.5, 2662), (1.5, 3595), (1.5, 3491), (1.5, 3614), (1.5, 3174), (1.5, 2546), (1.5, 1492), (1.5, 3070), (1.5, 3481), (1.5, 2852), (1.5, 2917), (1.5, 1590), (1.5, 3075), (1.5, 2914), (1.5, 2663), (1.5, 2933), (1.5, 3590), (1.5, 3618), (1.5, 3333), (1.5, 2468), (1.5, 1923), (1.5, 3380), (1.5, 2254), (1.5, 3238), (1.5, 2617), (1.5, 3613), (1.5, 3603), (1.5, 2188), (1.5, 3374), (1.5, 3078), (1.5, 3044), (1.5, 3466), (1.5, 3221), (1.5, 3569), (1.5, 2894), (1.5, 2767), (1.5, 3361), (1.5, 3050), (1.5, 3577), (1.5, 2525), (1.5, 3517), (1.5, 3160), (1.5, 3529), (1.5, 2956), (1.5, 3162), (1.5, 2960), (1.5, 3536), (1.5, 2531), (1.5, 3392), (1.5, 2874), (1.5, 3293), (1.5, 3572), (1.5, 2844), (1.5, 3252), (1.5, 3608), (1.5, 3266), (1.5, 3452), (1.5, 2494), (1.5, 3348), (1.5, 2923), (1.5, 2988), (1.5, 2653), (1.5, 3394), (1.5, 3610), (1.5, 2840), (1.5, 2891), (1.5, 2785), (1.5, 2107), (1.5, 3144), (1.5, 3620), (1.5, 2806), (1.5, 2418), (1.5, 3462), (1.5, 3508), (1.5, 3058), (1.5, 3484), (1.5, 3232), (1.5, 2860), (1.5, 3561), (1.5, 3102), (1.5, 3033), (1.5, 1975), (1.5, 3584), (1.5, 2512), (1.5, 3478), (1.5, 2302), (1.5, 3446), (1.5, 3443), (1.5, 2734), (1.5, 3605), (1.5, 3558), (1.5, 3365), (1.5, 3240), (1.5, 3612), (1.5, 3497), (1.5, 3589), (1.5, 3501), (1.5, 3554), (1.5, 2857), (1.5, 2611), (1.5, 3432), (1.5, 2907), (1.5, 2943), (1.5, 3324), (1.5, 3381), (1.5, 3089), (1.5, 1977), (1.5, 3023), (1.5, 3017), (1.5, 3344), (1.5, 3171), (1.5, 3582), (1.5, 2100), (1.5, 2220), (1.5, 3524), (1.5, 2447), (1.5, 3248), (1.5, 3562), (1.5, 3585), (1.5, 3419), (1.5, 3415), (1.5, 3485), (1.5, 3210), (1.5, 2701), (1.5, 3228), (1.5, 2704), (1.5, 3551), (1.5, 2650), (1.5, 3437), (1.5, 3458), (1.5, 3607), (1.5, 1384), (1.5, 2180), (1.5, 3322), (1.5, 3279), (1.5, 2951), (1.5, 1995), (1.5, 3342), (1.5, 3619), (1.5, 2799), (1.5, 2395), (1.5, 3479), (1.5, 3450), (1.5, 2769), (1.5, 2122), (1.5, 2455), (1.5, 2237), (1.5, 3617), (1.5, 1604), (1.5, 3601), (1.5, 3540), (1.5, 3245), (1.5, 2735), (1.5, 2756), (1.5, 3416), (1.5, 3436), (1.5, 2532), (1.5, 2989), (1.5, 3031), (1.5, 2890), (1.5, 3338), (1.5, 2833), (1.5, 3488), (1.5, 2255), (1.5, 3152), (1.5, 3609), (1.5, 1787), (1.5, 3352), (1.5, 3187), (1.5, 3317), (1.5, 3510), (1.5, 2162), (1.5, 3486), (1.5, 2886), (1.5, 3549), (1.5, 3553), (1.5, 3037), (1.5, 3237), (1.5, 3198), (1.5, 3113), (1.5, 3532), (1.5, 3544), (1.5, 3537), (1.5, 3244), (1.5, 3599), (1.5, 2892), (1.5, 3349), (1.5, 3186), (1.5, 3622), (1.5, 3363), (0.875, 3564), (0.875, 3587), (0.5, 3581), (0.375, 3574), (0.375, 3546), (0.375, 3560), (0.375, 3543), (0.375, 3538), (0.375, 3576)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 3335
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 3087
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2146
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 2966
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 1878
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`5`#`#`x`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (* 5 x) x) 1))
 nr_nodes: 8]
[Generation 34]
[Computing fitness]
[(1.5, 3441), (1.5, 3475), (1.5, 3470), (1.5, 3512), (1.5, 3711), (1.5, 2655), (1.5, 3691), (1.5, 3566), (1.5, 3611), (1.5, 3308), (1.5, 3570), (1.5, 3481), (1.5, 3232), (1.5, 3070), (1.5, 2151), (1.5, 3669), (1.5, 2874), (1.5, 1590), (1.5, 3598), (1.5, 3610), (1.5, 2360), (1.5, 2599), (1.5, 3674), (1.5, 3497), (1.5, 3558), (1.5, 2573), (1.5, 3258), (1.5, 3492), (1.5, 3354), (1.5, 3380), (1.5, 3474), (1.5, 3667), (1.5, 2746), (1.5, 3000), (1.5, 2960), (1.5, 3378), (1.5, 3582), (1.5, 3567), (1.5, 3372), (1.5, 1597), (1.5, 2514), (1.5, 3501), (1.5, 2468), (1.5, 3495), (1.5, 3050), (1.5, 2754), (1.5, 3498), (1.5, 3445), (1.5, 3419), (1.5, 3241), (1.5, 3248), (1.5, 2972), (1.5, 3677), (1.5, 3360), (1.5, 3016), (1.5, 3709), (1.5, 2146), (1.5, 3509), (1.5, 3625), (1.5, 3266), (1.5, 3478), (1.5, 3305), (1.5, 2741), (1.5, 3605), (1.5, 3713), (1.5, 3210), (1.5, 3704), (1.5, 3650), (1.5, 3094), (1.5, 3374), (1.5, 3347), (1.5, 3637), (1.5, 2965), (1.5, 3517), (1.5, 3250), (1.5, 3641), (1.5, 3624), (1.5, 3071), (1.5, 2531), (1.5, 3089), (1.5, 2766), (1.5, 3548), (1.5, 2889), (1.5, 3528), (1.5, 3054), (1.5, 2188), (1.5, 3627), (1.5, 3529), (1.5, 3635), (1.5, 3379), (1.5, 3136), (1.5, 2470), (1.5, 3443), (1.5, 3593), (1.5, 3242), (1.5, 2574), (1.5, 3121), (1.5, 3442), (1.5, 1492), (1.5, 3654), (1.5, 2977), (1.5, 3132), (1.5, 3630), (1.5, 3561), (1.5, 3693), (1.5, 3073), (1.5, 3692), (1.5, 3499), (1.5, 3500), (1.5, 3312), (1.5, 3670), (1.5, 3616), (1.5, 3547), (1.5, 2755), (1.5, 3697), (1.5, 3333), (1.5, 3573), (1.5, 3484), (1.5, 3662), (1.5, 3604), (1.5, 1392), (1.5, 3679), (1.5, 3571), (1.5, 3335), (1.5, 3404), (1.5, 3238), (1.5, 2806), (1.5, 3144), (1.5, 3716), (1.5, 3524), (1.5, 2831), (1.5, 3694), (1.5, 2767), (1.5, 2426), (1.5, 3555), (1.5, 3392), (1.5, 3046), (1.5, 3220), (1.5, 3255), (1.5, 3467), (1.5, 2840), (1.5, 3100), (1.5, 2490), (1.5, 3628), (1.5, 1198), (1.5, 3471), (1.5, 3449), (1.5, 3371), (1.5, 3286), (1.5, 3592), (1.5, 2844), (1.5, 3701), (1.5, 3367), (1.5, 3058), (1.5, 3652), (1.5, 3550), (1.5, 3313), (1.5, 3381), (1.5, 3439), (1.5, 2628), (1.5, 3618), (1.5, 3689), (1.5, 3387), (1.5, 3562), (1.5, 3531), (1.5, 3462), (1.5, 2751), (1.5, 3703), (1.5, 3518), (1.5, 3310), (1.5, 2004), (1.5, 2852), (1.5, 2418), (1.5, 1909), (1.5, 3696), (1.5, 3415), (1.5, 2914), (1.5, 3590), (1.5, 2353), (1.5, 3411), (1.5, 3422), (1.5, 3252), (1.5, 2220), (1.5, 2734), (1.5, 3575), (1.5, 3047), (1.5, 3678), (1.5, 2690), (1.5, 3033), (1.5, 2046), (1.5, 2785), (1.5, 2100), (1.5, 3230), (1.5, 3579), (1.5, 3051), (1.5, 3554), (1.5, 3269), (1.5, 2966), (1.5, 3221), (1.5, 3717), (1.5, 3686), (1.5, 3160), (1.5, 2696), (1.5, 3293), (1.5, 2857), (1.5, 3473), (1.5, 3253), (1.5, 2522), (1.5, 3116), (1.5, 1891), (1.5, 2119), (1.5, 2981), (1.5, 3469), (1.5, 3565), (1.5, 3569), (1.5, 2907), (1.5, 3365), (1.5, 3536), (1.5, 2732), (1.5, 3485), (1.5, 2813), (1.5, 3129), (1.5, 3170), (1.5, 2891), (1.5, 2894), (1.5, 3597), (1.5, 3577), (1.5, 3446), (1.5, 3296), (1.5, 3614), (1.5, 3087), (1.5, 3022), (1.5, 3357), (1.5, 3508), (1.5, 3588), (1.5, 3457), (1.5, 3075), (1.5, 3603), (1.5, 3306), (1.5, 3412), (1.5, 3660), (1.5, 3700), (1.5, 3044), (1.5, 3452), (1.5, 2504), (1.5, 2676), (1.5, 3620), (1.5, 3557), (1.5, 2379), (1.5, 2978), (1.5, 3432), (1.5, 3644), (1.5, 3602), (1.5, 3642), (1.5, 2461), (1.5, 2860), (1.5, 2729), (1.5, 2546), (1.5, 2617), (1.5, 3466), (1.5, 2494), (1.5, 3455), (1.5, 3613), (1.5, 3173), (1.5, 3400), (1.5, 2525), (1.5, 3364), (1.5, 3705), (1.5, 3706), (1.5, 3572), (1.5, 3428), (1.5, 3401), (1.5, 3023), (1.5, 3663), (1.5, 3629), (1.5, 2660), (1.5, 2708), (1.5, 3634), (1.5, 3159), (1.5, 3434), (1.5, 3615), (1.5, 1982), (1.5, 1923), (1.5, 3702), (1.5, 1803), (1.5, 1991), (1.5, 3585), (1.5, 2917), (1.5, 3639), (1.5, 3448), (1.5, 3102), (1.5, 3078), (1.5, 2107), (1.5, 3451), (1.5, 3594), (1.5, 1794), (1.5, 2988), (1.5, 3595), (1.5, 3600), (1.5, 2672), (1.5, 2662), (1.5, 3429), (1.5, 2923), (1.5, 3534), (1.5, 3201), (1.5, 3267), (1.5, 1975), (1.5, 2943), (1.5, 2460), (1.5, 3109), (1.5, 3668), (1.5, 3552), (1.5, 3171), (1.5, 3672), (1.5, 3356), (1.5, 2447), (1.5, 2919), (1.5, 3487), (1.5, 3447), (1.5, 3712), (1.5, 3361), (1.5, 1878), (1.5, 2298), (1.5, 2933), (1.5, 2512), (1.5, 3199), (1.5, 3682), (1.5, 2940), (1.5, 3707), (1.5, 3343), (1.5, 1888), (1.5, 2269), (1.5, 2302), (1.5, 3162), (1.5, 2157), (1.5, 2663), (1.5, 3163), (1.5, 2653), (1.5, 2446), (1.5, 3410), (1.5, 3240), (1.5, 2029), (1.5, 3311), (1.5, 3178), (1.5, 3688), (1.5, 3017), (1.5, 3708), (1.5, 3684), (1.5, 2701), (1.5, 2987), (1.5, 2485), (1.5, 3695), (1.5, 3656), (1.5, 2611), (1.5, 3612), (1.5, 3680), (1.5, 3174), (1.5, 1977), (1.5, 3456), (1.5, 3463), (1.5, 3491), (1.5, 3115), (1.5, 3584), (1.5, 3666), (1.5, 3632), (1.5, 2254), (1.5, 3685), (1.5, 1807), (1.5, 1685), (1.5, 3048), (1.5, 2862), (1.5, 1391), (1.5, 3608), (1.5, 3631), (1.5, 3324), (1.5, 3394), (1.5, 3664), (1.5, 2688), (1.5, 2927), (1.5, 3348), (1.5, 2956), (1.5, 3687), (1.5, 3541), (1.5, 2231), (1.5, 1805), (1.5, 3655), (1.5, 3589), (1.5, 3344), (1.5, 3207), (1.125, 3658), (0.875, 3715), (0.875, 3648), (0.875, 3676), (0.875, 3646), (0.375, 3699), (0.375, 3640), (0.375, 3665), (0.375, 3651), (0.375, 3626), (0.375, 3643)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 3441
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 3475
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 3470
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 3512
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 3711
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ (* x 5) x)))
 nr_nodes: 8]
[Algorithm end]
[Algorithm start]
[Initial pool]
(CANDIDATE)[id: 0
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 1
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 2
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`(* ? ?)`x`#`#`5`#`#`1`#`#`(* ? ?)`x`#`#`(* ? ?)`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* (* (* x 5) 1) (* x (* 1 1))))
 nr_nodes: 12]
(CANDIDATE)[id: 3
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 4
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 5
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 6
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 7
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 8
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 9
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`1`#`#`(* ? ?)`5`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* (+ 1 (* 5 x)) 1))
 nr_nodes: 8]
(CANDIDATE)[id: 10
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`(+ ? ?)`(+ ? ?)`y`#`#`1`#`#`1`#`#`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* (+ (+ (+ y 1) 1) 5) y))
 nr_nodes: 10]
(CANDIDATE)[id: 11
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 1 y))
 nr_nodes: 4]
(CANDIDATE)[id: 12
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ 1 1))
 nr_nodes: 4]
(CANDIDATE)[id: 13
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 14
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 15
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 16
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 17
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 18
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 19
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 20
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`(+ ? ?)`(* ? ?)`y`#`#`5`#`#`(* ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 1 (+ (* y 5) (* x y))))
 nr_nodes: 10]
(CANDIDATE)[id: 21
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 22
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(* ? ?)`1`#`#`x`#`#`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (* (* 1 x) 5) y))
 nr_nodes: 8]
(CANDIDATE)[id: 23
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 24
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 25
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(+ ? ?)`1`#`#`5`#`#`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (+ 1 5) x) y))
 nr_nodes: 8]
(CANDIDATE)[id: 26
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 27
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* 1 5))
 nr_nodes: 4]
(CANDIDATE)[id: 28
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* y 1))
 nr_nodes: 4]
(CANDIDATE)[id: 29
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 30
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`y`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (* y 5) x))
 nr_nodes: 6]
(CANDIDATE)[id: 31
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 32
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`x`#`#`5`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* (* x 5) 5))
 nr_nodes: 6]
(CANDIDATE)[id: 33
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* x y))
 nr_nodes: 4]
(CANDIDATE)[id: 34
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 35
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 36
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 37
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 38
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 39
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 5 x))
 nr_nodes: 4]
(CANDIDATE)[id: 40
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 41
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 42
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 43
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 44
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ y 5))
 nr_nodes: 4]
(CANDIDATE)[id: 45
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 46
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 47
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* 5 1))
 nr_nodes: 4]
(CANDIDATE)[id: 48
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* x x))
 nr_nodes: 4]
(CANDIDATE)[id: 49
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`5`#`#`(+ ? ?)`5`#`#`x`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* (* 5 (+ 5 x)) 5))
 nr_nodes: 8]
(CANDIDATE)[id: 50
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 51
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 52
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 53
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 x))
 nr_nodes: 4]
(CANDIDATE)[id: 54
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* y 1))
 nr_nodes: 4]
(CANDIDATE)[id: 55
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 56
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 57
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 1 y))
 nr_nodes: 4]
(CANDIDATE)[id: 58
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* y 1))
 nr_nodes: 4]
(CANDIDATE)[id: 59
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 60
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 61
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`(+ ? ?)`x`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ x (+ x 5)))
 nr_nodes: 6]
(CANDIDATE)[id: 62
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 63
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 64
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 5 y))
 nr_nodes: 4]
(CANDIDATE)[id: 65
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 66
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 67
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 68
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ y 1))
 nr_nodes: 4]
(CANDIDATE)[id: 69
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`(+ ? ?)`(+ ? ?)`5`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 5 (+ (+ 5 1) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 70
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 71
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 72
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 73
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 74
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 75
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`(+ ? ?)`(+ ? ?)`1`#`#`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 5 (+ (+ 1 y) y)))
 nr_nodes: 8]
(CANDIDATE)[id: 76
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 77
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 5 y))
 nr_nodes: 4]
(CANDIDATE)[id: 78
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 79
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 80
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 81
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`(+ ? ?)`5`#`#`(+ ? ?)`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ y (+ 5 (+ y y))))
 nr_nodes: 8]
(CANDIDATE)[id: 82
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 83
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 84
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 1 y))
 nr_nodes: 4]
(CANDIDATE)[id: 85
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ y y))
 nr_nodes: 4]
(CANDIDATE)[id: 86
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 87
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`(+ ? ?)`x`#`#`y`#`#`(+ ? ?)`x`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (* (+ x y) (+ x 1)) x))
 nr_nodes: 10]
(CANDIDATE)[id: 88
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 89
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 90
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 91
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* x 5))
 nr_nodes: 4]
(CANDIDATE)[id: 92
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 93
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 94
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 95
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 96
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`(+ ? ?)`(+ ? ?)`1`#`#`x`#`#`(* ? ?)`5`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ y (+ (+ 1 x) (* 5 5))))
 nr_nodes: 10]
(CANDIDATE)[id: 97
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 98
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`(* ? ?)`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* y (* y 5)))
 nr_nodes: 6]
(CANDIDATE)[id: 99
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 100
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 101
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ 5 1))
 nr_nodes: 4]
(CANDIDATE)[id: 102
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 103
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 104
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`(* ? ?)`x`#`#`(* ? ?)`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 5 (* x (* 5 x))))
 nr_nodes: 8]
(CANDIDATE)[id: 105
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 106
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ y y))
 nr_nodes: 4]
(CANDIDATE)[id: 107
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 108
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 109
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 110
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 111
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ x 5))
 nr_nodes: 4]
(CANDIDATE)[id: 112
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 113
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 114
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`(* ? ?)`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 5 (* 5 x)))
 nr_nodes: 6]
(CANDIDATE)[id: 115
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 116
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ x 5))
 nr_nodes: 4]
(CANDIDATE)[id: 117
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`(+ ? ?)`(* ? ?)`y`#`#`x`#`#`(+ ? ?)`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ x (+ (* y x) (+ x x))))
 nr_nodes: 10]
(CANDIDATE)[id: 118
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 119
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 120
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`y`#`#`x`#`#`(* ? ?)`x`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* (+ y x) (* x 5)))
 nr_nodes: 8]
(CANDIDATE)[id: 121
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`5`#`#`5`#`#`(+ ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 5 5) (+ 1 x)))
 nr_nodes: 8]
(CANDIDATE)[id: 122
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`1`#`#`y`#`#`(+ ? ?)`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 1 y) (+ 5 x)))
 nr_nodes: 8]
(CANDIDATE)[id: 123
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`5`#`#`x`#`#`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ 5 x) y) 5))
 nr_nodes: 8]
(CANDIDATE)[id: 124
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 125
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 5 y))
 nr_nodes: 4]
(CANDIDATE)[id: 126
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 127
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 128
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 129
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 130
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 131
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 132
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 133
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 134
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 135
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ 5 5))
 nr_nodes: 4]
(CANDIDATE)[id: 136
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 137
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ x y))
 nr_nodes: 4]
(CANDIDATE)[id: 138
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`5`#`#`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (+ 5 y) x))
 nr_nodes: 6]
(CANDIDATE)[id: 139
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 140
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(* ? ?)`1`#`#`5`#`#`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ (* (* 1 5) 1) 5))
 nr_nodes: 8]
(CANDIDATE)[id: 141
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 142
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 143
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 144
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 145
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`5`#`#`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 5 5) y))
 nr_nodes: 6]
(CANDIDATE)[id: 146
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 147
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ 1 1))
 nr_nodes: 4]
(CANDIDATE)[id: 148
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 149
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 150
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`(+ ? ?)`(+ ? ?)`1`#`#`y`#`#`(* ? ?)`(* ? ?)`y`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 5 (+ (+ 1 y) (* (* y 1) x))))
 nr_nodes: 12]
(CANDIDATE)[id: 151
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 152
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 153
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 154
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 155
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 156
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 1 y))
 nr_nodes: 4]
(CANDIDATE)[id: 157
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`(* ? ?)`y`#`#`5`#`#`(* ? ?)`5`#`#`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* (* (* y 5) (* 5 1)) (+ (* x 5) y)))
 nr_nodes: 14]
(CANDIDATE)[id: 158
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 159
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 160
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 161
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* y 1))
 nr_nodes: 4]
(CANDIDATE)[id: 162
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`x`#`#`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (* x y) y))
 nr_nodes: 6]
(CANDIDATE)[id: 163
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 164
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 165
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(+ ? ?)`y`#`#`y`#`#`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (+ y y) y) 5))
 nr_nodes: 8]
(CANDIDATE)[id: 166
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 167
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 5 y))
 nr_nodes: 4]
(CANDIDATE)[id: 168
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`(* ? ?)`5`#`#`(+ ? ?)`x`#`#`x`#`#`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (+ (* 5 (+ x x)) y) x))
 nr_nodes: 10]
(CANDIDATE)[id: 169
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 170
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 171
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 172
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 173
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 174
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 1 y))
 nr_nodes: 4]
(CANDIDATE)[id: 175
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 176
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 177
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`5`#`#`5`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* (* 5 5) 1))
 nr_nodes: 6]
(CANDIDATE)[id: 178
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 179
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 180
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`(+ ? ?)`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* y (+ 5 x)))
 nr_nodes: 6]
(CANDIDATE)[id: 181
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* y y))
 nr_nodes: 4]
(CANDIDATE)[id: 182
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 183
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 184
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 1 y))
 nr_nodes: 4]
(CANDIDATE)[id: 185
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 186
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 187
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 188
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* y 5))
 nr_nodes: 4]
(CANDIDATE)[id: 189
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`1`#`#`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* (+ 1 1) 1))
 nr_nodes: 6]
(CANDIDATE)[id: 190
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 191
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* 1 1))
 nr_nodes: 4]
(CANDIDATE)[id: 192
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 193
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 194
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 195
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 196
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 197
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 198
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`(* ? ?)`(+ ? ?)`y`#`#`(* ? ?)`y`#`#`x`#`#`(* ? ?)`x`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 5 (* (+ y (* y x)) (* x y))))
 nr_nodes: 12]
(CANDIDATE)[id: 199
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 200
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 201
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 202
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 203
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 204
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* 1 1))
 nr_nodes: 4]
(CANDIDATE)[id: 205
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 206
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`5`#`#`(+ ? ?)`x`#`#`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 5 (+ x 5)) y))
 nr_nodes: 8]
(CANDIDATE)[id: 207
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 208
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* y y))
 nr_nodes: 4]
(CANDIDATE)[id: 209
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ 1 5))
 nr_nodes: 4]
(CANDIDATE)[id: 210
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 211
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`(* ? ?)`y`#`#`y`#`#`(+ ? ?)`y`#`#`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* (* (* y y) (+ y 5)) y))
 nr_nodes: 10]
(CANDIDATE)[id: 212
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 213
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 214
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 215
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`1`#`#`x`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 1 x) 5))
 nr_nodes: 6]
(CANDIDATE)[id: 216
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 217
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 218
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 219
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`(+ ? ?)`(* ? ?)`y`#`#`y`#`#`1`#`#`(+ ? ?)`(+ ? ?)`5`#`#`x`#`#`(* ? ?)`x`#`#`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* (+ (+ (* y y) 1) (+ (+ 5 x) (* x y))) y))
 nr_nodes: 16]
(CANDIDATE)[id: 220
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`(* ? ?)`x`#`#`(* ? ?)`x`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ 5 (* x (* x 5))))
 nr_nodes: 8]
(CANDIDATE)[id: 221
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 222
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ x 1))
 nr_nodes: 4]
(CANDIDATE)[id: 223
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 224
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 225
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 226
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 227
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`(* ? ?)`5`#`#`5`#`#`(* ? ?)`y`#`#`5`#`#`(+ ? ?)`y`#`#`(* ? ?)`5`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* (* (* 5 5) (* y 5)) (+ y (* 5 1))))
 nr_nodes: 14]
(CANDIDATE)[id: 228
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 229
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 230
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 231
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ x x))
 nr_nodes: 4]
(CANDIDATE)[id: 232
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 233
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 234
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 235
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`(+ ? ?)`x`#`#`x`#`#`1`#`#`(* ? ?)`(+ ? ?)`y`#`#`1`#`#`(* ? ?)`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (+ (+ x x) 1) (* (+ y 1) (* y x))))
 nr_nodes: 14]
(CANDIDATE)[id: 236
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 237
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 238
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 239
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 240
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 241
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 242
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 243
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 244
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 245
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 246
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 247
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 248
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 249
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 250
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* 1 5))
 nr_nodes: 4]
(CANDIDATE)[id: 251
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 252
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ y x))
 nr_nodes: 4]
(CANDIDATE)[id: 253
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 254
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 255
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 256
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 257
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 258
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 259
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 260
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 261
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 262
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 263
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 264
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* x x))
 nr_nodes: 4]
(CANDIDATE)[id: 265
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 266
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 267
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 268
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 269
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 270
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`1`#`#`(* ? ?)`x`#`#`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* (+ 1 (* x 1)) 1))
 nr_nodes: 8]
(CANDIDATE)[id: 271
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 272
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 273
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 274
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 1 x))
 nr_nodes: 4]
(CANDIDATE)[id: 275
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 276
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 277
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 278
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 279
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ y y))
 nr_nodes: 4]
(CANDIDATE)[id: 280
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 281
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 282
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 283
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 284
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 285
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 286
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 287
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`5`#`#`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ (* 5 y) 5))
 nr_nodes: 6]
(CANDIDATE)[id: 288
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`x`#`#`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* (+ x y) 5))
 nr_nodes: 6]
(CANDIDATE)[id: 289
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 290
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* 5 5))
 nr_nodes: 4]
(CANDIDATE)[id: 291
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 292
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 293
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 294
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ 1 5))
 nr_nodes: 4]
(CANDIDATE)[id: 295
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 296
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`5`#`#`(* ? ?)`x`#`#`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* (* 5 (* x 1)) 5))
 nr_nodes: 8]
(CANDIDATE)[id: 297
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ y x))
 nr_nodes: 4]
(CANDIDATE)[id: 298
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 299
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ y 1))
 nr_nodes: 4]
(CANDIDATE)[id: 300
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 301
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`5`#`#`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* (* 5 y) 5))
 nr_nodes: 6]
(CANDIDATE)[id: 302
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 303
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 304
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 305
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 306
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* y 1))
 nr_nodes: 4]
(CANDIDATE)[id: 307
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 308
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 309
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ x 5))
 nr_nodes: 4]
(CANDIDATE)[id: 310
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 311
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 312
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 313
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 314
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* 5 1))
 nr_nodes: 4]
(CANDIDATE)[id: 315
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(* ? ?)`y`#`#`1`#`#`(+ ? ?)`1`#`#`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (* (* y 1) (+ 1 5)) y))
 nr_nodes: 10]
(CANDIDATE)[id: 316
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 317
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 x))
 nr_nodes: 4]
(CANDIDATE)[id: 318
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 319
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 320
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 321
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 322
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`1`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (+ 1 5) x))
 nr_nodes: 6]
(CANDIDATE)[id: 323
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 324
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 325
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 326
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 327
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 328
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 329
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`y`#`#`5`#`#`y`#`#`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* (+ (* (+ y 5) y) y) 5))
 nr_nodes: 10]
(CANDIDATE)[id: 330
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* 1 1))
 nr_nodes: 4]
(CANDIDATE)[id: 331
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 332
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* 1 5))
 nr_nodes: 4]
(CANDIDATE)[id: 333
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 334
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 335
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 336
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 337
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 338
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 339
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`(+ ? ?)`(+ ? ?)`5`#`#`x`#`#`(* ? ?)`y`#`#`y`#`#`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (* (+ (+ 5 x) (* y y)) 5) x))
 nr_nodes: 12]
(CANDIDATE)[id: 340
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 341
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* y 5))
 nr_nodes: 4]
(CANDIDATE)[id: 342
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 343
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 344
 encoding: (defun my_func (x y) ?)`(* ? ?)`(* ? ?)`1`#`#`(+ ? ?)`(* ? ?)`x`#`#`1`#`#`(* ? ?)`5`#`#`x`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* (* 1 (+ (* x 1) (* 5 x))) 5))
 nr_nodes: 12]
(CANDIDATE)[id: 345
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(+ ? ?)`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (+ x x)))
 nr_nodes: 6]
(CANDIDATE)[id: 346
 encoding: (defun my_func (x y) ?)`(+ ? ?)`x`#`#`(* ? ?)`1`#`#`(* ? ?)`(+ ? ?)`x`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ x (* 1 (* (+ x x) 1))))
 nr_nodes: 10]
(CANDIDATE)[id: 347
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 348
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 349
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 350
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 351
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 352
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 353
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 354
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 355
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(* ? ?)`(+ ? ?)`1`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (* (+ 1 1) x)))
 nr_nodes: 8]
(CANDIDATE)[id: 356
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* 1 x))
 nr_nodes: 4]
(CANDIDATE)[id: 357
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 358
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* y x))
 nr_nodes: 4]
(CANDIDATE)[id: 359
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 360
 encoding: (defun my_func (x y) ?)`(* ? ?)`1`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* 1 y))
 nr_nodes: 4]
(CANDIDATE)[id: 361
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 5 y))
 nr_nodes: 4]
(CANDIDATE)[id: 362
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 363
 encoding: (defun my_func (x y) ?)`(* ? ?)`y`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* y 1))
 nr_nodes: 4]
(CANDIDATE)[id: 364
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 365
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* x x))
 nr_nodes: 4]
(CANDIDATE)[id: 366
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 367
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 368
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 369
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 5 y))
 nr_nodes: 4]
(CANDIDATE)[id: 370
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 371
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`(+ ? ?)`x`#`#`1`#`#`5`#`#`(+ ? ?)`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (* (+ (+ x 1) 5) (+ y y)))
 nr_nodes: 10]
(CANDIDATE)[id: 372
 encoding: (defun my_func (x y) ?)`(* ? ?)`5`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* 5 5))
 nr_nodes: 4]
(CANDIDATE)[id: 373
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 374
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 375
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`(* ? ?)`(* ? ?)`5`#`#`(+ ? ?)`5`#`#`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 5 (* (* 5 (+ 5 5)) y)))
 nr_nodes: 10]
(CANDIDATE)[id: 376
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 377
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 378
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 379
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 380
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 381
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* x 5))
 nr_nodes: 4]
(CANDIDATE)[id: 382
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (+ 5 1))
 nr_nodes: 4]
(CANDIDATE)[id: 383
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 384
 encoding: (defun my_func (x y) ?)`y`#`#`#
 s_expr: (defun my_func (x y) y)
 nr_nodes: 2]
(CANDIDATE)[id: 385
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 386
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`y`#`#`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (+ y y) y))
 nr_nodes: 6]
(CANDIDATE)[id: 387
 encoding: (defun my_func (x y) ?)`(* ? ?)`x`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (* x 5))
 nr_nodes: 4]
(CANDIDATE)[id: 388
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 389
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 390
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 391
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 392
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 393
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 394
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 5 x))
 nr_nodes: 4]
(CANDIDATE)[id: 395
 encoding: (defun my_func (x y) ?)`1`#`#`#
 s_expr: (defun my_func (x y) 1)
 nr_nodes: 2]
(CANDIDATE)[id: 396
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 397
 encoding: (defun my_func (x y) ?)`x`#`#`#
 s_expr: (defun my_func (x y) x)
 nr_nodes: 2]
(CANDIDATE)[id: 398
 encoding: (defun my_func (x y) ?)`5`#`#`#
 s_expr: (defun my_func (x y) 5)
 nr_nodes: 2]
(CANDIDATE)[id: 399
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ y 5))
 nr_nodes: 4]
[Generation 0]
[Computing fitness]
[(1.25, 121), (1.25, 270), (1.125, 9), (1.125, 75), (1.125, 81), (1.125, 165), (1.125, 355), (1.0, 22), (1.0, 25), (1.0, 49), (1.0, 69), (1.0, 104), (1.0, 120), (1.0, 122), (1.0, 123), (1.0, 140), (1.0, 206), (1.0, 220), (1.0, 296), (0.875, 215), (0.625, 10), (0.625, 20), (0.625, 61), (0.625, 87), (0.625, 117), (0.625, 145), (0.625, 168), (0.625, 180), (0.625, 189), (0.625, 211), (0.625, 315), (0.625, 345), (0.5, 30), (0.5, 32), (0.5, 53), (0.5, 96), (0.5, 98), (0.5, 114), (0.5, 138), (0.5, 162), (0.5, 177), (0.5, 222), (0.5, 287), (0.5, 288), (0.5, 301), (0.5, 317), (0.5, 322), (0.5, 329), (0.5, 346), (0.5, 371), (0.5, 375), (0.5, 386), (0.375, 12), (0.375, 44), (0.375, 57), (0.375, 68), (0.375, 84), (0.375, 101), (0.375, 147), (0.375, 156), (0.375, 167), (0.375, 191), (0.375, 198), (0.375, 204), (0.375, 209), (0.375, 231), (0.375, 294), (0.375, 299), (0.375, 330), (0.375, 361), (0.375, 369), (0.375, 382), (0.375, 399), (0.29166666666666663, 3), (0.29166666666666663, 8), (0.29166666666666663, 14), (0.29166666666666663, 21), (0.29166666666666663, 24), (0.29166666666666663, 34), (0.29166666666666663, 45), (0.29166666666666663, 46), (0.29166666666666663, 56), (0.29166666666666663, 59), (0.29166666666666663, 63), (0.29166666666666663, 97), (0.29166666666666663, 99), (0.29166666666666663, 107), (0.29166666666666663, 118), (0.29166666666666663, 139), (0.29166666666666663, 142), (0.29166666666666663, 163), (0.29166666666666663, 166), (0.29166666666666663, 171), (0.29166666666666663, 182), (0.29166666666666663, 183), (0.29166666666666663, 186), (0.29166666666666663, 190), (0.29166666666666663, 192), (0.29166666666666663, 196), (0.29166666666666663, 197), (0.29166666666666663, 203), (0.29166666666666663, 207), (0.29166666666666663, 212), (0.29166666666666663, 223), (0.29166666666666663, 228), (0.29166666666666663, 235), (0.29166666666666663, 238), (0.29166666666666663, 246), (0.29166666666666663, 247), (0.29166666666666663, 248), (0.29166666666666663, 249), (0.29166666666666663, 257), (0.29166666666666663, 258), (0.29166666666666663, 259), (0.29166666666666663, 260), (0.29166666666666663, 284), (0.29166666666666663, 292), (0.29166666666666663, 308), (0.29166666666666663, 311), (0.29166666666666663, 337), (0.29166666666666663, 342), (0.29166666666666663, 343), (0.29166666666666663, 351), (0.29166666666666663, 352), (0.29166666666666663, 353), (0.29166666666666663, 362), (0.29166666666666663, 366), (0.29166666666666663, 370), (0.29166666666666663, 373), (0.29166666666666663, 379), (0.29166666666666663, 385), (0.29166666666666663, 395), (0.25, 2), (0.25, 11), (0.25, 27), (0.25, 28), (0.25, 33), (0.25, 39), (0.25, 47), (0.25, 48), (0.25, 54), (0.25, 58), (0.25, 64), (0.25, 77), (0.25, 85), (0.25, 91), (0.25, 106), (0.25, 111), (0.25, 116), (0.25, 125), (0.25, 135), (0.25, 137), (0.25, 150), (0.25, 161), (0.25, 174), (0.25, 181), (0.25, 184), (0.25, 188), (0.25, 208), (0.25, 250), (0.25, 252), (0.25, 264), (0.25, 274), (0.25, 279), (0.25, 290), (0.25, 297), (0.25, 306), (0.25, 309), (0.25, 314), (0.25, 332), (0.25, 339), (0.25, 341), (0.25, 344), (0.25, 356), (0.25, 358), (0.25, 360), (0.25, 363), (0.25, 365), (0.25, 372), (0.25, 381), (0.25, 387), (0.25, 394), (0.16666666666666666, 0), (0.16666666666666666, 1), (0.16666666666666666, 4), (0.16666666666666666, 5), (0.16666666666666666, 6), (0.16666666666666666, 7), (0.16666666666666666, 13), (0.16666666666666666, 15), (0.16666666666666666, 16), (0.16666666666666666, 17), (0.16666666666666666, 18), (0.16666666666666666, 19), (0.16666666666666666, 23), (0.16666666666666666, 26), (0.16666666666666666, 29), (0.16666666666666666, 31), (0.16666666666666666, 35), (0.16666666666666666, 36), (0.16666666666666666, 37), (0.16666666666666666, 38), (0.16666666666666666, 40), (0.16666666666666666, 41), (0.16666666666666666, 42), (0.16666666666666666, 43), (0.16666666666666666, 50), (0.16666666666666666, 51), (0.16666666666666666, 52), (0.16666666666666666, 55), (0.16666666666666666, 60), (0.16666666666666666, 62), (0.16666666666666666, 65), (0.16666666666666666, 66), (0.16666666666666666, 67), (0.16666666666666666, 70), (0.16666666666666666, 71), (0.16666666666666666, 72), (0.16666666666666666, 73), (0.16666666666666666, 74), (0.16666666666666666, 76), (0.16666666666666666, 78), (0.16666666666666666, 79), (0.16666666666666666, 80), (0.16666666666666666, 82), (0.16666666666666666, 83), (0.16666666666666666, 86), (0.16666666666666666, 88), (0.16666666666666666, 89), (0.16666666666666666, 90), (0.16666666666666666, 92), (0.16666666666666666, 93), (0.16666666666666666, 94), (0.16666666666666666, 95), (0.16666666666666666, 100), (0.16666666666666666, 102), (0.16666666666666666, 103), (0.16666666666666666, 105), (0.16666666666666666, 108), (0.16666666666666666, 109), (0.16666666666666666, 110), (0.16666666666666666, 112), (0.16666666666666666, 113), (0.16666666666666666, 115), (0.16666666666666666, 119), (0.16666666666666666, 124), (0.16666666666666666, 126), (0.16666666666666666, 127), (0.16666666666666666, 128), (0.16666666666666666, 129), (0.16666666666666666, 130), (0.16666666666666666, 131), (0.16666666666666666, 132), (0.16666666666666666, 133), (0.16666666666666666, 134), (0.16666666666666666, 136), (0.16666666666666666, 141), (0.16666666666666666, 143), (0.16666666666666666, 144), (0.16666666666666666, 146), (0.16666666666666666, 148), (0.16666666666666666, 149), (0.16666666666666666, 151), (0.16666666666666666, 152), (0.16666666666666666, 153), (0.16666666666666666, 154), (0.16666666666666666, 155), (0.16666666666666666, 157), (0.16666666666666666, 158), (0.16666666666666666, 159), (0.16666666666666666, 160), (0.16666666666666666, 164), (0.16666666666666666, 169), (0.16666666666666666, 170), (0.16666666666666666, 172), (0.16666666666666666, 173), (0.16666666666666666, 175), (0.16666666666666666, 176), (0.16666666666666666, 178), (0.16666666666666666, 179), (0.16666666666666666, 185), (0.16666666666666666, 187), (0.16666666666666666, 193), (0.16666666666666666, 194), (0.16666666666666666, 195), (0.16666666666666666, 199), (0.16666666666666666, 200), (0.16666666666666666, 201), (0.16666666666666666, 202), (0.16666666666666666, 205), (0.16666666666666666, 210), (0.16666666666666666, 213), (0.16666666666666666, 214), (0.16666666666666666, 216), (0.16666666666666666, 217), (0.16666666666666666, 218), (0.16666666666666666, 221), (0.16666666666666666, 224), (0.16666666666666666, 225), (0.16666666666666666, 226), (0.16666666666666666, 227), (0.16666666666666666, 229), (0.16666666666666666, 230), (0.16666666666666666, 232), (0.16666666666666666, 233), (0.16666666666666666, 234), (0.16666666666666666, 236), (0.16666666666666666, 237), (0.16666666666666666, 239), (0.16666666666666666, 240), (0.16666666666666666, 241), (0.16666666666666666, 242), (0.16666666666666666, 243), (0.16666666666666666, 244), (0.16666666666666666, 245), (0.16666666666666666, 251), (0.16666666666666666, 253), (0.16666666666666666, 254), (0.16666666666666666, 255), (0.16666666666666666, 256), (0.16666666666666666, 261), (0.16666666666666666, 262), (0.16666666666666666, 263), (0.16666666666666666, 265), (0.16666666666666666, 266), (0.16666666666666666, 267), (0.16666666666666666, 268), (0.16666666666666666, 269), (0.16666666666666666, 271), (0.16666666666666666, 272), (0.16666666666666666, 273), (0.16666666666666666, 275), (0.16666666666666666, 276), (0.16666666666666666, 277), (0.16666666666666666, 278), (0.16666666666666666, 280), (0.16666666666666666, 281), (0.16666666666666666, 282), (0.16666666666666666, 283), (0.16666666666666666, 285), (0.16666666666666666, 286), (0.16666666666666666, 289), (0.16666666666666666, 291), (0.16666666666666666, 293), (0.16666666666666666, 295), (0.16666666666666666, 298), (0.16666666666666666, 300), (0.16666666666666666, 302), (0.16666666666666666, 303), (0.16666666666666666, 304), (0.16666666666666666, 305), (0.16666666666666666, 307), (0.16666666666666666, 310), (0.16666666666666666, 312), (0.16666666666666666, 313), (0.16666666666666666, 316), (0.16666666666666666, 318), (0.16666666666666666, 319), (0.16666666666666666, 320), (0.16666666666666666, 321), (0.16666666666666666, 323), (0.16666666666666666, 324), (0.16666666666666666, 325), (0.16666666666666666, 326), (0.16666666666666666, 327), (0.16666666666666666, 328), (0.16666666666666666, 331), (0.16666666666666666, 333), (0.16666666666666666, 334), (0.16666666666666666, 335), (0.16666666666666666, 336), (0.16666666666666666, 338), (0.16666666666666666, 340), (0.16666666666666666, 347), (0.16666666666666666, 348), (0.16666666666666666, 349), (0.16666666666666666, 350), (0.16666666666666666, 354), (0.16666666666666666, 357), (0.16666666666666666, 359), (0.16666666666666666, 364), (0.16666666666666666, 367), (0.16666666666666666, 368), (0.16666666666666666, 374), (0.16666666666666666, 376), (0.16666666666666666, 377), (0.16666666666666666, 378), (0.16666666666666666, 380), (0.16666666666666666, 383), (0.16666666666666666, 384), (0.16666666666666666, 388), (0.16666666666666666, 389), (0.16666666666666666, 390), (0.16666666666666666, 391), (0.16666666666666666, 392), (0.16666666666666666, 393), (0.16666666666666666, 396), (0.16666666666666666, 397), (0.16666666666666666, 398), (0.125, 219)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 121
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`5`#`#`5`#`#`(+ ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 5 5) (+ 1 x)))
 nr_nodes: 8]
(CANDIDATE)[id: 270
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`1`#`#`(* ? ?)`x`#`#`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* (+ 1 (* x 1)) 1))
 nr_nodes: 8]
(CANDIDATE)[id: 9
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`1`#`#`(* ? ?)`5`#`#`x`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* (+ 1 (* 5 x)) 1))
 nr_nodes: 8]
(CANDIDATE)[id: 75
 encoding: (defun my_func (x y) ?)`(+ ? ?)`5`#`#`(+ ? ?)`(+ ? ?)`1`#`#`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ 5 (+ (+ 1 y) y)))
 nr_nodes: 8]
(CANDIDATE)[id: 81
 encoding: (defun my_func (x y) ?)`(+ ? ?)`y`#`#`(+ ? ?)`5`#`#`(+ ? ?)`y`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ y (+ 5 (+ y y))))
 nr_nodes: 8]
[Generation 1]
[Computing fitness]
[(1.375, 410), (1.25, 121), (1.25, 270), (1.25, 400), (1.125, 355), (1.125, 406), (1.125, 75), (1.125, 81), (1.125, 165), (1.125, 9), (1.125, 404), (1.0, 22), (1.0, 104), (1.0, 49), (1.0, 220), (1.0, 140), (1.0, 69), (1.0, 206), (1.0, 123), (1.0, 417), (1.0, 122), (1.0, 401), (1.0, 25), (1.0, 120), (1.0, 296), (1.0, 407), (0.875, 215), (0.625, 10), (0.625, 315), (0.625, 117), (0.625, 20), (0.625, 189), (0.625, 145), (0.625, 211), (0.625, 87), (0.625, 61), (0.625, 180), (0.625, 411), (0.625, 418), (0.625, 168), (0.625, 416), (0.625, 345), (0.5, 386), (0.5, 96), (0.5, 177), (0.5, 423), (0.5, 322), (0.5, 287), (0.5, 317), (0.5, 375), (0.5, 53), (0.5, 222), (0.5, 409), (0.5, 413), (0.5, 138), (0.5, 419), (0.5, 431), (0.5, 421), (0.5, 329), (0.5, 32), (0.5, 420), (0.5, 98), (0.5, 432), (0.5, 114), (0.5, 405), (0.5, 30), (0.5, 371), (0.5, 162), (0.5, 346), (0.5, 427), (0.5, 288), (0.5, 301), (0.5, 433), (0.375, 446), (0.375, 402), (0.375, 101), (0.375, 445), (0.375, 198), (0.375, 403), (0.375, 204), (0.375, 299), (0.375, 12), (0.375, 84), (0.375, 399), (0.375, 434), (0.375, 382), (0.375, 209), (0.375, 330), (0.375, 147), (0.375, 231), (0.375, 369), (0.375, 442), (0.375, 156), (0.375, 438), (0.375, 57), (0.375, 361), (0.375, 439), (0.375, 44), (0.375, 191), (0.375, 437), (0.375, 444), (0.375, 167), (0.375, 294), (0.375, 443), (0.375, 68), (0.375, 436), (0.375, 498), (0.29166666666666663, 466), (0.29166666666666663, 163), (0.29166666666666663, 471), (0.29166666666666663, 379), (0.29166666666666663, 212), (0.29166666666666663, 223), (0.29166666666666663, 453), (0.29166666666666663, 353), (0.29166666666666663, 473), (0.29166666666666663, 351), (0.29166666666666663, 99), (0.29166666666666663, 190), (0.29166666666666663, 352), (0.29166666666666663, 24), (0.29166666666666663, 385), (0.29166666666666663, 308), (0.29166666666666663, 207), (0.29166666666666663, 107), (0.29166666666666663, 464), (0.29166666666666663, 238), (0.29166666666666663, 3), (0.29166666666666663, 460), (0.29166666666666663, 228), (0.29166666666666663, 235), (0.29166666666666663, 142), (0.29166666666666663, 451), (0.29166666666666663, 247), (0.29166666666666663, 192), (0.29166666666666663, 46), (0.29166666666666663, 482), (0.29166666666666663, 342), (0.29166666666666663, 455), (0.29166666666666663, 259), (0.29166666666666663, 456), (0.29166666666666663, 485), (0.29166666666666663, 465), (0.29166666666666663, 487), (0.29166666666666663, 488), (0.29166666666666663, 366), (0.29166666666666663, 257), (0.29166666666666663, 468), (0.29166666666666663, 292), (0.29166666666666663, 480), (0.29166666666666663, 449), (0.29166666666666663, 249), (0.29166666666666663, 373), (0.29166666666666663, 395), (0.29166666666666663, 459), (0.29166666666666663, 474), (0.29166666666666663, 139), (0.29166666666666663, 462), (0.29166666666666663, 171), (0.29166666666666663, 183), (0.29166666666666663, 362), (0.29166666666666663, 21), (0.29166666666666663, 186), (0.29166666666666663, 469), (0.29166666666666663, 284), (0.29166666666666663, 478), (0.29166666666666663, 458), (0.29166666666666663, 97), (0.29166666666666663, 8), (0.29166666666666663, 477), (0.29166666666666663, 118), (0.29166666666666663, 203), (0.29166666666666663, 260), (0.29166666666666663, 59), (0.29166666666666663, 248), (0.29166666666666663, 34), (0.29166666666666663, 337), (0.29166666666666663, 370), (0.29166666666666663, 448), (0.29166666666666663, 45), (0.29166666666666663, 258), (0.29166666666666663, 197), (0.29166666666666663, 14), (0.29166666666666663, 489), (0.29166666666666663, 483), (0.29166666666666663, 182), (0.29166666666666663, 454), (0.29166666666666663, 63), (0.29166666666666663, 196), (0.29166666666666663, 166), (0.29166666666666663, 311), (0.29166666666666663, 56), (0.29166666666666663, 246), (0.29166666666666663, 476), (0.29166666666666663, 343), (0.25, 339), (0.25, 495), (0.25, 208), (0.25, 491), (0.25, 77), (0.25, 174), (0.25, 493), (0.25, 161), (0.25, 356), (0.25, 48), (0.25, 39), (0.25, 135), (0.25, 106), (0.25, 341), (0.25, 372), (0.25, 414), (0.25, 250), (0.25, 188), (0.25, 496), (0.25, 290), (0.25, 2), (0.25, 28), (0.25, 492), (0.25, 358), (0.25, 33), (0.25, 425), (0.25, 181), (0.25, 64), (0.25, 274), (0.25, 306), (0.25, 314), (0.25, 494), (0.25, 387), (0.25, 332), (0.25, 252), (0.25, 137), (0.25, 111), (0.25, 91), (0.25, 344), (0.25, 279), (0.25, 309), (0.25, 429), (0.25, 497), (0.25, 47), (0.25, 125), (0.25, 365), (0.25, 184), (0.25, 297), (0.25, 58), (0.25, 441), (0.25, 490), (0.25, 394), (0.25, 363), (0.25, 85), (0.25, 360), (0.25, 381), (0.25, 150), (0.25, 11), (0.25, 264), (0.25, 54), (0.25, 27), (0.25, 116), (0.16666666666666666, 29), (0.16666666666666666, 173), (0.16666666666666666, 51), (0.16666666666666666, 70), (0.16666666666666666, 17), (0.16666666666666666, 129), (0.16666666666666666, 243), (0.16666666666666666, 230), (0.16666666666666666, 15), (0.16666666666666666, 88), (0.16666666666666666, 151), (0.16666666666666666, 110), (0.16666666666666666, 157), (0.16666666666666666, 78), (0.16666666666666666, 155), (0.16666666666666666, 93), (0.16666666666666666, 266), (0.16666666666666666, 62), (0.16666666666666666, 263), (0.16666666666666666, 71), (0.16666666666666666, 154), (0.16666666666666666, 217), (0.16666666666666666, 92), (0.16666666666666666, 41), (0.16666666666666666, 205), (0.16666666666666666, 179), (0.16666666666666666, 0), (0.16666666666666666, 50), (0.16666666666666666, 31), (0.16666666666666666, 200), (0.16666666666666666, 141), (0.16666666666666666, 60), (0.16666666666666666, 239), (0.16666666666666666, 102), (0.16666666666666666, 187), (0.16666666666666666, 108), (0.16666666666666666, 55), (0.16666666666666666, 193), (0.16666666666666666, 19), (0.16666666666666666, 152), (0.16666666666666666, 74), (0.16666666666666666, 234), (0.16666666666666666, 175), (0.16666666666666666, 67), (0.16666666666666666, 95), (0.16666666666666666, 94), (0.16666666666666666, 119), (0.16666666666666666, 42), (0.16666666666666666, 172), (0.16666666666666666, 79), (0.16666666666666666, 113), (0.16666666666666666, 227), (0.16666666666666666, 66), (0.16666666666666666, 83), (0.16666666666666666, 241), (0.16666666666666666, 153), (0.16666666666666666, 131), (0.16666666666666666, 251), (0.16666666666666666, 164), (0.16666666666666666, 16), (0.16666666666666666, 26), (0.16666666666666666, 65), (0.16666666666666666, 4), (0.16666666666666666, 229), (0.16666666666666666, 237), (0.16666666666666666, 195), (0.16666666666666666, 130), (0.16666666666666666, 89), (0.16666666666666666, 244), (0.16666666666666666, 185), (0.16666666666666666, 226), (0.16666666666666666, 72), (0.16666666666666666, 149), (0.16666666666666666, 221), (0.16666666666666666, 35), (0.16666666666666666, 254), (0.16666666666666666, 255), (0.16666666666666666, 82), (0.16666666666666666, 132), (0.16666666666666666, 201), (0.16666666666666666, 170), (0.16666666666666666, 144), (0.16666666666666666, 38), (0.16666666666666666, 90), (0.16666666666666666, 176), (0.16666666666666666, 169), (0.16666666666666666, 128), (0.16666666666666666, 232), (0.16666666666666666, 5), (0.16666666666666666, 143), (0.16666666666666666, 109), (0.16666666666666666, 148), (0.16666666666666666, 36), (0.16666666666666666, 225), (0.16666666666666666, 160), (0.16666666666666666, 146), (0.16666666666666666, 199), (0.16666666666666666, 202), (0.16666666666666666, 18), (0.16666666666666666, 224), (0.16666666666666666, 236), (0.16666666666666666, 37), (0.16666666666666666, 253), (0.16666666666666666, 218), (0.16666666666666666, 105), (0.16666666666666666, 6), (0.16666666666666666, 76), (0.16666666666666666, 13), (0.16666666666666666, 242), (0.16666666666666666, 159), (0.16666666666666666, 126), (0.16666666666666666, 43), (0.16666666666666666, 80), (0.16666666666666666, 100), (0.16666666666666666, 7), (0.16666666666666666, 52), (0.16666666666666666, 262), (0.16666666666666666, 265), (0.16666666666666666, 115), (0.16666666666666666, 127), (0.16666666666666666, 112), (0.16666666666666666, 210), (0.16666666666666666, 23), (0.16666666666666666, 245), (0.16666666666666666, 214), (0.16666666666666666, 256), (0.16666666666666666, 73), (0.16666666666666666, 1), (0.16666666666666666, 216), (0.16666666666666666, 194), (0.16666666666666666, 134), (0.16666666666666666, 103), (0.16666666666666666, 178), (0.16666666666666666, 136), (0.16666666666666666, 158), (0.16666666666666666, 213), (0.16666666666666666, 86), (0.16666666666666666, 261), (0.16666666666666666, 233), (0.16666666666666666, 40), (0.16666666666666666, 240), (0.16666666666666666, 133), (0.16666666666666666, 124)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 410
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`1`#`#`(* ? ?)`x`#`#`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 1 (* x 1)) 5))
 nr_nodes: 8]
(CANDIDATE)[id: 121
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`5`#`#`5`#`#`(+ ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 5 5) (+ 1 x)))
 nr_nodes: 8]
(CANDIDATE)[id: 270
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`1`#`#`(* ? ?)`x`#`#`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* (+ 1 (* x 1)) 1))
 nr_nodes: 8]
(CANDIDATE)[id: 400
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`1`#`#`5`#`#`(+ ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (+ 1 5) (+ 1 x)))
 nr_nodes: 8]
(CANDIDATE)[id: 355
 encoding: (defun my_func (x y) ?)`(+ ? ?)`1`#`#`(* ? ?)`(+ ? ?)`1`#`#`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ 1 (* (+ 1 1) x)))
 nr_nodes: 8]
[Generation 2]
[Computing fitness]
[(1.5, 536), (1.375, 410), (1.25, 121), (1.25, 400), (1.25, 270), (1.25, 510), (1.25, 541), (1.125, 9), (1.125, 406), (1.125, 81), (1.125, 355), (1.125, 165), (1.125, 404), (1.125, 75), (1.0, 123), (1.0, 104), (1.0, 522), (1.0, 407), (1.0, 140), (1.0, 499), (1.0, 122), (1.0, 538), (1.0, 220), (1.0, 401), (1.0, 69), (1.0, 417), (1.0, 22), (1.0, 25), (1.0, 206), (1.0, 509), (1.0, 49), (1.0, 296), (1.0, 120), (1.0, 506), (1.0, 524), (0.875, 215), (0.875, 525), (0.75, 501), (0.75, 514), (0.625, 500), (0.625, 117), (0.625, 542), (0.625, 416), (0.625, 10), (0.625, 418), (0.625, 520), (0.625, 512), (0.625, 502), (0.625, 315), (0.625, 145), (0.625, 180), (0.625, 533), (0.625, 189), (0.625, 168), (0.625, 345), (0.625, 518), (0.625, 20), (0.625, 87), (0.625, 411), (0.625, 61), (0.625, 211), (0.5, 114), (0.5, 371), (0.5, 515), (0.5, 409), (0.5, 539), (0.5, 432), (0.5, 30), (0.5, 288), (0.5, 419), (0.5, 537), (0.5, 317), (0.5, 287), (0.5, 423), (0.5, 413), (0.5, 53), (0.5, 301), (0.5, 32), (0.5, 529), (0.5, 431), (0.5, 138), (0.5, 535), (0.5, 177), (0.5, 427), (0.5, 322), (0.5, 532), (0.5, 386), (0.5, 527), (0.5, 405), (0.5, 521), (0.5, 162), (0.5, 421), (0.5, 346), (0.5, 329), (0.5, 540), (0.5, 504), (0.5, 516), (0.5, 222), (0.5, 433), (0.5, 98), (0.5, 420), (0.5, 375), (0.5, 96), (0.5, 543), (0.375, 437), (0.375, 12), (0.375, 445), (0.375, 550), (0.375, 545), (0.375, 439), (0.375, 556), (0.375, 558), (0.375, 167), (0.375, 198), (0.375, 442), (0.375, 561), (0.375, 563), (0.375, 549), (0.375, 559), (0.375, 361), (0.375, 156), (0.375, 294), (0.375, 204), (0.375, 68), (0.375, 191), (0.375, 369), (0.375, 382), (0.375, 444), (0.375, 555), (0.375, 399), (0.375, 402), (0.375, 57), (0.375, 553), (0.375, 498), (0.375, 546), (0.375, 438), (0.375, 403), (0.375, 147), (0.375, 330), (0.375, 436), (0.375, 231), (0.375, 299), (0.375, 209), (0.375, 547), (0.375, 443), (0.375, 101), (0.375, 84), (0.375, 544), (0.375, 44), (0.375, 446), (0.375, 434), (0.29166666666666663, 370), (0.29166666666666663, 480), (0.29166666666666663, 464), (0.29166666666666663, 448), (0.29166666666666663, 63), (0.29166666666666663, 488), (0.29166666666666663, 24), (0.29166666666666663, 203), (0.29166666666666663, 485), (0.29166666666666663, 247), (0.29166666666666663, 56), (0.29166666666666663, 3), (0.29166666666666663, 342), (0.29166666666666663, 379), (0.29166666666666663, 466), (0.29166666666666663, 462), (0.29166666666666663, 471), (0.29166666666666663, 482), (0.29166666666666663, 578), (0.29166666666666663, 182), (0.29166666666666663, 564), (0.29166666666666663, 573), (0.29166666666666663, 99), (0.29166666666666663, 260), (0.29166666666666663, 59), (0.29166666666666663, 366), (0.29166666666666663, 468), (0.29166666666666663, 566), (0.29166666666666663, 385), (0.29166666666666663, 473), (0.29166666666666663, 458), (0.29166666666666663, 477), (0.29166666666666663, 212), (0.29166666666666663, 207), (0.29166666666666663, 453), (0.29166666666666663, 337), (0.29166666666666663, 21), (0.29166666666666663, 223), (0.29166666666666663, 246), (0.29166666666666663, 587), (0.29166666666666663, 353), (0.29166666666666663, 163), (0.29166666666666663, 478), (0.29166666666666663, 483), (0.29166666666666663, 228), (0.29166666666666663, 190), (0.29166666666666663, 455), (0.29166666666666663, 591), (0.29166666666666663, 580), (0.29166666666666663, 575), (0.29166666666666663, 45), (0.29166666666666663, 351), (0.29166666666666663, 465), (0.29166666666666663, 572), (0.29166666666666663, 489), (0.29166666666666663, 487), (0.29166666666666663, 284), (0.29166666666666663, 197), (0.29166666666666663, 196), (0.29166666666666663, 459), (0.29166666666666663, 171), (0.29166666666666663, 258), (0.29166666666666663, 249), (0.29166666666666663, 581), (0.29166666666666663, 576), (0.29166666666666663, 362), (0.29166666666666663, 248), (0.29166666666666663, 292), (0.29166666666666663, 34), (0.29166666666666663, 474), (0.29166666666666663, 451), (0.29166666666666663, 567), (0.29166666666666663, 97), (0.29166666666666663, 259), (0.29166666666666663, 589), (0.29166666666666663, 373), (0.29166666666666663, 456), (0.29166666666666663, 352), (0.29166666666666663, 107), (0.29166666666666663, 46), (0.29166666666666663, 582), (0.29166666666666663, 14), (0.29166666666666663, 192), (0.29166666666666663, 592), (0.29166666666666663, 343), (0.29166666666666663, 583), (0.29166666666666663, 238), (0.29166666666666663, 118), (0.29166666666666663, 469), (0.29166666666666663, 142), (0.29166666666666663, 308), (0.29166666666666663, 460), (0.29166666666666663, 166), (0.29166666666666663, 586), (0.29166666666666663, 8), (0.29166666666666663, 584), (0.29166666666666663, 571), (0.29166666666666663, 139), (0.29166666666666663, 449), (0.29166666666666663, 311), (0.29166666666666663, 569), (0.29166666666666663, 257), (0.29166666666666663, 183), (0.29166666666666663, 186), (0.29166666666666663, 476), (0.29166666666666663, 574), (0.29166666666666663, 454), (0.29166666666666663, 570), (0.29166666666666663, 235), (0.29166666666666663, 395), (0.25, 39), (0.25, 252), (0.25, 188), (0.25, 28), (0.25, 64), (0.25, 125), (0.25, 27), (0.25, 358), (0.25, 106), (0.25, 264), (0.25, 11), (0.25, 135), (0.25, 494), (0.25, 2), (0.25, 557), (0.25, 363), (0.25, 332), (0.25, 48), (0.25, 414), (0.25, 341), (0.25, 174), (0.25, 290), (0.25, 297), (0.25, 365), (0.25, 47), (0.25, 111), (0.25, 274), (0.25, 314), (0.25, 306), (0.25, 429), (0.25, 77), (0.25, 184), (0.25, 507), (0.25, 85), (0.25, 181), (0.25, 58), (0.25, 387), (0.25, 492), (0.25, 33), (0.25, 279), (0.25, 360), (0.25, 344), (0.25, 497), (0.25, 54), (0.25, 496), (0.25, 554), (0.25, 491), (0.25, 339), (0.25, 495), (0.25, 161), (0.25, 356), (0.25, 394), (0.25, 552), (0.25, 425), (0.25, 116), (0.25, 208), (0.25, 250), (0.25, 137), (0.25, 441), (0.25, 381), (0.25, 526), (0.25, 490), (0.25, 517), (0.25, 530), (0.25, 309), (0.25, 508), (0.25, 493), (0.25, 91), (0.25, 372), (0.25, 551), (0.25, 150), (0.16666666666666666, 157), (0.16666666666666666, 42), (0.16666666666666666, 50), (0.16666666666666666, 41), (0.16666666666666666, 141), (0.16666666666666666, 172), (0.16666666666666666, 119), (0.16666666666666666, 94), (0.16666666666666666, 113), (0.16666666666666666, 195), (0.16666666666666666, 29), (0.16666666666666666, 55), (0.16666666666666666, 78), (0.16666666666666666, 71), (0.16666666666666666, 266), (0.16666666666666666, 92), (0.16666666666666666, 241), (0.16666666666666666, 16), (0.16666666666666666, 31), (0.16666666666666666, 62), (0.16666666666666666, 95), (0.16666666666666666, 151), (0.16666666666666666, 130), (0.16666666666666666, 164), (0.16666666666666666, 154), (0.16666666666666666, 83), (0.16666666666666666, 227), (0.16666666666666666, 19), (0.16666666666666666, 234), (0.16666666666666666, 129), (0.16666666666666666, 155), (0.16666666666666666, 60), (0.16666666666666666, 205), (0.16666666666666666, 131), (0.16666666666666666, 66), (0.16666666666666666, 70), (0.16666666666666666, 237), (0.16666666666666666, 110), (0.16666666666666666, 230), (0.16666666666666666, 17), (0.16666666666666666, 88), (0.16666666666666666, 67), (0.16666666666666666, 26), (0.16666666666666666, 108), (0.16666666666666666, 4), (0.16666666666666666, 179), (0.16666666666666666, 65), (0.16666666666666666, 153), (0.16666666666666666, 79), (0.16666666666666666, 217), (0.16666666666666666, 15), (0.16666666666666666, 251), (0.16666666666666666, 51), (0.16666666666666666, 187), (0.16666666666666666, 263), (0.16666666666666666, 93), (0.16666666666666666, 239), (0.16666666666666666, 175), (0.16666666666666666, 243), (0.16666666666666666, 152), (0.16666666666666666, 89), (0.16666666666666666, 74), (0.16666666666666666, 102), (0.16666666666666666, 229), (0.16666666666666666, 173), (0.16666666666666666, 193), (0.16666666666666666, 0), (0.16666666666666666, 200)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 536
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`1`#`#`y`#`#`(* ? ?)`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 1 y) (* y 5)))
 nr_nodes: 8]
(CANDIDATE)[id: 410
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`1`#`#`(* ? ?)`x`#`#`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 1 (* x 1)) 5))
 nr_nodes: 8]
(CANDIDATE)[id: 121
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`5`#`#`5`#`#`(+ ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 5 5) (+ 1 x)))
 nr_nodes: 8]
(CANDIDATE)[id: 400
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`1`#`#`5`#`#`(+ ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (* (+ 1 5) (+ 1 x)))
 nr_nodes: 8]
(CANDIDATE)[id: 270
 encoding: (defun my_func (x y) ?)`(* ? ?)`(+ ? ?)`1`#`#`(* ? ?)`x`#`#`1`#`#`1`#`#`#
 s_expr: (defun my_func (x y) (* (+ 1 (* x 1)) 1))
 nr_nodes: 8]
[Generation 3]
[Computing fitness]
[(1.5, 536), (1.375, 410), (1.375, 593), (1.25, 541), (1.25, 121), (1.25, 400), (1.25, 510), (1.25, 636), (1.25, 632), (1.25, 270), (1.125, 607), (1.125, 619), (1.125, 165), (1.125, 598), (1.125, 404), (1.125, 627), (1.125, 355), (1.125, 75), (1.125, 651), (1.125, 406), (1.125, 81), (1.125, 9), (1.125, 630), (1.125, 684), (1.125, 597), (1.0, 609), (1.0, 611), (1.0, 206), (1.0, 120), (1.0, 417), (1.0, 25), (1.0, 123), (1.0, 104), (1.0, 22), (1.0, 538), (1.0, 634), (1.0, 506), (1.0, 522), (1.0, 612), (1.0, 296), (1.0, 49), (1.0, 613), (1.0, 653), (1.0, 615), (1.0, 524), (1.0, 401), (1.0, 220), (1.0, 499), (1.0, 407), (1.0, 509), (1.0, 140), (1.0, 594), (1.0, 122), (1.0, 69), (0.875, 215), (0.875, 621), (0.875, 525), (0.875, 616), (0.75, 501), (0.75, 628), (0.75, 646), (0.75, 514), (0.625, 345), (0.625, 211), (0.625, 87), (0.625, 20), (0.625, 502), (0.625, 500), (0.625, 542), (0.625, 189), (0.625, 624), (0.625, 512), (0.625, 623), (0.625, 418), (0.625, 520), (0.625, 595), (0.625, 315), (0.625, 61), (0.625, 411), (0.625, 145), (0.625, 518), (0.625, 117), (0.625, 168), (0.625, 10), (0.625, 180), (0.625, 633), (0.625, 416), (0.625, 635), (0.625, 596), (0.625, 533), (0.5, 177), (0.5, 641), (0.5, 419), (0.5, 53), (0.5, 375), (0.5, 431), (0.5, 657), (0.5, 648), (0.5, 537), (0.5, 287), (0.5, 515), (0.5, 629), (0.5, 642), (0.5, 423), (0.5, 535), (0.5, 288), (0.5, 162), (0.5, 529), (0.5, 433), (0.5, 532), (0.5, 521), (0.5, 504), (0.5, 317), (0.5, 405), (0.5, 516), (0.5, 98), (0.5, 386), (0.5, 618), (0.5, 527), (0.5, 603), (0.5, 222), (0.5, 605), (0.5, 32), (0.5, 639), (0.5, 539), (0.5, 644), (0.5, 421), (0.5, 654), (0.5, 301), (0.5, 543), (0.5, 420), (0.5, 667), (0.5, 114), (0.5, 138), (0.5, 640), (0.5, 346), (0.5, 638), (0.5, 329), (0.5, 96), (0.5, 432), (0.5, 645), (0.5, 322), (0.5, 371), (0.5, 413), (0.5, 427), (0.5, 409), (0.5, 30), (0.5, 540), (0.375, 545), (0.375, 57), (0.375, 558), (0.375, 147), (0.375, 382), (0.375, 156), (0.375, 498), (0.375, 561), (0.375, 361), (0.375, 294), (0.375, 563), (0.375, 444), (0.375, 546), (0.375, 191), (0.375, 403), (0.375, 664), (0.375, 231), (0.375, 436), (0.375, 685), (0.375, 677), (0.375, 544), (0.375, 442), (0.375, 209), (0.375, 553), (0.375, 676), (0.375, 443), (0.375, 204), (0.375, 446), (0.375, 434), (0.375, 691), (0.375, 663), (0.375, 661), (0.375, 559), (0.375, 330), (0.375, 167), (0.375, 669), (0.375, 599), (0.375, 399), (0.375, 671), (0.375, 299), (0.375, 556), (0.375, 44), (0.375, 549), (0.375, 690), (0.375, 665), (0.375, 626), (0.375, 673), (0.375, 438), (0.375, 198), (0.375, 445), (0.375, 659), (0.375, 550), (0.375, 101), (0.375, 649), (0.375, 68), (0.375, 437), (0.375, 439), (0.375, 547), (0.375, 369), (0.375, 555), (0.375, 84), (0.375, 693), (0.375, 12), (0.375, 670), (0.375, 689), (0.375, 402), (0.375, 682), (0.29166666666666663, 249), (0.29166666666666663, 247), (0.29166666666666663, 489), (0.29166666666666663, 456), (0.29166666666666663, 466), (0.29166666666666663, 584), (0.29166666666666663, 192), (0.29166666666666663, 235), (0.29166666666666663, 589), (0.29166666666666663, 207), (0.29166666666666663, 21), (0.29166666666666663, 118), (0.29166666666666663, 34), (0.29166666666666663, 260), (0.29166666666666663, 395), (0.29166666666666663, 163), (0.29166666666666663, 485), (0.29166666666666663, 454), (0.29166666666666663, 572), (0.29166666666666663, 458), (0.29166666666666663, 573), (0.29166666666666663, 257), (0.29166666666666663, 455), (0.29166666666666663, 567), (0.29166666666666663, 373), (0.29166666666666663, 183), (0.29166666666666663, 311), (0.29166666666666663, 166), (0.29166666666666663, 59), (0.29166666666666663, 578), (0.29166666666666663, 45), (0.29166666666666663, 464), (0.29166666666666663, 99), (0.29166666666666663, 469), (0.29166666666666663, 574), (0.29166666666666663, 258), (0.29166666666666663, 581), (0.29166666666666663, 139), (0.29166666666666663, 337), (0.29166666666666663, 353), (0.29166666666666663, 564), (0.29166666666666663, 587), (0.29166666666666663, 56), (0.29166666666666663, 284), (0.29166666666666663, 571), (0.29166666666666663, 591), (0.29166666666666663, 449), (0.29166666666666663, 223), (0.29166666666666663, 480), (0.29166666666666663, 566), (0.29166666666666663, 212), (0.29166666666666663, 182), (0.29166666666666663, 465), (0.29166666666666663, 342), (0.29166666666666663, 370), (0.29166666666666663, 471), (0.29166666666666663, 292), (0.29166666666666663, 575), (0.29166666666666663, 451), (0.29166666666666663, 462), (0.29166666666666663, 366), (0.29166666666666663, 190), (0.29166666666666663, 24), (0.29166666666666663, 97), (0.29166666666666663, 570), (0.29166666666666663, 351), (0.29166666666666663, 592), (0.29166666666666663, 586), (0.29166666666666663, 197), (0.29166666666666663, 343), (0.29166666666666663, 228), (0.29166666666666663, 478), (0.29166666666666663, 63), (0.29166666666666663, 477), (0.29166666666666663, 14), (0.29166666666666663, 474), (0.29166666666666663, 379), (0.29166666666666663, 488), (0.29166666666666663, 453), (0.29166666666666663, 362), (0.29166666666666663, 259), (0.29166666666666663, 460), (0.29166666666666663, 576), (0.29166666666666663, 385), (0.29166666666666663, 483), (0.29166666666666663, 246), (0.29166666666666663, 8), (0.29166666666666663, 476), (0.29166666666666663, 468), (0.29166666666666663, 248), (0.29166666666666663, 580), (0.29166666666666663, 171), (0.29166666666666663, 196), (0.29166666666666663, 308), (0.29166666666666663, 352), (0.29166666666666663, 142), (0.29166666666666663, 569), (0.29166666666666663, 3), (0.29166666666666663, 107), (0.29166666666666663, 473), (0.29166666666666663, 482), (0.29166666666666663, 448), (0.29166666666666663, 203), (0.29166666666666663, 46), (0.29166666666666663, 583), (0.29166666666666663, 238), (0.29166666666666663, 487), (0.29166666666666663, 186), (0.29166666666666663, 459), (0.29166666666666663, 582), (0.25, 494), (0.25, 381), (0.25, 48), (0.25, 161), (0.25, 526), (0.25, 116), (0.25, 658), (0.25, 495), (0.25, 27), (0.25, 530), (0.25, 425), (0.25, 363), (0.25, 414), (0.25, 290), (0.25, 64), (0.25, 54), (0.25, 184), (0.25, 250), (0.25, 39), (0.25, 601), (0.25, 28), (0.25, 656), (0.25, 497), (0.25, 492), (0.25, 11), (0.25, 600), (0.25, 47), (0.25, 358), (0.25, 135), (0.25, 356), (0.25, 441), (0.25, 507), (0.25, 314), (0.25, 496), (0.25, 274), (0.25, 360), (0.25, 490), (0.25, 279), (0.25, 554), (0.25, 174), (0.25, 365), (0.25, 2), (0.25, 517), (0.25, 339), (0.25, 306), (0.25, 344), (0.25, 208), (0.25, 491), (0.25, 125), (0.25, 106), (0.25, 188), (0.25, 181), (0.25, 252), (0.25, 85), (0.25, 264), (0.25, 647), (0.25, 387), (0.25, 675), (0.25, 394), (0.25, 652), (0.25, 111), (0.25, 137), (0.25, 552), (0.25, 58), (0.25, 557), (0.25, 429), (0.25, 77), (0.25, 297), (0.25, 679), (0.25, 332), (0.25, 687), (0.25, 680), (0.25, 33), (0.25, 341), (0.125, 631)]
[Cross-over]
Top 5 candidates:
(CANDIDATE)[id: 536
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`1`#`#`y`#`#`(* ? ?)`y`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 1 y) (* y 5)))
 nr_nodes: 8]
(CANDIDATE)[id: 410
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`1`#`#`(* ? ?)`x`#`#`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 1 (* x 1)) 5))
 nr_nodes: 8]
(CANDIDATE)[id: 593
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`1`#`#`(* ? ?)`x`#`#`1`#`#`5`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 1 (* x 1)) 5))
 nr_nodes: 8]
(CANDIDATE)[id: 541
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(* ? ?)`(+ ? ?)`x`#`#`1`#`#`5`#`#`y`#`#`#
 s_expr: (defun my_func (x y) (+ (* (+ x 1) 5) y))
 nr_nodes: 8]
(CANDIDATE)[id: 121
 encoding: (defun my_func (x y) ?)`(+ ? ?)`(+ ? ?)`5`#`#`5`#`#`(+ ? ?)`1`#`#`x`#`#`#
 s_expr: (defun my_func (x y) (+ (+ 5 5) (+ 1 x)))
 nr_nodes: 8]
[Generation 4]
[Computing fitness]
Found ideal candidate: (defun my_func (x y) (+ (+ 1 (* x 1)) (* y 5)))

Process finished with exit code 0
